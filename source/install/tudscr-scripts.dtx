% \CheckSum{266}
% \iffalse meta-comment
%
% ============================================================================
% 
%  TUD-KOMA-Script
%  Copyright (c) Falk Hanisch <tudscr@gmail.com>, 2012-2015
% 
% ============================================================================
% 
%  This work may be distributed and/or modified under the conditions of the
%  LaTeX Project Public License, version 1.3c of the license. The latest
%  version of this license is in http://www.latex-project.org/lppl.txt and 
%  version 1.3c or later is part of all distributions of LaTeX 2005/12/01
%  or later and of this work. This work has the LPPL maintenance status 
%  "author-maintained". The current maintainer and author of this work
%  is Falk Hanisch.
% 
% ----------------------------------------------------------------------------
% 
% Dieses Werk darf nach den Bedingungen der LaTeX Project Public Lizenz
% in der Version 1.3c, verteilt und/oder veraendert werden. Die aktuelle 
% Version dieser Lizenz ist http://www.latex-project.org/lppl.txt und 
% Version 1.3c oder spaeter ist Teil aller Verteilungen von LaTeX 2005/12/01 
% oder spaeter und dieses Werks. Dieses Werk hat den LPPL-Verwaltungs-Status 
% "author-maintained", wird somit allein durch den Autor verwaltet. Der 
% aktuelle Verwalter und Autor dieses Werkes ist Falk Hanisch.
% 
% ============================================================================
%
% \fi
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \iffalse
%<*driver>
\ifx\ProvidesFile\undefined\def\ProvidesFile#1[#2]{}\fi
\ProvidesFile{tudscr-scripts.dtx}[%
  2015/05/12 v2.04 TUD-KOMA-Script installation scripts%
]
\RequirePackage[ngerman=ngerman-x-latest]{hyphsubst}
\documentclass[english,ngerman]{tudscrdoc}
\usepackage{selinput}\SelectInputMappings{adieresis={ä},germandbls={ß}}
\usepackage[T1]{fontenc}
\usepackage{babel}
\usepackage{tudscrfonts} % only load this package, if the fonts are installed
\KOMAoptions{parskip=half-}
\CodelineIndex
\RecordChanges
\GetFileInfo{tudscr-scripts.dtx}
\begin{document}
  \maketitle
  \DocInput{\filename}
\end{document}
%</driver>
% \fi
%
% \selectlanguage{ngerman}
%
% \changes{v2.03}{2015/01/23}{\pkg{mweights} unnötig}^^A
% \changes{v2.04}{2015/03/11}{MiKTeX Portable wird unterstützt}^^A
% \changes{v2.04}{2015/04/12}{Bugfix für Windowspfade mit Leerzeichen}^^A
% \changes{v2.04}{2015/04/22}{Bugfix für MiKTeX-Maps}^^A
% \changes{v2.04}{2015/04/24}{Tex Live Portable wird unterstützt}^^A
% \changes{v2.04}{2015/05/12}{Pakete für T1-Kodierung obligatorisch}^^A
%
% \section{Installationsskripte}
%
% Hier werden die Installationsskripte für Windows und Linux automatisch
% generiert.
%
% \StopEventually{\PrintIndex\PrintChanges}
%
% \subsection{Installationsskripte für Windows}
%
%    \begin{macrocode}
%
% \iffalse
%<*win>
% \fi
%
@echo off
rem
rem Autor: Falk Hanisch
rem
rem getestet auf:
rem Microsoft Windows Vista Business
rem Microsoft Windows 7 Professional x64
rem Microsoft Windows 8 Pro x64
rem
rem in Kombination mit:
rem MiKTeX 2.9 32-bit
rem MiKTeX Portable 2.9 32-bit
rem MiKTeX 2.9 64-bit
rem TeX Live 2013
rem TeX Live 2014
rem
echo.
echo  =====================================================================
%<convert>echo   Konvertieren der TUD-CD-Schriften unter Windows
%<full>echo   Installation TUD-KOMA-Script + TUD-CD-Schriften unter Windows
%<update>echo   Update TUD-KOMA-Script unter Windows
%<font>echo   Installation TUD-CD-Schriften unter Windows
%<convfont>echo   Installation der konvertierten TUD-CD-Schriften unter Windows
%<uninstall>echo   Deinstallation TUD-KOMA-Script unter Windows
%<old>echo   fuer obsolete Klassen und Pakete
%!echoTUDVersion
echo.
cd /d %~dp0
%
% \iffalse
%<*!uninstall>
%<*full|update>
% \fi
%
set version=%~n0
set version=%version:~7,-8%
%
% \iffalse
%</full|update>
% \fi
%
if exist tudscrtemp rmdir /s /q tudscrtemp> nul
mkdir tudscrtemp\converted
cd tudscrtemp
%    \end{macrocode}
% Als erstes wird nach einer LaTeX-Distribution gesucht.
%    \begin{macrocode}
set texpath=
where latex.exe> nul 2> nul> texpath.tmp
set /p texpath=<texpath.tmp
if "%texpath%"=="" (
 goto :nothing
)
echo  =====================================================================
echo.
echo   Notwendige Dateien und Pakete werden gesucht.
echo.
set missing=false
call:checkfile "7za.exe"
%<full|update>call:checkfile "tudscr_%version%.zip"
%
% \iffalse
%<*full|font|convert>
% \fi
%
call:checkfile "Univers_PS.zip"
call:checkfile "DIN_Bd_PS.zip"
call:checkpackage "fontinst.sty"
%<!old>call:checkfile "tudscr_fonts_install.zip"
%
% \iffalse
%</full|font|convert>
%<*!old>
% \fi
%
%<convfont>call:checkfile "tudscr_fonts_converted.zip"
call:checkpackage "type1ec.sty"
call:checkpackage "lmodern.sty"
call:checkpackage "cmbright.sty"
call:checkpackage "hfbright.map"
call:checkpackage "iwona.sty"
%
% \iffalse
%</!old>
% \fi
%
if "%missing%" == "true" goto :abort
echo.
echo   Es wurden alle notwendigen Dateien und Pakete gefunden.
echo.
echo  =====================================================================
echo.
%
% \iffalse
%<*!convert>
% \fi
%
set distrib=
tex --version> distrib.tmp
set /p distrib=< distrib.tmp
set texmfpath=
kpsewhich --var-value=TEXMFHOME> texmfpath.tmp
set /p texmfpath=< texmfpath.tmp
%    \end{macrocode}
% Die Variable \val{TEXMFHOME} wird momentan nur von TeX~Live bereitgestellt. 
% Für MiKTeX wird daher für einen lokalen LaTeX-Ordner als alternativer Pfad 
% das Nutzerverzeichnis empfohlen.
%    \begin{macrocode}
if "%texmfpath%"=="" (
  echo %USERPROFILE%\texmf> texmfpath.tmp
  set /p texmfpath=< texmfpath.tmp
)
%    \end{macrocode}
% Außerdem wird unterschieden, ob es sich um eine normale oder eine portable 
% Installation handelt. Mit \val{wmic} werden alle vorhandenen Laufwerke und 
% deren Typ ausgegeben. In der Schleife wird geprüft, ob \LaTeX auf der HDD 
% oder einem USB-Stick installiert ist. 
%    \begin{macrocode}
set portable=false
for /f "usebackq tokens=1,2" %%a in (
  `wmic logicaldisk get caption^,drivetype`
) do (
  if "%%a"=="%texpath:~,2%" (
    if %%b==2 set portable=true
  )
)
:MiKTeX
  echo %distrib% | find "MiKTeX"> nul
  if errorlevel 1 goto :TeXLive
  set distrib="MiKTeX"
  if "%portable%" == "true" (
%    \end{macrocode}
% Für eine portable MiKTeX-Installation wird als lokaler LaTeX-Pfad einer auf
% der gleichen Ordnerebene vorgeschlagen.
%    \begin{macrocode}
    setlocal enabledelayedexpansion
      pushd !cd!
      cd /d !texpath:~,2!
      cd !texpath:~,-10!\..\..\..
      set texmfpath=!cd!\texmf
      popd
      echo !texmfpath!> texmfpath.tmp
    endlocal
    set /p texmfpath=< texmfpath.tmp
    echo   LaTeX-Distribution MiKTeX Portable gefunden
  ) else (
    echo   LaTeX-Distribution MiKTeX gefunden
  )
  goto :resume
:TeXLive
  echo %distrib% | find "TeX Live"> nul
  if errorlevel 1 goto :nothing
  set distrib="TeXLive"
  if "%portable%" == "true" (
    echo   LaTeX-Distribution TeX Live Portable gefunden
  ) else (
    echo   LaTeX-Distribution TeX Live gefunden
  )
  goto :resume
:nothing
  echo.
  echo   TeX Live oder MiKTeX wurden nicht gefunden
  echo  =====================================================================
  echo.
  goto :abort
:resume
  echo.
  echo  =====================================================================
%<full>  echo   Installation des TUD-KOMA-Script-Bundles
%<update>  echo   Update des TUD-KOMA-Script-Bundles
%<font>  echo   Installation der TUD-CD-Schriften
%<convfont>  echo   Installation der konvertierten TUD-CD-Schriften
  echo.
  echo   Es sollte ein Verzeichnis jenseits der Distributionsordnerstruktur
  if "%portable%" == "true" (
    echo   auf dem USB-Stick verwendet werden:
  ) else (
    echo   im lokalen Benutzerpfad verwendet werden:
  )
  echo.
  echo   %texmfpath%
  echo.
:proof_userinput
  echo  =====================================================================
  echo.
  set /p texmfpath=< texmfpath.tmp
  set "texmfpath=%texmfpath:/=\%"
  if "%texmfpath:~-1%"=="\" set texmfpath=%texmfpath:~,-1%
  echo %texmfpath%> texmfpath.tmp
  echo   Soll das Verzeichnis %texmfpath% genutzt werden?
  if not exist "%texmfpath%" (
    echo   Der angegebene Ordner existiert nicht, wird jedoch erstellt.
  )
  echo   [j]a (ENTER) / [n]ein:
  echo.
  set w=
  set /p w=
  echo.
  if /i "%w%"=="" goto install
  if /i "%w%"=="j" goto install
  if /i "%w%"=="n" goto set_texmfpath
  goto proof_userinput
:set_texmfpath
  set texmfpath=
  echo   Geben Sie das Installationsverzeichnis an (ohne Anfuerungszeichen):
  echo.
  set /p texmfpath=
  echo %texmfpath%> texmfpath.tmp
  goto proof_userinput
:install
  echo.
  echo  =====================================================================
%<full>  echo   Installation des TUD-KOMA-Script-Bundles in:
%<update>  echo   Update des TUD-KOMA-Script-Bundles in:
%<font>  echo   Installation der TUD-CD-Schriften in:
%<convfont>  echo   Installation der konvertierten TUD-CD-Schriften in:
  echo   %texmfpath%
  echo  =====================================================================
  echo.
  set /p texmfpath=< texmfpath.tmp
  if not exist "%texmfpath%" mkdir "%texmfpath%"
%
% \iffalse
%</!convert>
%<*convert>
% \fi
%
set texmfpath=%~dp0
echo.
echo  =====================================================================
echo   Erzeugen der TUD-CD-Schriften
echo  =====================================================================
echo.
%
% \iffalse
%</convert>
%</!uninstall>
%<*uninstall>
% \fi
%
kpsewhich --var-value=TEXMFDIST> texmfpath.tmp
set /p texmfdist=< texmfpath.tmp
kpsewhich tudscrbase.sty --all> texmfpath.tmp
setlocal enabledelayedexpansion
for /f "tokens=*" %%f in (texmfpath.tmp) do (
  set "texmfpath=%%f"
  if "%%f"=="!texmfpath:%texmfdist%=!" (
    set texmfpath=!texmfpath:tudscrbase.sty=!
    echo =====================================================================
    echo   Soll TUD-KOMA-Script aus folgendem Pfad entfernt werden?
    echo   !texmfpath!
    echo =====================================================================
    echo.
    echo   [j]a ^(ENTER^) / [n]ein:
    echo.
    set /p w=
    if /i "!w!"=="" call:uninstall "!texmfpath!"
    if /i "!w!"=="j" call:uninstall "!texmfpath!"
    echo.
  )
)
endlocal
del texmfpath.tmp> nul
texhash
echo.
echo  =====================================================================
echo   Es wurde keine (weitere) lokale Nutzerinstallation von
echo   TUD-KOMA-Script gefunden. Die Deinstallation wird beendet.
echo  =====================================================================
echo.
pause
exit /b 0
:uninstall
  pushd %cd%
  cd /d %~d1
  cd %~1
  if exist logo rmdir /s /q logo> nul
  del *.clo> nul
  del *.cls> nul
  del *.sty> nul
  cd ..\..\..
  if exist doc\latex\tudscr rmdir /s /q doc\latex\tudscr> nul
  if exist source\latex\tudscr rmdir /s /q source\latex\tudscr> nul
  popd
  goto:eof
%
% \iffalse
%</uninstall>
%<*!uninstall>
% \fi
%
  cd /d %~dp0
%<full|update>  7za x tudscr_%version%.zip -o"%texmfpath%" -y
%<convfont>  7za x tudscr_fonts_converted.zip -o"%texmfpath%" -y
%
% \iffalse
%<*full|font|convert>
% \fi
%
  7za e Univers_PS.zip -o"tudscrtemp" -y
  7za e DIN_Bd_PS.zip -o"tudscrtemp" -y
%<!old>  7za e tudscr_fonts_install.zip -o"tudscrtemp\converted" -y
  cd tudscrtemp
%
% \iffalse
%<*old>
% \fi
%
  copy uvcel___.pfb converted\aunl8a.pfb> nul
  copy uvcel___.afm converted\aunl8a.afm> nul
  copy uvxlo___.pfb converted\aunlo8a.pfb> nul
  copy uvxlo___.afm converted\aunlo8a.afm> nul
  copy uvce____.pfb converted\aunr8a.pfb> nul
  copy uvce____.afm converted\aunr8a.afm> nul
  copy uvceo___.pfb converted\aunro8a.pfb> nul
  copy uvceo___.afm converted\aunro8a.afm> nul
  copy uvceb___.pfb converted\aunb8a.pfb> nul
  copy uvceb___.afm converted\aunb8a.afm> nul
  copy uvxbo___.pfb converted\aunbo8a.pfb> nul
  copy uvxbo___.afm converted\aunbo8a.afm> nul
  copy uvcz____.pfb converted\aubr8a.pfb> nul
  copy uvcz____.afm converted\aubr8a.afm> nul
  copy uvczo___.pfb converted\aubro8a.pfb> nul
  copy uvczo___.afm converted\aubro8a.afm> nul
  copy DINBd___.pfb converted\dinb8a.pfb> nul
  copy DINBd___.afm converted\dinb8a.afm> nul
  cd converted
  echo \input fontinst.sty> installoldfonts.tex
  echo \needsfontinstversion{1.933}>> installoldfonts.tex
  echo \recordtransforms{record.tex}>> installoldfonts.tex
  echo \latinfamily{aun}{}>> installoldfonts.tex
  echo \latinfamily{aub}{}>> installoldfonts.tex
  echo \latinfamily{din}{}>> installoldfonts.tex
  echo \endrecordtransforms>> installoldfonts.tex
  echo \bye>> installoldfonts.tex
  latex installoldfonts.tex
%
% \iffalse
%</old>
%<*!old>
% \fi
%
  copy uvcel___.pfb converted\lunl8a.pfb> nul
  copy uvcel___.afm converted\lunl8a.afm> nul
  copy uvxlo___.pfb converted\lunlo8a.pfb> nul
  copy uvxlo___.afm converted\lunlo8a.afm> nul
  copy uvce____.pfb converted\lunr8a.pfb> nul
  copy uvce____.afm converted\lunr8a.afm> nul
  copy uvceo___.pfb converted\lunro8a.pfb> nul
  copy uvceo___.afm converted\lunro8a.afm> nul
  copy uvceb___.pfb converted\lunb8a.pfb> nul
  copy uvceb___.afm converted\lunb8a.afm> nul
  copy uvxbo___.pfb converted\lunbo8a.pfb> nul
  copy uvxbo___.afm converted\lunbo8a.afm> nul
  copy uvcz____.pfb converted\lunc8a.pfb> nul
  copy uvcz____.afm converted\lunc8a.afm> nul
  copy uvczo___.pfb converted\lunco8a.pfb> nul
  copy uvczo___.afm converted\lunco8a.afm> nul
  copy DINBd___.pfb converted\0m6b8a.pfb> nul
  copy DINBd___.afm converted\0m6b8a.afm> nul
  echo.
  echo  =====================================================================
  echo   Virtuelle Schriften erzeugen. (Dies kann einen Moment dauern)
  echo  =====================================================================
  echo.
  cd converted
  echo 00/19
  tftopl cmbr10.tfm cmbr10.pl
  echo 01/19
  tftopl cmbrsl10.tfm cmbrsl10.pl
  echo 02/19
  tftopl cmbrbx10.tfm cmbrbx10.pl
  echo 03/19
  tftopl tbmr10.tfm tbmr10.pl
  echo 04/19
  tftopl tbmo10.tfm tbmo10.pl
  echo 05/19
  tftopl tbsr10.tfm tbsr10.pl
  echo 06/19
  tftopl tbso10.tfm tbso10.pl
  echo 07/19
  tftopl tbbx10.tfm tbbx10.pl
  echo 08/19
  tftopl cmbrmi10.tfm cmbrmi10.pl
  echo 09/19
  tftopl cmbrmb10.tfm cmbrmb10.pl
  echo 10/19
  tftopl cmbrsy10.tfm cmbrsy10.pl
  echo 11/19
  tftopl sy-iwonamz.tfm sy-iwonamz.pl
  echo 12/19
  tftopl sy-iwonahz.tfm sy-iwonahz.pl
  echo 13/19
  tftopl rm-iwonach.tfm rm-iwonach.pl
  echo 14/19
  tftopl rm-iwonachi.tfm rm-iwonachi.pl
  echo 15/19
  tftopl ts1-iwonach.tfm ts1-iwonach.pl
  echo 16/19
  tftopl ts1-iwonachi.tfm ts1-iwonachi.pl
  echo 17/19
  tftopl mi-iwonachi.tfm mi-iwonachi.pl
  echo 18/19
  tftopl sy-iwonachz.tfm sy-iwonachz.pl
  echo 19/19
  latex installfonts.tex
%
% \iffalse
%</!old>
% \fi
%
  dir /b *.pl> files.txt
  for /f "delims=. " %%i in (files.txt) do pltotf %%i.pl %%i.tfm
  dir /b *.vpl> files.txt
  for /f "delims=. " %%i in (files.txt) do vptovf %%i.vpl %%i.vf %%i.tfm
%
% \iffalse
%<*old>
% \fi
%
  echo \input finstmsc.sty> createoldmap.tex
  echo \resetstr{PSfontsuffix}{.pfb}>> createoldmap.tex
  echo \adddriver{dvips}{tud.map}>> createoldmap.tex
  echo \input record.tex>> createoldmap.tex
  echo \donedrivers>> createoldmap.tex
  echo \bye>> createoldmap.tex
%
% \iffalse
%</old>
% \fi
%
%<old>  latex createoldmap.tex
%<!old>  latex createmap.tex
  echo.
  echo  =====================================================================
  echo   Konvertierung abgeschlossen.
  echo  =====================================================================
  echo.
%<old>  set localfolder=tud
%<!old>  set localfolder=tudscr
  if not exist "%texmfpath%\tex\latex\%localfolder%\fonts" (
    mkdir "%texmfpath%\tex\latex\%localfolder%\fonts"
  )
  if not exist "%texmfpath%\fonts\tfm\%localfolder%" (
    mkdir "%texmfpath%\fonts\tfm\%localfolder%"
  )
  if not exist "%texmfpath%\fonts\afm\%localfolder%" (
    mkdir "%texmfpath%\fonts\afm\%localfolder%"
  )
  if not exist "%texmfpath%\fonts\vf\%localfolder%" (
    mkdir "%texmfpath%\fonts\vf\%localfolder%"
  )
  if not exist "%texmfpath%\fonts\type1\%localfolder%" (
    mkdir "%texmfpath%\fonts\type1\%localfolder%"
  )
  if not exist "%texmfpath%\fonts\map\dvips\%localfolder%" (
    mkdir "%texmfpath%\fonts\map\dvips\%localfolder%"
  )
  if not exist "%texmfpath%\fonts\map\pdftex\%localfolder%" (
    mkdir "%texmfpath%\fonts\map\pdftex\%localfolder%"
  )
  copy /y *.fd  "%texmfpath%\tex\latex\%localfolder%\fonts"
  copy /y *.tfm "%texmfpath%\fonts\tfm\%localfolder%"
  copy /y *.afm "%texmfpath%\fonts\afm\%localfolder%"
  copy /y *.vf  "%texmfpath%\fonts\vf\%localfolder%"
  copy /y *.pfb "%texmfpath%\fonts\type1\%localfolder%"
  copy /y *.map "%texmfpath%\fonts\map\dvips\%localfolder%"
  copy /y *.map "%texmfpath%\fonts\map\pdftex\%localfolder%"
%
% \iffalse
%</full|font|convert>
% \fi
%
  set "texmfpath=%texmfpath:\=/%"
%
% \iffalse
%<*!convert>
% \fi
%
  if %distrib%=="MiKTeX" goto :MiKTeXHash
:TeXLiveHash
  texhash
%<(full|font)&old>  updmap-sys --enable Map=tud.map
%<(full|font|convfont)&!old>  updmap-sys --enable Map=tudscr.map
  goto :end
:MiKTeXHash
  initexmf --register-root="%texmfpath%"
  initexmf --update-fndb="%texmfpath%"
%
% \iffalse
%</!convert>
%<*full|font|convfont>
% \fi
%
  updmap
  set "texmfpath=%texmfpath:/=\%"
  set mapcfg=%texmfpath%\miktex\config\updmap.cfg
  if not exist "%mapcfg%" (
    if not exist "%texmfpath%\miktex\config" (
      mkdir "%texmfpath%\miktex\config"
    )
%<old>    echo Map tud.map> "%mapcfg%"
%<!old>    echo Map tudscr.map> "%mapcfg%"
  ) else (
%
% \iffalse
%<*old>
% \fi
%
    find "Map tud.map" "%mapcfg%"> nul
    if errorlevel 1 echo Map tud.map>> "%mapcfg%"
%
% \iffalse
%</old>
%<*!old>
% \fi
%
    find "Map tudscr.map" "%mapcfg%"> nul
    if errorlevel 1 echo Map tudscr.map>> "%mapcfg%"
%
% \iffalse
%</!old>
% \fi
%
  )
  initexmf --mkmaps
%
% \iffalse
%</full|font|convfont>
%<*!convert>
% \fi
%
:end
  echo.
  echo  =====================================================================
%<full|font|convfont>  echo   Die Installation wird beendet.
%<update>  echo   Das Update wird beendet.
  echo   Der Ordner mitsamt aller temporaeren Dateien wird geloescht.
  echo  =====================================================================
%
% \iffalse
%<*!old>
% \fi
%
  echo   Dokumentation und Beispiele fuer das TUD-KOMA-Script-Bundle sind
%<full|update>  echo   unter '%texmfpath%/doc/latex/tudscr' oder
  echo   ueber den Konsolenaufruf 'texdoc tudscr' zu finden.
  echo  =====================================================================
%
% \iffalse
%</!old>
% \fi
%
  echo.
  pause
%
% \iffalse
%</!convert>
% \fi
%
  cd /d %~dp0
  if exist tudscrtemp rmdir /s /q tudscrtemp> nul
  echo.
  exit /b 0
:abort
  echo.
  echo  =====================================================================
  echo   Abbruch der Installation, temporaere Dateien werden geloescht.
  echo  =====================================================================
  echo.
  pause
  cd /d %~dp0
  if exist tudscrtemp rmdir /s /q tudscrtemp> nul
  exit /b 0
:checkfile
  if not exist ../%~1 (
    set missing=true
    call:missingfile %~1
  )
  goto:eof
:missingfile
  echo  =====================================================================
  echo.
  echo   Die Datei %~1 wurde nicht gefunden. Diese wird fuer die
  echo   Installation zwingend benoetigt. Bitte kopieren Sie %~1
  echo   in das Verzeichnis des Skriptes und fuehren dieses abermals aus.
  echo.
  echo  =====================================================================
  goto:eof
:checkpackage
  set package=
  @echo on
  kpsewhich %~1
  @echo off
  kpsewhich %~1> package.tmp
  set /p package=< package.tmp
  if "%package%"=="" (
    set missing=true
    call:missingpackage %~1
  )
  goto:eof
:missingpackage
  echo  =====================================================================
  echo.
  echo   Das LaTeX-Paket %~1 wurde nicht gefunden. Dieses wird fuer
  echo   die Schriftinstallation zwingend benoetigt. Bitte %~1
  echo   installieren und danach dieses Skript abermals ausfuehren.
  echo.
  echo  =====================================================================
  goto:eof
%
% \iffalse
%</!uninstall>
%</win>
% \fi
%
%    \end{macrocode}
%
% \subsection{Installationsskripte für Unix-Systeme}
%
%    \begin{macrocode}
%
% \iffalse
%<*unix>
% \fi
%
#!/bin/bash
#
# Autor: Falk Hanisch, Jons-Tobias Wamhoff
#
# getestet auf:
# Ubuntu 14.04
#
# in Kombination mit:
# TeX Live 2013
# TeX Live 2014
#
%
% \iffalse
%<*!uninstall>
% \fi
%
# Vorausgesetzte Tools:
# unzip        (Ubuntu package unzip)
#
# Voraussetzte LaTeX Pakete:
# fontinst.sty (Ubuntu package texlive-font-utils)
# lmodern.sty  (Ubuntu package lmodern)
# cmbright.sty (Ubuntu package texlive-fonts-extra)
# iwona.sty    (Ubuntu package texlive-fonts-extra)
#
# Benoetigte Schriften (im gleichen Verzeichnis):
# DIN_Bd_PS.zip, Univers_PS.zip
#
# Hinweis!!!!!!
# Die Vorlagen und Schriften werden im lokalen Benutzerverzeichnis installiert:
# unter Linux in ~/.texmf und unter Mac OS in ~/Library/texmf.
# Nach Aenderungen an den globalen LaTeX Schriften (z.B. Updates) muss der
# Befehl 'updmap' aufgerufen werden damit die lokalen Schriften gefunden werden.
# Automatisch auf Mac OS geht das mit "TeX Live Utility.app":
# "Preferences..."->"Automatically enable fonts in my home directory."
#
# TODOs:
# lokale oder globale Installation
#
checkfile()
{
  if [ ! -f "$1" ]; then
    missing=true
    missingfile "$1"
  fi
}
missingfile()
{
  echo  =====================================================================
  echo
  echo   Die Datei $1 wurde nicht gefunden. Diese wird fuer die
  echo   Installation zwingend benoetigt. Bitte kopieren Sie $1
  echo   in das Verzeichnis des Skriptes und fuehren dieses abermals aus.
  echo
  echo  =====================================================================
}
checkpackage()
{
  package=$(kpsewhich $1)
  if [ -z "$package" ]; then
    missing=true
    missingpackage $1
  fi
}
missingpackage()
{
  echo  =====================================================================
  echo
  echo   Das LaTeX-Paket $1 wurde nicht gefunden. Dieses wird fuer
  echo   die Schriftinstallation zwingend benoetigt. Bitte $1
  echo   installieren und danach dieses Skript abermals ausfuehren.
  echo
  echo  =====================================================================
}
abort()
{
  echo
  echo  =====================================================================
  echo   Abbruch der Installation, temporaere Dateien werden geloescht.
  echo  =====================================================================
  echo
  cd ..
  rm -rf tudscrtemp
  exit 0
}
#
#
#
%
% \iffalse
%</!uninstall>
% \fi
%
echo
echo  =====================================================================
%<convert>echo   Konvertieren der TUD-CD-Schriften unter Unix
%<full>echo   Installation TUD-KOMA-Script + TUD-CD-Schriften unter Unix
%<update>echo   Update TUD-KOMA-Script unter Unix
%<font>echo   Installation TUD-CD-Schriften unter Unix
%<convfont>echo   Installation der konvertierten TUD-CD-Schriften unter Unix
%<uninstall>echo   Deinstallation TUD-KOMA-Script unter Unix
%<old>echo   fuer obsolete Klassen und Pakete
%!echoTUDVersion
echo
%
% \iffalse
%<*!uninstall>
%<*full|update>
% \fi
%
version="$(basename $0)"
version=$(echo $version|cut -c8-)
version=$(echo $version|rev|cut -c12-|rev)
%
% \iffalse
%</full|update>
% \fi
%
echo  =====================================================================
echo
echo   Notwendige Dateien und Pakete werden gesucht.
echo
missing=false
%<full|update>checkfile "tudscr_$version.zip"
%
% \iffalse
%<*full|font|convert>
% \fi
%
checkfile "Univers_PS.zip"
checkfile "DIN_Bd_PS.zip"
checkpackage "fontinst.sty"
%<!old>checkfile "tudscr_fonts_install.zip"
%
% \iffalse
%</full|font|convert>
%<*!old>
% \fi
%
%<convfont>checkfile "tudscr_fonts_converted.zip"
checkpackage "type1ec.sty"
checkpackage "lmodern.sty"
checkpackage "cmbright.sty"
checkpackage "hfbright.map"
checkpackage "iwona.sty"
%
% \iffalse
%</!old>
% \fi
%
if $missing ; then
  abort
fi
echo
echo   Es wurden alle notwendigen Dateien und Pakete gefunden.
echo
echo  =====================================================================
echo
rm -rf tudscrtemp
mkdir -p tudscrtemp/converted
%
% \iffalse
%<*!convert>
% \fi
%
texmfpath=$(kpsewhich --var-value=TEXMFHOME)
if [ -z "$texmfpath" ]; then
  texmfpath=$(kpsewhich --var-value=TEXMFLOCAL)
fi
%<full>echo   Installation des TUD-KOMA-Script-Bundles
%<update>echo   Update des TUD-KOMA-Script-Bundles
%<font>echo   Installation der TUD-CD-Schriften
%<convfont>echo   Installation der konvertierten TUD-CD-Schriften
echo   in den lokalen Benutzerpfad:
echo
echo   $texmfpath
echo
echo  =====================================================================
%
%
% \iffalse
%</!convert>
%<*convert>
% \fi
%
texmfpath=$""
echo
echo  =====================================================================
echo   Erzeugen der TUD-CD-Schriften
echo  =====================================================================
echo
%
% \iffalse
%</convert>
%</!uninstall>
%<*uninstall>
% \fi
%
uninstall()
{
  cd $1
  if [ -d logo ]; then
    rm -rf logo
  fi
  rm -f *.clo
  rm -f *.cls
  rm -f *.sty
  cd ../../..
  if [ -d doc/latex/tudscr ]; then
    rm -rf doc/latex/tudscr
  fi
  if [ -d source/latex/tudscr ]; then
    rm -rf source/latex/tudscr
  fi
}
texmfdist=$(kpsewhich --var-value=TEXMFDIST)
texmfpath=$(kpsewhich tudscrbase.sty --all)
while read -r line; do
  if [[ $line != *"$texmfdist"* ]]; then
    texmftemp=$(echo $line|rev|cut -c15-|rev)
    echo  =====================================================================
    echo   Soll TUD-KOMA-Script aus folgendem Pfad entfernt werden?
    echo   $texmftemp
    echo  =====================================================================
    echo
    select yn in "Yes" "No"; do
      case $yn in
        Yes ) uninstall $texmftemp; break;;
        No )  break;;
      esac
    done <&4;
    echo
  fi
done 4<&0 <<< "$texmfpath"
texhash
echo
echo  =====================================================================
echo   Es wurde keine \(weitere\) lokale Nutzerinstallation von
echo   TUD-KOMA-Script gefunden. Die Deinstallation wird beendet.
echo  =====================================================================
echo
exit 0
%
% \iffalse
%</uninstall>
%<*!uninstall>
% \fi
%
%<full|update>unzip -o tudscr_$version.zip -d $texmfpath
%<convfont>unzip -o tudscr_fonts_converted.zip -d $texmfpath
%
% \iffalse
%<*full|font|convert>
% \fi
%
unzip Univers_PS.zip -d tudscrtemp
unzip DIN_Bd_PS.zip -d tudscrtemp
%<!old>unzip tudscr_fonts_install.zip -d tudscrtemp/converted
cd tudscrtemp
%
% \iffalse
%<*old>
% \fi
%
cp uvcel___.pfb converted/aunl8a.pfb
cp uvcel___.afm converted/aunl8a.afm
cp uvxlo___.pfb converted/aunlo8a.pfb
cp uvxlo___.afm converted/aunlo8a.afm
cp uvce____.pfb converted/aunr8a.pfb
cp uvce____.afm converted/aunr8a.afm
cp uvceo___.pfb converted/aunro8a.pfb
cp uvceo___.afm converted/aunro8a.afm
cp uvceb___.pfb converted/aunb8a.pfb
cp uvceb___.afm converted/aunb8a.afm
cp uvxbo___.pfb converted/aunbo8a.pfb
cp uvxbo___.afm converted/aunbo8a.afm
cp uvcz____.pfb converted/aubr8a.pfb
cp uvcz____.afm converted/aubr8a.afm
cp uvczo___.pfb converted/aubro8a.pfb
cp uvczo___.afm converted/aubro8a.afm
cp DINBd___.pfb converted/dinb8a.pfb
cp DINBd___.afm converted/dinb8a.afm
cd converted
echo "\input fontinst.sty"> installoldfonts.tex
echo "\needsfontinstversion{1.933}">> installoldfonts.tex
echo "\recordtransforms{record.tex}">> installoldfonts.tex
echo "\latinfamily{aun}{}">> installoldfonts.tex
echo "\latinfamily{aub}{}">> installoldfonts.tex
echo "\latinfamily{din}{}">> installoldfonts.tex
echo "\endrecordtransforms">> installoldfonts.tex
echo "\bye">> installoldfonts.tex
latex installoldfonts.tex
%
% \iffalse
%</old>
%<*!old>
% \fi
%
cp uvcel___.pfb converted/lunl8a.pfb
cp uvcel___.afm converted/lunl8a.afm
cp uvxlo___.pfb converted/lunlo8a.pfb
cp uvxlo___.afm converted/lunlo8a.afm
cp uvce____.pfb converted/lunr8a.pfb
cp uvce____.afm converted/lunr8a.afm
cp uvceo___.pfb converted/lunro8a.pfb
cp uvceo___.afm converted/lunro8a.afm
cp uvceb___.pfb converted/lunb8a.pfb
cp uvceb___.afm converted/lunb8a.afm
cp uvxbo___.pfb converted/lunbo8a.pfb
cp uvxbo___.afm converted/lunbo8a.afm
cp uvcz____.pfb converted/lunc8a.pfb
cp uvcz____.afm converted/lunc8a.afm
cp uvczo___.pfb converted/lunco8a.pfb
cp uvczo___.afm converted/lunco8a.afm
cp DINBd___.pfb converted/0m6b8a.pfb
cp DINBd___.afm converted/0m6b8a.afm
echo
echo  =====================================================================
echo   Virtuelle Schriften erzeugen. \(Dies kann einen Moment dauern\)
echo  =====================================================================
echo
cd converted
echo 00/19
tftopl cmbr10.tfm cmbr10.pl
echo 01/19
tftopl cmbrsl10.tfm cmbrsl10.pl
echo 02/19
tftopl cmbrbx10.tfm cmbrbx10.pl
echo 03/19
tftopl tbmr10.tfm tbmr10.pl
echo 04/19
tftopl tbmo10.tfm tbmo10.pl
echo 05/19
tftopl tbsr10.tfm tbsr10.pl
echo 06/19
tftopl tbso10.tfm tbso10.pl
echo 07/19
tftopl tbbx10.tfm tbbx10.pl
echo 08/19
tftopl cmbrmi10.tfm cmbrmi10.pl
echo 09/19
tftopl cmbrmb10.tfm cmbrmb10.pl
echo 10/19
tftopl cmbrsy10.tfm cmbrsy10.pl
echo 11/19
tftopl sy-iwonamz.tfm sy-iwonamz.pl
echo 12/19
tftopl sy-iwonahz.tfm sy-iwonahz.pl
echo 13/19
tftopl rm-iwonach.tfm rm-iwonach.pl
echo 14/19
tftopl rm-iwonachi.tfm rm-iwonachi.pl
echo 15/19
tftopl ts1-iwonach.tfm ts1-iwonach.pl
echo 16/19
tftopl ts1-iwonachi.tfm ts1-iwonachi.pl
echo 17/19
tftopl mi-iwonachi.tfm mi-iwonachi.pl
echo 18/19
tftopl sy-iwonachz.tfm sy-iwonachz.pl
echo 19/19
latex installfonts.tex
%
% \iffalse
%</!old>
% \fi
%
for f in $(ls *.pl) ; do
  pltotf $f
done
for f in $(ls *.vpl) ; do
  vptovf $f
done
%
% \iffalse
%<*old>
% \fi
%
echo "\input finstmsc.sty"> createoldmap.tex
echo "\resetstr{PSfontsuffix}{.pfb}">> createoldmap.tex
echo "\adddriver{dvips}{tud.map}">> createoldmap.tex
echo "\input record.tex">> createoldmap.tex
echo "\donedrivers">> createoldmap.tex
echo "\bye">> createoldmap.tex
%
% \iffalse
%</old>
% \fi
%
%<old>latex createoldmap.tex
%<!old>latex createmap.tex
echo
echo  =====================================================================
echo   Konvertierung abgeschlossen.
echo  =====================================================================
echo
%<old>localfolder=tud
%<!old>localfolder=tudscr
mkdir -p $texmfpath/tex/latex/$localfolder/fonts
mkdir -p $texmfpath/fonts/tfm/$localfolder
mkdir -p $texmfpath/fonts/afm/$localfolder
mkdir -p $texmfpath/fonts/vf/$localfolder
mkdir -p $texmfpath/fonts/type1/$localfolder
mkdir -p $texmfpath/fonts/map/dvips/$localfolder
mkdir -p $texmfpath/fonts/map/pdftex/$localfolder
cp -f *.fd  $texmfpath/tex/latex/$localfolder/fonts
cp -f *.tfm $texmfpath/fonts/tfm/$localfolder
cp -f *.afm $texmfpath/fonts/afm/$localfolder
cp -f *.vf  $texmfpath/fonts/vf/$localfolder
cp -f *.pfb $texmfpath/fonts/type1/$localfolder
cp -f *.map $texmfpath/fonts/map/dvips/$localfolder
cp -f *.map $texmfpath/fonts/map/pdftex/$localfolder
%
% \iffalse
%</full|font|convert>
%<*!convert>
% \fi
%
texhash
%<(full|font)&old>updmap --enable Map=tud.map
%<(full|font|convfont)&!old>updmap --enable Map=tudscr.map
echo
echo  =====================================================================
%<full|font|convfont>echo   Die Installation wird beendet.
%<update>echo   Das Update wird beendet.
echo   Der Ordner mitsamt aller temporaeren Dateien wird geloescht.
echo  =====================================================================
%
% \iffalse
%<*!old>
% \fi
%
echo   Dokumentation und Beispiele fuer das TUD-KOMA-Script-Bundle sind
%<full|update>echo   unter $texmfpath/doc/latex/tudscr oder
echo   ueber den Konsolenaufruf texdoc tudscr zu finden.
echo  =====================================================================
%
% \iffalse
%</!old>
%</!convert>
% \fi
%
cd ../..
rm -rf tudscrtemp
exit 0
%
% \iffalse
%</!uninstall>
%</unix>
% \fi
%
%    \end{macrocode}
%
% \Finale
%
\endinput
