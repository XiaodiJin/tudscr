% \CheckSum{3593}
% \iffalse meta-comment
% 
% ============================================================================
% 
%  TUD-KOMA-Script
%  Copyright (c) Falk Hanisch <tudscr@gmail.com>, 2012-2016
% 
% ============================================================================
% 
%  This work may be distributed and/or modified under the conditions of the
%  LaTeX Project Public License, version 1.3c of the license. The latest
%  version of this license is in http://www.latex-project.org/lppl.txt and 
%  version 1.3c or later is part of all distributions of LaTeX 2005/12/01
%  or later and of this work. This work has the LPPL maintenance status 
%  "author-maintained". The current maintainer and author of this work
%  is Falk Hanisch.
% 
% ----------------------------------------------------------------------------
% 
% Dieses Werk darf nach den Bedingungen der LaTeX Project Public Lizenz
% in der Version 1.3c, verteilt und/oder veraendert werden. Die aktuelle 
% Version dieser Lizenz ist http://www.latex-project.org/lppl.txt und 
% Version 1.3c oder spaeter ist Teil aller Verteilungen von LaTeX 2005/12/01 
% oder spaeter und dieses Werks. Dieses Werk hat den LPPL-Verwaltungs-Status 
% "author-maintained", wird somit allein durch den Autor verwaltet. Der 
% aktuelle Verwalter und Autor dieses Werkes ist Falk Hanisch.
% 
% ============================================================================
%
% \fi
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \iffalse
%%% From File: tudscr-pagestyle.dtx
%<*driver>
\ifx\ProvidesFile\undefined\def\ProvidesFile#1[#2]{}\fi
\ProvidesFile{tudscr-pagestyle.dtx}[%
  2016/05/11 v2.05 TUD-KOMA-Script (pagestyle)%
]
\RequirePackage[ngerman=ngerman-x-latest]{hyphsubst}
\documentclass[english,ngerman,xindy]{tudscrdoc}
\usepackage{selinput}\SelectInputMappings{adieresis={ä},germandbls={ß}}
\usepackage[T1]{fontenc}
\usepackage{babel}
\usepackage{tudscrfonts} % only load this package, if the fonts are installed
\KOMAoptions{parskip=half-}
\usepackage{microtype}
\usepackage{bookmark}
\CodelineIndex
\RecordChanges
\GetFileInfo{tudscr-pagestyle.dtx}
\begin{document}
  \maketitle
  \DocInput{\filename}
\end{document}
%</driver>
% \fi
%
% \selectlanguage{ngerman}
%
% \changes{v2.02}{2014/06/23}{Paket \pkg{titlepage} nicht weiter unterstützt}^^A
% \changes{v2.02}{2014/07/08}{\cs{FamilyKeyState} wird von Optionen genutzt}^^A
% \changes{v2.05}{2015/07/06}{Seitenstil für Poster}^^A
%
% \section{Der Seitenstil des \CDs}
%
% Das \CD verlangt (eigentlich) einen fest vorgegebenen Satzspiegel. Für das
% Setzen längerer wissenschaftlicher Abhandlungen ist dieser jedoch alles
% andere als glücklich gewählt. Insbesondere für den doppelseitigen Satz ist
% das Standardlayout nicht gut nutzbar. Für die \TUDScript"=Klassen wird 
% deshalb die Abweichung vom sonst fest vorgegebenen Satzspiegel ermöglicht.
%
% \StopEventually{\PrintIndex\PrintChanges}
%
% \subsection{Definition der konstanten Größen und Maße}
%
% Die Vorlagen sollen neben den vom \CD vorgegebenen Seitenrändern weitere
% Layouts ermöglichen und u.\,a. auch die Nutzung des Paketes \pkg{typearea}
% erlauben. Damit ein einheitliches Verfahren zur Wahl bzw. Umschaltung des
% Satzspiegels genutzt werden kann, wird das Paket \pkg{geometry} genutzt.
% Dabei werden entweder die gewünschten Maße der Seitenränder direkt gewählt
% oder aber die mit \pkg{typearea} berechneten Maße an \pkg{geometry}
% durchgereicht.
%
% Als erstes werden die Standardmaße für die Seitenränder im \CD definiert,
% danach speziell für die \env{tudpage}"=Umgebung.
%
% \iffalse
%<*class&body>
% \fi
%
% \begin{length}{\tud@dim@widemargin}
% \begin{length}{\tud@dim@slimmargin}
% \begin{length}{\tud@dim@both}
% Die Seitenränder für links und rechts sowie deren Summe, welche später für
% weitere Layouts dazu verwendet wird, diese anteilig zu verteilen.
%    \begin{macrocode}
\newlength\tud@dim@widemargin
\newlength\tud@dim@slimmargin
\newlength\tud@dim@both
%    \end{macrocode}
% \end{length}^^A \tud@dim@both
% \end{length}^^A \tud@dim@slimmargin
% \end{length}^^A \tud@dim@widemargin
% \begin{length}{\tud@dim@topmargin}
% \begin{length}{\tud@dim@barheight}
% \begin{length}{\tud@dim@headsep}
% \begin{length}{\tud@dim@footsep}
% Es folgen die speziellen Maße für die Seiten mit dem TUD-Kopf, also die Höhe
% oberhalb des Querbalkens, die Höhe des Querbalkens selbst sowie der vertikale
% (Mindest"~)Abstand zwischen Querbalken und Textkörper sowie der Fußzeile.
%    \begin{macrocode}
\newlength\tud@dim@topmargin
\newlength\tud@dim@barheight
\newlength\tud@dim@headsep
\newlength\tud@dim@footsep
%    \end{macrocode}
% \end{length}^^A \tud@dim@footsep
% \end{length}^^A \tud@dim@headsep
% \end{length}^^A \tud@dim@barheight
% \end{length}^^A \tud@dim@topmargin
% \begin{length}{\tud@dim@logox}
% \begin{length}{\tud@dim@logoy}
% \begin{length}{\tud@dim@logowidth}
% Außerdem müssen noch die Abmessungen und die Position des TUD-Logos definiert
% werden, nämlich der horizontale (Soll"~)Abstand zwischen linkem Seitenrand
% und Logo, der vertikale (Soll"~)Abstand zwischen oberem Seitenrand und Logo
% sowie die Breite und Höhe\footnote{Proportionen sind durch die Grafik
% vorgegeben} des Logos.
%    \begin{macrocode}
\newlength\tud@dim@logox
\newlength\tud@dim@logoy
\newlength\tud@dim@logowidth
%    \end{macrocode}
% \end{length}^^A \tud@dim@logowidth
% \end{length}^^A \tud@dim@logoy
% \end{length}^^A \tud@dim@logox
% \begin{length}{\tud@dim@line}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{length}{\tud@dim@heavyline}
% \begin{length}{\tud@dim@thinline}
% Die Linienstärke der Outline im Kopf ist für ein monochromes Layout schmaler
% als im Layout mit farbigem Hintergrund.\footnote{%
% monochrom \cs{tud@dim@thinline}, koloriert \cs{tud@dim@heavyline}}%
% Da im Dokument beide Varianten vorkommen können, wird die Breite 
% \cs{tud@dim@line} durch den Seitenstil situativ entweder auf den Wert von
% \cs{tud@dim@thinline} oder aber \cs{tud@dim@heavyline} gesetzt.
%    \begin{macrocode}
\newlength\tud@dim@line
\newlength\tud@dim@heavyline
\newlength\tud@dim@thinline
%    \end{macrocode}
% \end{length}^^A \tud@dim@thinline
% \end{length}^^A \tud@dim@heavyline
% \end{length}^^A \tud@dim@line
% \begin{length}{\tud@dim@headingsvskip}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{length}{\tud@dim@areadiff}
% \begin{length}{\tud@dim@areavskip}
% Die Längen für den vertikalen Standardversatz der Überschriften sowie die 
% Differenz der Kopfhöhen von normalem und TUD-Kopf-Satzspiegel. Die Differenz 
% zwischen den unterschiedlichen Kopfhöhen der Satzspiegelvarianten wird durch
% \cs{tud@cdgeometry@process} berechnet und dabei in \cs{tud@dim@areadiff} 
% gespeichert. Dabei muss unterschieden werden, ober der Satzspiegel des \CDs 
% oder der durch \pkg{typearea} berechnete genutzt wird. Davon abhängig wird
% \cs{tud@dim@areavskip} definiert.
%    \begin{macrocode}
\newlength\tud@dim@headingsvskip
\newlength\tud@dim@areadiff
\newlength\tud@dim@areavskip
%    \end{macrocode}
% \end{length}^^A \tud@dim@areavskip
% \end{length}^^A \tud@dim@areadiff
% \end{length}^^A \tud@dim@headingsvskip
% \begin{length}{\tud@dim@ddcdiff}
% \changes{v2.02}{2014/06/23}{neu}^^A
% Zu guter Letzt noch die Länge \cs{tud@dim@ddcdiff} für den Höhenausgleich des 
% Seitenfußes, welcher bei der Verwendung des \DDC-Logos in der Fußzeile bei 
% Version~v2.02 für den Satzspiegel notwendig war. Dieser etwas verschrobene
% Satzspiegel wird im Kompatibilitätsmodus weiterhin angeboten.
%    \begin{macrocode}
\tud@if@tudscrverlower{2.03}{\newlength\tud@dim@ddcdiff}{}
%    \end{macrocode}
% \end{length}^^A \tud@dim@ddcdiff
% \begin{macro}{\tud@cdgeometry@set}
% \changes{v2.03}{2015/01/23}{Längenberechnung für den Satzspiegel an 
%   Referenzlänge \cs{tud@dim@widemargin} gekoppelt}^^A
% \changes{v2.05}{2015/07/15}{Fallunterscheidung an DIN-B-Reihe angepasst}^^A
% \changes{v2.05}{2016/04/03}{Option \opt{layout} von \pkg{geometry} möglich}^^A
% \begin{macro}{\if@tud@cdgeometry@adjust}
% \changes{v2.05}{2015/11/29}{neu}^^A
% \begin{length}{\tud@dim@layoutheight}
% \changes{v2.05}{2016/04/03}{neu}^^A
% \begin{length}{\tud@dim@layoutwidth}
% \changes{v2.05}{2016/04/03}{neu}^^A
% \begin{length}{\tud@dim@layouthoffset}
% \changes{v2.05}{2016/04/03}{neu}^^A
% \begin{length}{\tud@dim@layoutvoffset}
% \changes{v2.05}{2016/04/03}{neu}^^A
% Hiermit werden in Abhängigkeit der gewählten Papiergröße die Maße für die
% Größe der Kopfzeile, die Position des Logos, die Seitenränder sowie die
% Schriftgröße in der Kopfzeile definiert. Aufgerufen wird der Befehl durch
% \cs{tud@cdgeometry@process}. Dabei fungiert \cs{tud@dim@widemargin} als 
% Bezugslänge. Die maßgebliche Papiergröße ist DIN~A4 bzw. DIN~B4. Die Längen
% für alle anderen Papiermaße unterscheiden sich um den Faktor~$\sqrt{2}$,
% wobei das Format DIN~A5 nach den Vorgaben des \CDs übersprungen wird. 
%
% Um die Überschriften und den Satzspiegel auch in diesem Fall vertikal richtig
% zu positionieren, wird der Schalter \cs{if@tud@cdgeometry@adjust} benötigt.
% Mit dem Wert \val{adapted} für \opt{cdgeometry} wird auch das Format DIN~A5 
% mit den skalierten Seitenrändern erstellt.
%    \begin{macrocode}
\newif\if@tud@cdgeometry@adjust
\newlength\tud@dim@layoutheight
\newlength\tud@dim@layoutwidth
\newlength\tud@dim@layouthoffset
\newlength\tud@dim@layoutvoffset
\newcommand*\tud@cdgeometry@set{%
  \setlength\tud@dim@layoutheight{\paperheight}%
  \setlength\tud@dim@layoutwidth{\paperwidth}%
  \ifGm@layout%
    \setlength\tud@dim@layoutheight{\Gm@layoutheight}%
    \setlength\tud@dim@layoutwidth{\Gm@layoutwidth}%
  \fi%
  \setlength\tud@dim@layouthoffset{\Gm@layouthoffset}%
  \setlength\tud@dim@layoutvoffset{\Gm@layoutvoffset}%
  \tud@if@tudscrverlower{2.05}{%
    \ifdim\tud@dim@layoutheight<\dimexpr105mm+1.5mm\relax%
      \def\@tempa{0}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr148mm+1.5mm\relax%
      \def\@tempa{1}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr229mm+2mm\relax%
      \def\@tempa{2}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr297mm+2mm\relax%
      \def\@tempa{3}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr420mm+2mm\relax%
      \def\@tempa{4}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr594mm+2mm\relax%
      \def\@tempa{5}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr841mm+3mm\relax%
      \def\@tempa{6}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr1189mm+3mm\relax%%
      \def\@tempa{7}%
    \else%
      \def\@tempa{8}%
    \fi\fi\fi\fi\fi\fi\fi\fi%
  }{%
    \ifdim\tud@dim@layoutheight<\dimexpr125mm+1.5mm\relax%
      \def\@tempa{0}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr176mm+2mm\relax%
      \def\@tempa{1}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr250mm+2mm\relax%
      \def\@tempa{2}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr353mm+2mm\relax%
      \def\@tempa{3}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr500mm+2mm\relax%
      \def\@tempa{4}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr707mm+3mm\relax%
      \def\@tempa{5}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr1000mm+3mm\relax%
      \def\@tempa{6}%
    \else\ifdim\tud@dim@layoutheight<\dimexpr1414mm+3mm\relax%
      \def\@tempa{7}%
    \else%
      \def\@tempa{8}%
    \fi\fi\fi\fi\fi\fi\fi\fi%
  }%
%    \end{macrocode}
% In Abhängigkeit von der gefundenen Gestaltungshöhe wird nun der Satzspiegel 
% definiert. Dabei wird geprüft, ob dieser im entweder innerhalb des durch das 
% \CD vorgegebenen Rasters erzeugt oder anhand der Gestaltungshöhe berechnet
% werden soll. 
%    \begin{macrocode}
  \@tud@cdgeometry@adjustfalse%
%    \end{macrocode}
% Eine Berechnung des Satzspiegels findet in jedem Fall außerhalb des Rasters 
% statt. Ansonsten wird DIN~A4 als Referenzformat ausgewählt.
%    \begin{macrocode}
  \ifnum\tud@cdgeometry@calc@num=\tw@\relax%
    \ifnum\@tempa>\z@\relax%
      \ifnum\@tempa<8\relax%
        \def\@tempa{3}%
      \fi%
    \fi%
  \fi%
%    \end{macrocode}
% Bei Formaten, welche kleiner als das Raster sind, wird die Gestaltungshöhe 
% für DIN~A6 als Referenz genommen, um den Satzspiegel zu brechnen.
%    \begin{macrocode}
  \ifcase\@tempa\relax% <=A7/B7
    \ifnum\tud@cdgeometry@calc@num=\tw@\relax\else%
      \ClassWarning{\TUDClassName}{%
        There's no type area defined for such a\MessageBreak%
        small paper height. It is recommended to increase\MessageBreak%
        the paper size. Nevertheless, it will be tried to\MessageBreak%
        calculate a proper type area%
      }%
    \fi%
    \tud@divide\@tempa{\tud@dim@layoutheight}{148mm}%
    \setlength\tud@dim@widemargin{15mm}%
    \setlength\tud@dim@widemargin{\@tempa\tud@dim@widemargin}%
    \setlength\tud@dim@heavyline{0.5pt}%
    \setlength\tud@dim@heavyline{\@tempa\tud@dim@heavyline}%
    \setlength\tud@dim@thinline{0.25pt}%
    \setlength\tud@dim@thinline{\@tempa\tud@dim@thinline}%
    \setlength{\@tempdima}{4.5pt}%
    \setlength{\@tempdima}{\@tempa\@tempdima}%
    \edef\tud@head@fontsize{\strip@pt\@tempdima}%
  \or% <=A6/B6
    \setlength\tud@dim@widemargin{15mm}%
    \setlength\tud@dim@heavyline{0.5pt}%
    \setlength\tud@dim@thinline{0.25pt}%
    \renewcommand*\tud@head@fontsize{4.5}%
%    \end{macrocode}
% Für Formate der Klasse~5 gibt es zwei Varianten. Entweder, es wird sich an 
% das Raster des \CDs geahtlen oder es wird ein eigener Satzspiegel für das 
% Papierformat definiert. Wird das Raster gehalten, muss bei den Überschriften
% etwas getrickst werden, weshalb der Schalter \cs{if@tud@cdgeometry@adjust} 
% gesetzt wird.
%    \begin{macrocode}
  \or% <=A5/B5
    \ifnum\tud@cdgeometry@calc@num=\z@\relax% restricted
      \@tud@cdgeometry@adjusttrue%
      \setlength\tud@dim@widemargin{30mm}%
      \setlength\tud@dim@heavyline{1pt}%
      \setlength\tud@dim@thinline{0.5pt}%
      \renewcommand*\tud@head@fontsize{9}%
    \else%
      \setlength\tud@dim@widemargin{21.213203mm}%
      \setlength\tud@dim@heavyline{0.707107pt}%
      \setlength\tud@dim@thinline{0.353553pt}%
      \renewcommand*\tud@head@fontsize{6.363961}%
    \fi%
  \or% <=A4/B4
    \setlength\tud@dim@widemargin{30mm}%
    \setlength\tud@dim@heavyline{1pt}%
    \setlength\tud@dim@thinline{0.5pt}%
    \renewcommand*\tud@head@fontsize{9}%
  \or% <=A3/B3
    \setlength\tud@dim@widemargin{42.426407mm}%
    \setlength\tud@dim@heavyline{1.414214pt}%
    \setlength\tud@dim@thinline{0.707107pt}%
    \renewcommand*\tud@head@fontsize{12.727922}%
  \or% <=A2/B2
    \setlength\tud@dim@widemargin{60mm}%
    \setlength\tud@dim@heavyline{2pt}%
    \setlength\tud@dim@thinline{1pt}%
    \renewcommand*\tud@head@fontsize{18}%
  \or% <=A1/B1
    \setlength\tud@dim@widemargin{84.852814mm}%
    \setlength\tud@dim@heavyline{2.828427pt}%
    \setlength\tud@dim@thinline{1.414214pt}%
    \renewcommand*\tud@head@fontsize{25.455844}%
  \or% <=A0/B0
    \setlength\tud@dim@widemargin{120mm}%
    \setlength\tud@dim@heavyline{4pt}%
    \setlength\tud@dim@thinline{2pt}%
    \renewcommand*\tud@head@fontsize{36}%
  \else% >A0/B0
%    \end{macrocode}
% Wei bei zu kleinen Formaten wird auch bei Formaten oberhalb des Rasters die
% der Satzspiegel aus der Gestaltungshöhe berechnet, wobei hier DIN~A0 als 
% Referenz verwendet wird.
%    \begin{macrocode}
    \ifnum\tud@cdgeometry@calc@num=\tw@\relax\else%
      \ClassWarning{\TUDClassName}{%
        There's no type area defined for such a\MessageBreak%
        huge paper height. It is recommended to reduce\MessageBreak%
        the paper size. Nevertheless, it will be tried to\MessageBreak%
        calculate a proper type area%
      }%
    \fi%
    \tud@divide\@tempa{\tud@dim@layoutheight}{1189mm}%
    \setlength\tud@dim@widemargin{120mm}%
    \setlength\tud@dim@widemargin{\@tempa\tud@dim@widemargin}%
    \setlength\tud@dim@heavyline{4pt}%
    \setlength\tud@dim@heavyline{\@tempa\tud@dim@heavyline}%
    \setlength\tud@dim@thinline{2pt}%
    \setlength\tud@dim@thinline{\@tempa\tud@dim@thinline}%
    \setlength{\@tempdima}{36pt}%
    \setlength{\@tempdima}{\@tempa\@tempdima}%
    \edef\tud@head@fontsize{\strip@pt\@tempdima}%
  \fi%
%    \end{macrocode}
% Wurde die Berechnung aktiviert, dann erfolgt diese anhand der Referenz im 
% Format DIN~A4.
%    \begin{macrocode}
  \ifnum\tud@cdgeometry@calc@num=\tw@\relax%
    \tud@divide\@tempa{\tud@dim@layoutheight}{297mm}%
    \setlength\tud@dim@widemargin{\@tempa\tud@dim@widemargin}%
    \setlength\tud@dim@heavyline{\@tempa\tud@dim@heavyline}%
    \setlength\tud@dim@thinline{\@tempa\tud@dim@thinline}%
    \setlength{\@tempdima}{\tud@head@fontsize pt}%
    \setlength{\@tempdima}{\@tempa\@tempdima}%
    \edef\tud@head@fontsize{\strip@pt\@tempdima}%
  \fi%
%    \end{macrocode}
% Zum Schluss werden die restlichen Längen aus der Referenzlänge berechnet und 
% das Erstellen der Kopfzeile aufgrund der möglichen Änderung der Schriftgröße
% forciert.
%    \begin{macrocode}
  \global\@tud@head@font@settrue%
  \setlength\tud@dim@slimmargin{\dimexpr2\tud@dim@widemargin/3\relax}%
  \setlength\tud@dim@both{\dimexpr5\tud@dim@widemargin/3\relax}%
  \setlength\tud@dim@topmargin{\dimexpr7\tud@dim@widemargin/6\relax}%
  \setlength\tud@dim@barheight{\dimexpr\tud@dim@widemargin/6\relax}%
  \setlength\tud@dim@headsep{\dimexpr2\tud@dim@widemargin/5\relax}%
  \setlength\tud@dim@logox{\dimexpr1.1\tud@dim@widemargin/3\relax}%
  \setlength\tud@dim@logoy{\dimexpr0.45\tud@dim@widemargin\relax}%
  \setlength\tud@dim@logowidth{\dimexpr1.9\tud@dim@widemargin\relax}%
  \setlength\tud@dim@footsep{%
    \dimexpr\tud@dim@widemargin-.6\tud@dim@topmargin\relax%
  }%
%    \end{macrocode}
% Wird die Gestaltungshöhe DIN~A5 im Raster verwendet, werden die Abstände 
% zwischen Kopf- unf Fußzeile angepasst.
%    \begin{macrocode}
  \if@tud@cdgeometry@adjust%
    \setlength\tud@dim@headsep{\dimexpr.707107\tud@dim@headsep\relax}%
    \setlength\tud@dim@footsep{\dimexpr.707107\tud@dim@footsep\relax}%
  \fi%
}
%    \end{macrocode}
% \end{length}^^A \tud@dim@layoutvoffset
% \end{length}^^A \tud@dim@layouthoffset
% \end{length}^^A \tud@dim@layoutwidth
% \end{length}^^A \tud@dim@layoutheight
% \end{macro}^^A \if@tud@cdgeometry@adjust
% \end{macro}^^A \tud@cdgeometry@set
%
% \subsection{Unterstützung von Schnittmarken mit \pkg{geometry} und \pkg{crop}}
%
% \changes{v2.05}{2016/04/03}{Unterstützung von Schnittmarken mit 
%   \pkg{geometry} und \pkg{crop}}^^A
%
% Insbesondere für das Erstelen von Postern sollen häufig Schnittmarken auf dem 
% ausgegebenen Papierbogen erscheinen. Dies kann mit den Paketen \pkg{geometry} 
% und \pkg{crop} realisiert werden. 
% \ToDo{%
%   Unterstützung von PDF-Boxen für die Druckausgabe
%^^A\url{https://groups.google.com/forum/#!topic/de.comp.text.tex/1gouJ0Zov6o}
%^^A\url{http://tex.stackexchange.com/questions/248902/}
%^^A\url{https://wiki.scribus.net/canvas/PDF_Boxes_:_mediabox,_cropbox,_bleedbox,_trimbox,_artbox}
%^^A\url{http://www.prepressure.com/pdf/basics/page-boxes}
% }[v2.07]
%
% \begin{macro}{\if@tud@x@crop@center}
% \changes{v2.05}{2016/04/03}{neu}^^A
% \begin{macro}{\CROP@center}
% \changes{v2.05}{2016/04/03}{neu}^^A
% Das Paket \pkg{crop} bietet die Option, den Satzspiegel auf dem Papierbogen 
% zu zentrieren. Diese Einstellung geht beim Laden eines neuen Satzspiegels mit 
% \cs{loadgeometry} verloren. Dieser Patch wird definiert, um dieses Problem zu 
% beheben.
%    \begin{macrocode}
\newif\if@tud@x@crop@center
\AfterPackage{crop}{%
  \CheckCommand*\CROP@center{%
    \voffset\stockheight
    \advance\voffset-\paperheight
    \voffset.5\voffset
    \hoffset\stockwidth
    \advance\hoffset-\paperwidth
    \hoffset.5\hoffset
  }%
  \pretocmd{\CROP@center}{%
    \@tud@x@crop@centertrue%
  }{}{\tud@patch@wrn{CROP@center}}
}
%    \end{macrocode}
% \end{macro}^^A \CROP@center
% \end{macro}^^A \if@tud@x@crop@center
% \begin{length}{\bleedmargin}
% \changes{v2.05}{2016/04/03}{neu}^^A
% \begin{macro}{\tud@bleedmargin@set}
% \changes{v2.05}{2016/04/03}{neu}^^A
% Wird entweder das Paket \pkg{crop} oder aber die Option \opt{layout} des 
% Paketes \pkg{geometry} für Schnittmarken verwendet, werden alle farbigen 
% Elemente des Layouts dahingehend vergrößert, dass beim Zuschneiden des 
% Papierbogens \emph{in die Farbe} geschnitten wird. Verantwortlich hierfür ist 
% die Länge \cs{bleedmargin}, die natürlich auch vom Anwender beliebig gesetzt
% werden kann.
% \ToDo{Option \opt{bleedmargin}}[v2.05]
%    \begin{macrocode}
\newlength\bleedmargin
\setlength\bleedmargin{\maxdimen}
%    \end{macrocode}
% Das Makro \cs{tud@bleedmargin@set} wird einmalig am Ende der Präambel 
% aufgerufen. Es wird geprüft, ob die Länge \cs{bleedmargin} durch den Anwender 
% angepasst wurde. Ist dies nicht er Fall, wird gerpüft, ob für \pkg{crop} oder 
% \pkg{geometry} Schnittmarken definiert wurden. In diesem Fall wird die Länge 
% \cs{bleedmargin} auf 5\% der größten Randbreite gesetzt.
%    \begin{macrocode}
\newcommand*\tud@bleedmargin@set{%
  \@tempswafalse%
  \ifcsundef{CROP@@@marks}{}{%
    \ifx\CROP@@@marks\vfil\else\@tempswatrue\fi%
  }%
  \ifGm@showcrop\@tempswatrue\fi%
  \ifdim\bleedmargin=\maxdimen\relax%
    \if@tempswa%
      \setlength\bleedmargin{.05\tud@dim@widemargin}%
    \else%
      \setlength\bleedmargin{\z@}%
    \fi%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \tud@bleedmargin@set
% \end{length}^^A \bleedmargin
%
% \subsection{Unterstützung der \cls{standalone}-Klasse}
%
% \changes{v2.02}{2014/07/25}{Unterstützung der \cls{standalone}-Klasse}^^A
%
% Mit der Klasse~\cls{standalone} können insbesondere Grafiken als separate 
% (PDF-)Dateien erzeugt und später im Dokument eingebunden werden. Diese Klasse 
% ändert allerhand an den Einstellungen der Seitenränder. Damit sich diese bei
% der Verwendung mit den \TUDScript-Klassen nicht in die Quere kommen, müssen 
% für einige Einstellungen unterdrückt werden.
%
% \begin{macro}{\if@tud@x@standalone@crop}
% \changes{v2.02}{2014/09/08}{neu}^^A
% Mit diesem Makro kann die Verwendung der Option \opt{crop} mit der Klasse 
% \cls{standalone} geprüft werden. Das erste Argument wird ausgeführt, wenn 
% die Klasse geladen und die Option aktiv ist. Das zweite Argument wird 
% ausgeführt, wenn entweder die Option \opt{crop} deaktiviert ist oder die 
% Klasse \cls{standalone} gar nicht geladen wurde.
%    \begin{macrocode}
\newif\if@tud@x@standalone@crop
\AfterClass*{standalone}{\let\if@tud@x@standalone@crop\ifsa@crop}
%    \end{macrocode}
% \end{macro}^^A \if@tud@x@standalone@crop
%
% \subsection{Definition des Seitenstils mittels \pkg{scrlayer-scrpage}}
%
% Ein zentraler Bestandteil der Vorlagen ist der Seitenkopf des \CDs. Dieser 
% wird ab der Version~v2.02 mit Hilfe des Paketes \pkg{scrlayer-scrpage} 
% erstellt. Dafür werden einzelnene Seitenstile erstellt, welche zum einen von 
% verschiedenen Befehlen wie beispielsweise von\cs{maketitle} oder \cs{part} 
% bzw. \cs{addpart} genutzt werden. Zum anderen kann der Anwender selbst diese 
% entweder direkt über die Wahl des Seitenstils oder aber mit der
% \env{tudpage}"=Umgebung nutzen.
%
% Ist die Klasse \cls{standalone} zusammen mit der Option \opt{crop} aktiv,
% werden die Seitenränder auf die Einstellungen dieser Klasse gesetzt und das
% Laden von \pkg{scrlayer-scrpage} verhindert.
%    \begin{macrocode}
\if@tud@x@standalone@crop
  \PreventPackageFromLoading{scrlayer-scrpage}%
\else
  \AtEndPreamble{\RequirePackage{scrlayer-scrpage}[2013/12/14]}%
\fi
%    \end{macrocode}
% Für das Erzeugen der Seitenstile wird das Paket \pkg{scrlayer-scrpage} 
% genutzt. Mit diesem können verschiedene Ebenen erstellt werden, aus welchen 
% anschließend der eigentliche Seitenstil zusammengesetzt wird. Dabei werden 
% verschiedene, sogenannte Layers respektive Ebenen für die einzelnen Elemente
% auf einer Seite erstellt.
%    \begin{macrocode}
\AfterPackage{scrlayer-scrpage}{%
%    \end{macrocode}
% \begin{pagestyle}{tudheadings}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{pagestyle}{plain.tudheadings}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{pagestyle}{empty.tudheadings}
% \changes{v2.02}{2014/06/23}{neu}^^A
% Es wird ein neuer Seitenstil kreiert, der das \CD der \TnUD mit der
% prägenden Kopfzeile umsetzt. Dabei soll dieser Kopf auch verwendbar sein,
% wenn nicht die vom \CD vorgeschriebenen Seitenränder sondern das Paket
% \pkg{typearea} genutzt wird. Dafür wird das Logo im Kopf so wie im \CD
% vorgesehen mit dem Logo der \TnUD in den Rand und dem Schriftzug bündig zum
% Textblock gesetzt. 
% \begin{layer}{tudheadings.head.content}
% \changes{v2.04}{2015/05/31}{neu}^^A
% Dies sind das links aus dem Satzspiegel verschobene Logo der \TnUD und das 
% Zweitlogo. Diese werden seit der Version~v2.04 nicht mehr in zwei getrennten 
% sondern in einer gemeinsamen Ebene gesetzt.
%    \begin{macrocode}
  \DeclareNewLayer[%
    background,headsep,%
    addhoffset=\dimexpr\tud@dim@logox-\tud@dim@widemargin\relax,%
    addwidth=\dimexpr-\tud@dim@logox+\tud@dim@widemargin\relax,%
    voffset=\tud@dim@logoy,%
    addvoffset=\tud@dim@layoutvoffset,%
    contents={%
%    \end{macrocode}
% Vor der Ausgabe der Logoboxen werden diese im Bedarfsfall neu gesetzt.
%    \begin{macrocode}
      \tud@mainlogo@set%
      \tud@headlogo@option@set%
      \tud@mainlogo@use\hfill\tud@headlogo@use%
    },%
  ]{tudheadings.head.content}%
%    \end{macrocode}
% \end{layer}^^A tudheadings.head.content
% \begin{layer}{tudheadings.head.back}
% \changes{v2.03}{2015/02/14}{neu}^^A
% \begin{layer}{tudheadings.head.bar}
% \changes{v2.03}{2015/02/14}{neu}^^A
% \changes{v2.05}{2015/07/14}{Bugfix verschobener Balken}^^A
% Außerdem gibt es eine Variante ohne Querbalken-Outline. Stattdessen werden
% der Querbalken und der darüberliegende Kopf farbig abgesetzt. 
%    \begin{macrocode}
  \DeclareNewLayer[%
    background,%
    width=\dimexpr\tud@dim@layoutwidth+2\bleedmargin\relax,%
    addhoffset=\dimexpr\tud@dim@layouthoffset-\bleedmargin\relax,%
    height=\dimexpr\tud@dim@topmargin+\bleedmargin\relax,%
    addvoffset=\dimexpr\tud@dim@layoutvoffset-\bleedmargin\relax,%
    contents={%
      \ifnum\tud@head@bar@num>\tw@\relax% cdhead=color
        \color{HKS41}%
        \rule{\layerwidth}{\layerheight}%
      \fi%
    },%
  ]{tudheadings.head.back}%
  \DeclareNewLayer[%
    background,%
    width=\dimexpr\tud@dim@layoutwidth+2\bleedmargin\relax,%
    addhoffset=\dimexpr\tud@dim@layouthoffset-\bleedmargin\relax,%
    height=\tud@dim@barheight,%
    voffset=\tud@dim@topmargin,%
    addvoffset=\tud@dim@layoutvoffset,%
    contents={%
      \ifnum\tud@head@bar@num>\@ne\relax% cdhead=barcolor/color
        \color{HKS41!60}%
        \setlength{\@tempdima}{\dimexpr\ht\strutbox-\tud@dim@barheight\relax}%
        \ifdim\@tempdima<\z@\relax\setlength\@tempdima{\z@}\fi%
        \raisebox{\@tempdima}{\rule{\layerwidth}{\layerheight}}%
      \fi%
    },%
  ]{tudheadings.head.bar}%
%    \end{macrocode}
% \end{layer}^^A tudheadings.head.bar
% \end{layer}^^A tudheadings.head.back
% \begin{layer}{tudheadings.head.text}
% \changes{v2.02}{2014/06/23}{neu}^^A
% Fakultät, Einrichtung, Institut und Lehrstuhl als Inhalt des Querbalkens.
%    \begin{macrocode}
  \DeclareNewLayer[%
    background,headsep,%
    voffset=\dimexpr\tud@dim@topmargin+\tud@dim@line\relax,%
    addvoffset=\tud@dim@layoutvoffset,%
    contents={%
      \tud@head@font@set%
      \tud@head@text@set%
      \tud@head@text@box%
    },%
  ]{tudheadings.head.text}%
%    \end{macrocode}
% \end{layer}^^A tudheadings.head.text
% \begin{layer}{tudheadings.head.upline}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{layer}{tudheadings.head.lowline}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{layer}{tudheadings.head.uplinewide}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{layer}{tudheadings.head.lowlinewide}
% \changes{v2.02}{2014/06/23}{neu}^^A
% Die Ebenen für obere und untere Linie des Querbalkens sowohl in der normalen 
% Version, welche den Textbereich überspannt als auch in der Variante über die 
% komplette Seitenbreite. Dabei muss für beide Varianten der entsprechenden 
% horizontale Versatz beachtet werden. Dafür wird ggf. der Parameter \val{head} 
% von \pkg{scrlayer-scrpage} verwendet. 
%    \begin{macrocode}
  \DeclareNewLayer[%
    background,headsep,%
    voffset=\dimexpr\tud@dim@topmargin-.5\tud@dim@line\relax,%
    addvoffset=\tud@dim@layoutvoffset,%
    contents={%
      \ifnum\tud@head@bar@num<\tw@\relax% cdhead=nocolor/litecolor
        \if@tud@head@widebar\else\tud@head@rule{\layerwidth}\fi%
      \fi%
    },%
  ]{tudheadings.head.upline}%
  \DeclareNewLayer[%
    background,headsep,%
    voffset=\dimexpr\tud@dim@topmargin+\tud@dim@barheight%
      -.5\tud@dim@line\relax,%
    addvoffset=\tud@dim@layoutvoffset,%
    contents={%
      \ifnum\tud@head@bar@num<\tw@\relax% cdhead=nocolor/litecolor
        \if@tud@head@widebar\else\tud@head@rule{\layerwidth}\fi%
      \fi%
    },%
  ]{tudheadings.head.lowline}%
  \DeclareNewLayer[%
    background,%
    width=\dimexpr\tud@dim@layoutwidth+2\bleedmargin\relax,%
    addhoffset=\dimexpr\tud@dim@layouthoffset-\bleedmargin\relax,%
    voffset=\dimexpr\tud@dim@topmargin-.5\tud@dim@line\relax,%
    addvoffset=\tud@dim@layoutvoffset,%
    contents={%
      \ifnum\tud@head@bar@num<\tw@\relax% cdhead=nocolor/litecolor
        \if@tud@head@widebar\tud@head@rule{\layerwidth}\fi%
      \fi%
    },%
  ]{tudheadings.head.uplinewide}%
  \DeclareNewLayer[%
    background,%
    width=\dimexpr\tud@dim@layoutwidth+2\bleedmargin\relax,%
    addhoffset=\dimexpr\tud@dim@layouthoffset-\bleedmargin\relax,%
    voffset=\dimexpr\tud@dim@topmargin+\tud@dim@barheight%
      -.5\tud@dim@line\relax,%
    addvoffset=\tud@dim@layoutvoffset,%
    contents={%
      \ifnum\tud@head@bar@num<\tw@\relax% cdhead=nocolor/litecolor
        \if@tud@head@widebar\tud@head@rule{\layerwidth}\fi%
      \fi%
    },%
  ]{tudheadings.head.lowlinewide}%
%    \end{macrocode}
% \end{layer}^^A tudheadings.head.lowlinewide
% \end{layer}^^A tudheadings.head.uplinewide
% \end{layer}^^A tudheadings.head.lowline
% \end{layer}^^A tudheadings.head.upline
% \begin{layer}{tudheadings.foot.back}
% \changes{v2.03}{2015/02/15}{neu}^^A
% \begin{layer}{tudheadings.foot.logo}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \changes{v2.04}{2015/05/31}{neu}^^A
% \changes{v2.03}{2015/02/15}{überarbeitetet}^^A
% \begin{layer}{tudheadings.foot.content}
% \changes{v2.04}{2015/04/21}{neu}^^A
% \changes{v2.05}{2015/07/06}{Bugfix für Kompatibilitätsmodus}^^A
% Die folgenden Ebenen dienen für die Ausgabe des Fußbereiches. Dieser kann mit
% einem farbigen Hintergrund und zusätzlichen Logos (\cs{footlogo}) sowie frei 
% wählbare Inhalte ein- oder zweispaltig mit \cs{footcontent} erstellt werden. 
% Dabei werden die Ebenen in Abhängigkeit vom gewählten Kompatibilitätsmodus
% unterschiedlich definiert. Die erste Ebene bestimmt die Hintergrundgestaltung
% des Fußbereiches.
%    \begin{macrocode}
  \DeclareNewLayer[%
    background,foot,%
    width=\dimexpr\tud@dim@layoutwidth+2\bleedmargin\relax,%
    hoffset=\dimexpr\tud@dim@layouthoffset-\bleedmargin\relax,%
    height=\dimexpr\tud@dim@layoutheight-\layeryoffset%
      +\tud@dim@layoutvoffset+\bleedmargin\relax,%
    addvoffset=-\dp\strutbox,%
    contents={%
      \if@tud@foot@colored%
        \let\@tempc\relax%
        \ifdefvoid{\tud@pagecolor}{%
          \ifcase\tud@head@bar@num\relax\or% cdhead=litecolor
            \def\@tempc{\color{HKS41!60}}%
          \or% cdhead=barcolor
            \def\@tempc{\color{HKS41!60}}%
          \or% cdhead=color
            \def\@tempc{\color{HKS41}}%
          \fi%
        }{%
          \def\@tempc{\color{HKS41}}%
          \ifstr{\tud@pagecolor}{HKS41}{\def\@tempc{\color{HKS41!60}}}{}%
        }%
        \ifx\@tempc\relax\else%
          \@tempc\rule{\layerwidth}{\layerheight}%
        \fi%
      \fi%
    },%
  ]{tudheadings.foot.back}%
%    \end{macrocode}
% Bis zur Version~v2.02 wurde für die Verwendung des \DDC-Logos der Satzspiegel
% geändert. Hier wird dem Rechnung getragen, indem der farbige Hintergrund im 
% Zweifelsfall vergrößert wird.
%    \begin{macrocode}
  \tud@if@tudscrverlower{2.03}{%
    \ModifyLayer[%
      addvoffset=-\tud@dim@ddcdiff+\ht\strutbox,%
      contents={%
        \if@tud@foot@colored%
          \let\@tempc\relax%
          \ifdefvoid{\tud@pagecolor}{%
            \ifcase\tud@head@bar@num\relax\or\or% cdhead=barcolor
              \def\@tempc{\color{HKS41!60}}%
            \or% cdhead=color
              \def\@tempc{\color{HKS41}}%
            \fi%
          }{%
            \def\@tempc{\color{HKS41}}%
            \ifstr{\tud@pagecolor}{HKS41}{\def\@tempc{\color{HKS41!60}}}{}%
          }%
          \ifx\@tempc\relax\else%
            \tud@ddc@check%
            \ifcase\@tempb\relax% \tud@ddc@foot@num=false
              \vbox to \layerheight{%
                \vfil\@tempc%
                \rule{\layerwidth}{%
                  \dimexpr\layerheight-\tud@dim@ddcdiff+\ht\strutbox\relax%
                }%
              }%
            \else% \tud@ddc@foot@num!=false
              \@tempc\rule{\layerwidth}{\layerheight}%
            \fi%
          \fi%
        \fi%
      },%
    ]{tudheadings.foot.back}%
  }{}%
%    \end{macrocode}
% Die zweite Ebene wird für die Ausgabe von Drittlogos und des \DDC-Logos sowie 
% freien Inhalten im Seitenfuß erstellt. Ab Version~v2.03 wird der Satzspiegel
% so gewählt, dass das \DDC-Logo und andere Inhalten in den normalen Seitenfuß
% passen.
%    \begin{macrocode}
  \DeclareNewLayer[%
    background,foot,%
    height=\dimexpr\tud@dim@layoutheight-\layeryoffset%
      +\tud@dim@layoutvoffset\relax,%
    contents={%
%    \end{macrocode}
% Falls die Höhe der Logos im Fuß nicht durch den Anwender festgelegt wurden, 
% werden passende Standardwerte gesetzt. Außerdem wird die genutzte Höhe des
% Layers nicht vollständig genutzt, um bei einem farbigen Fußbereich einen 
% gewissen Abstand vom Inhalt zur Kante zu erhalten.
%    \begin{macrocode}
      \tud@footlogoheight@set%
      \setlength\@tempdima{\dimexpr\layerheight-\dp\strutbox\relax}%
%    \end{macrocode}
% Im Bedarfsfall werden die Boxen vor der Ausgabe durch die einzelnen 
% \cs{\dots{}@use}-Befehle neu gesetzt. Danach erfolgt die Ausgabe, wobei die 
% Boxen übereinander gelegt werden.
%    \begin{macrocode}
      \tud@footlogo@cmd@use{\@tempdima}{\layerwidth}%
      \tud@footlogo@ddc@use{\@tempdima}{\layerwidth}%
      \tud@footcontent@use{\@tempdima}{\layerwidth}%
    },%
  ]{tudheadings.foot.content}%
%    \end{macrocode}
% Bis zur Version~v2.02 wurde für die Verwendung des \DDC-Logos der Satzspiegel
% geändert. Hier wird dem Rechnung getragen.
%    \begin{macrocode}
  \tud@if@tudscrverlower{2.03}{%
    \ModifyLayer[%
      addvoffset=-\tud@dim@ddcdiff+\ht\strutbox,%
      contents={%
        \tud@footlogoheight@set%
        \setlength\@tempdima{\dimexpr\layerheight-\dp\strutbox\relax}%
        \tud@ddc@check%
        \ifcase\@tempb\relax% \tud@ddc@foot@num=false
          \addtolength\@tempdima{\dimexpr\ht\strutbox-\tud@dim@ddcdiff\relax}%
          \vskip\dimexpr\tud@dim@ddcdiff-\ht\strutbox-\baselineskip\relax%
        \fi%
        \tud@footlogo@cmd@use{\@tempdima}{\layerwidth}%
        \tud@footlogo@ddc@use{\@tempdima}{\layerwidth}%
        \tud@footcontent@use{\@tempdima}{\layerwidth}%
      },%
    ]{tudheadings.foot.content}%
  }{}%
%    \end{macrocode}
% \end{layer}^^A tudheadings.foot.content
% \end{layer}^^A tudheadings.foot.logo
% \end{layer}^^A tudheadings.foot.back
% \begin{layer}{tudheadings.last}
% \changes{v2.04}{2015/04/02}{neu}^^A
% Die letzte Ebene dient nicht der Ausgabe eines bestimmten Inhaltes sondern 
% wird für evtl. notwendige Aufräumarbeiten etc. bereitgehalten.
%    \begin{macrocode}
  \DeclareNewLayer[%
    background,%
%    \end{macrocode}
% Falls ein Kapitel ohne die Option \opt{chapterpage} gesetzt wird und dennoch 
% die Gestalt des Kopfes des \pgs{tudheadings}-Seitenstils sich vom restlichen 
% Dokument unterscheiden soll (\opt{cd} bzw. \opt{cdchapter}), so dient das 
% Makro \cs{tud@head@bar@restore} zum Zurücksetzen auf das normale Verhalten. 
% Siehe \cs{tud@chapter@app}.
%    \begin{macrocode}
%<book|report>    contents=\tud@head@bar@restore,%
  ]{tudheadings.last}%
%    \end{macrocode}
% \end{layer}^^A tudheadings.last
% Aus den zuvor erstellten Ebenen werden jetzt die eigentlichen Seitenstile 
% zusammengesetzt. Als erstes wird der \pgs{headings}-Seitenstil definiert.
% Dieser verwendet den TUD-Kopf und die Fußzeilenebenen des Seitenstils
% \pgs{scrheadings}, welche zur Definition des Seitenstils verwendet werden.
% Beim Aktivieren des Seitenstils wird außerdem \cs{tud@ps@init} ausgeführt.
% Damit die Benutzerschnittstelle von \pkg{scrlayer-scrpage} für die Fußzeile 
% weiterhin durch den Anwender verwendet werden kann, werden wie erwähnt die
% entsprechenden \pgs{scrheadings}-Ebenen verwendet. 
%    \begin{macrocode}
  \DeclareNewPageStyleByLayers[%
    onselect=\tud@ps@onselect,onbackground=\tud@ps@onbackground%
  ]{tudheadings}{%
    tudheadings.head.back,%
    tudheadings.head.content,%
    tudheadings.head.bar,%
    tudheadings.head.text,%
    tudheadings.head.upline,%
    tudheadings.head.lowline,%
    tudheadings.head.uplinewide,%
    tudheadings.head.lowlinewide,%
    tudheadings.foot.back,%
    tudheadings.foot.content,%
    tudheadings.last,%
    scrheadings.foot.odd,%
    scrheadings.foot.even,%
    scrheadings.foot.oneside,%
    scrheadings.foot.above.line,%
    scrheadings.foot.below.line%
  }%
%    \end{macrocode}
% Zuletzt werden Aliasnamen für den Seitenstil definiert.
%    \begin{macrocode}
  \DeclareNewPageStyleAlias{tud}{tudheadings}%
  \DeclareNewPageStyleAlias{tudscr}{tudheadings}%
  \DeclareNewPageStyleAlias{tudscrheadings}{tudheadings}%
%    \end{macrocode}
% Für den \pgs{plain}-Seitenstil wird ebenso verfahren. Hier werden für die 
% Fußzeilenebenen des Seitenstils \pgs{plain.scrheadings} hinzugefügt.
%    \begin{macrocode}
  \DeclareNewPageStyleByLayers[%
    onselect=\tud@ps@onselect,onbackground=\tud@ps@onbackground%
  ]{plain.tudheadings}{%
    tudheadings.head.back,%
    tudheadings.head.content,%
    tudheadings.head.bar,%
    tudheadings.head.text,%
    tudheadings.head.upline,%
    tudheadings.head.lowline,%
    tudheadings.head.uplinewide,%
    tudheadings.head.lowlinewide,%
    tudheadings.foot.back,%
    tudheadings.foot.content,%
    tudheadings.last,%
    plain.scrheadings.foot.odd,%
    plain.scrheadings.foot.even,%
    plain.scrheadings.foot.oneside,%
    plain.scrheadings.foot.above.line,%
    plain.scrheadings.foot.below.line%
  }%
  \DeclareNewPageStyleAlias{plain.tudscrheadings}{plain.tudheadings}%
  \DeclareNewPageStyleAlias{tudplain}{plain.tudheadings}%
  \DeclareNewPageStyleAlias{tudscrplain}{plain.tudheadings}%
  \DeclareNewPageStyleAlias{tudheadingsplain}{plain.tudheadings}%
  \DeclareNewPageStyleAlias{tudscrheadingsplain}{plain.tudheadings}%
%    \end{macrocode}
% Des Weiteren gibt es einen selbstständigen \enquote{leeren} Seitenstil, der 
% lediglich aus dem Kopf besteht und einen lerren Seitenfuß hat.
%    \begin{macrocode}
  \DeclareNewPageStyleByLayers[%
    onselect=\tud@ps@onselect,onbackground=\tud@ps@onbackground%
  ]{empty.tudheadings}{%
    tudheadings.head.back,%
    tudheadings.head.content,%
    tudheadings.head.bar,%
    tudheadings.head.text,%
    tudheadings.head.upline,%
    tudheadings.head.lowline,%
    tudheadings.head.uplinewide,%
    tudheadings.head.lowlinewide,%
    tudheadings.foot.back,%
    tudheadings.foot.content,%
    tudheadings.last%
  }%
  \DeclareNewPageStyleAlias{empty.tudscrheadings}{empty.tudheadings}%
  \DeclareNewPageStyleAlias{tudempty}{empty.tudheadings}%
  \DeclareNewPageStyleAlias{tudscrempty}{empty.tudheadings}%
  \DeclareNewPageStyleAlias{tudheadingsempty}{empty.tudheadings}%
  \DeclareNewPageStyleAlias{tudscrheadingsempty}{empty.tudheadings}%
%    \end{macrocode}
% \begin{layer}{tudheadings.pagecolor}
% \changes{v2.03}{2015/01/09}{neu}^^A
% Um farbige Titel- Teil- und Kapitelseiten \emph{unabhängig} vom aktuell 
% verwendeten Seitenstil erstellen zu können, wird die zusätzliche Ebene 
% \val{tudheadings.pagecolor} definiert, die \emph{allen} Seitenstilen
% hinzugefügt wird. Dabei dient das Makros \cs{tud@pagecolor} zum Umschalten
% der Hintergrundfarben und wird durch die Auswertung der Hilfsmakros 
% \cs{tud@layout@\meta{Typ}@num} optionsabhängig für Titel-, Teile- sowie 
% Kapitelseiten gesetzt. 
%    \begin{macrocode}
  \DeclareNewLayer[%
    background,%
    area=%
      {\dimexpr\tud@dim@layouthoffset-\bleedmargin\relax}%
      {\dimexpr\tud@dim@layoutvoffset-\bleedmargin\relax}%
      {\dimexpr\tud@dim@layoutwidth+2\bleedmargin\relax}%
      {\dimexpr\tud@dim@layoutheight+2\bleedmargin\relax}%
    ,%
    contents={%
      \ifdefvoid{\tud@pagecolor}{}{%
        \color{\tud@pagecolor}%
        \rule{\layerwidth}{\layerheight}%
      }%
    },%
  ]{tudheadings.pagecolor}%
  \AddLayersToPageStyle{@everystyle@}{tudheadings.pagecolor}%
%    \end{macrocode}
% \end{layer}^^A tudheadings.pagecolor
% Damit wurden alle Ebenen und die darauf aufbauenden Seitenstile deklariert.
% \end{pagestyle}^^A empty.tudheadings
% \end{pagestyle}^^A plain.tudheadings
% \end{pagestyle}^^A tudheadings
%    \begin{macrocode}
}
\listadd\tud@ps@list{tudheadings}
\listadd\tud@ps@list{plain.tudheadings}
\listadd\tud@ps@list{empty.tudheadings}
%    \end{macrocode}
% Mit der Nutzung von \pkg{scrlayer-scrpage} ist die parallele Verwendung des 
% Paketes \pkg{fancyhdr} nicht möglich.
%    \begin{macrocode}
\PreventPackageFromLoading[%
  \ClassWarning{\TUDClassName}{%
    The package `fancyhdr' must not be used with a\MessageBreak%
    TUD-KOMA-Script class. You should make use of the\MessageBreak%
    capabilities of package `scrlayer-scrpage' instead%
  }%
]{fancyhdr}
%    \end{macrocode}
% \begin{macro}{\tud@ps@onselect}
% \changes{v2.03}{2015/01/09}{neu}^^A
% \begin{macro}{\tud@ps@onbackground}
% \changes{v2.03}{2015/02/14}{neu}^^A
% \changes{v2.04}{2015/04/21}{Kopf- und Fußeinstellungen abhängig von der Farbe 
%   des Seitenhintergrunds}^^A
% \begin{macro}{\tud@head@logocolor}
% \begin{macro}{\tud@head@fontcolor}
% \changes{v2.04}{2015/05/18}{neu}^^A
% \begin{macro}{\tud@foot@logocolor}
% \changes{v2.03}{2015/02/15}{neu}^^A
% \begin{macro}{\tud@foot@fontcolor}
% \changes{v2.04}{2015/04/21}{neu}^^A
% Diese Befehle werden bei der Initialiserung der Seitenstile beziehungsweise
% zu Beginn der Ebenenausgabe aufgerufen.
%    \begin{macrocode}
\newcommand*\tud@ps@onselect{%
%    \end{macrocode}
% Normalerweise werden durch \pkg{scrlayer-scrpage} bei der Umschaltung auf 
% einen mit dem Befehl \cs{newpairofpagestyles}\marg{Seitenstil} definierten 
% Seitenstil, die Seitenstile \pgs{headings} und \pgs{plain} als Aliase für 
% \pgs{\meta{Seitenstil}} und \pgs{plain.\meta{Seitenstil}} festgelegt. 
% Allerdings definiert dieser Befehl zusätzliche Ebenen für Kopf- und Fußzeile, 
% weshalb auf die Verwendung verzichtet wird. Das automatische Umschalten soll 
% dennoch ermöglicht werden.
%    \begin{macrocode}
  \DeclarePageStyleAlias{plain}{plain.tudheadings}%
  \DeclarePageStyleAlias{headings}{tudheadings}%
  \def\sls@currentheadings{tudheadings}%
  \def\sls@currentplain{plain.tudheadings}%
}
%    \end{macrocode}
% Das Makro \cs{tud@head@logocolor} enthält die Farbe des Kopfes. Die Gestalt 
% des Querbalkens kann über die Option \opt{cdhead} geändert werden. Für Titel, 
% Teil und Kapitel gibt es speziell dazugehörige Optionen, womit das Aussehen
% des Kopfes ggf. angepasst werden kann. Mit \cs{tud@foot@logocolor} kann
% gleichermaßen die Farbe eines etwaigen \DDC-Logo festgelegt werden, in 
% \cs{tud@foot@fontcolor} wird ggf. die Schriftfarbe für den Fuß gespeichert.
%    \begin{macrocode}
\newcommand*\tud@head@logocolor{black}
\newcommand*\tud@head@fontcolor{}
\newcommand*\tud@foot@logocolor{black}
\newcommand*\tud@foot@fontcolor{}
\newcommand*\tud@ps@onbackground{%
%    \end{macrocode}
% Zunächst die Einstellungen für Seiten ohne spezielle Hintergrundfarbe für den 
% Kopf\dots
%    \begin{macrocode}
  \ifdefvoid{\tud@pagecolor}{%
    \ifcase\tud@head@bar@num\relax% cdhead=nocolor
      \renewcommand*\tud@head@logocolor{black}%
      \renewcommand*\tud@head@fontcolor{}%
    \or% cdhead=litecolor
      \renewcommand*\tud@head@logocolor{HKS41}%
      \renewcommand*\tud@head@fontcolor{HKS41}%
    \or% cdhead=barcolor
      \renewcommand*\tud@head@logocolor{HKS41}%
      \renewcommand*\tud@head@fontcolor{white}%
    \or% cdhead=color
      \renewcommand*\tud@head@logocolor{white}%
      \renewcommand*\tud@head@fontcolor{white}%
    \fi%
%    \end{macrocode}
% \dots und den Fuß.
%    \begin{macrocode}
    \ifcase\tud@head@bar@num\relax% cdhead=nocolor
      \renewcommand*\tud@foot@logocolor{black}%
      \renewcommand*\tud@foot@fontcolor{}%
      \if@tud@foot@colored%
        \ClassWarning{\TUDClassName}{%
          It isn't possible to use a colored foot together\MessageBreak%
          with a non-colored head (`cdhead=nocolor')%
        }%
      \fi%
    \else% cdhead=*color
      \if@tud@foot@colored%
        \renewcommand*\tud@foot@logocolor{white}%
        \renewcommand*\tud@foot@fontcolor{white}%
      \else%
        \renewcommand*\tud@foot@logocolor{HKS41}%
        \renewcommand*\tud@foot@fontcolor{HKS41}%
      \fi%
    \fi%
  }{%
%    \end{macrocode}
% Die Einstellungen für Seiten mit Hintergrundfarbe variieren davon. Zuerst die 
% für farbige Titel- und Teileseiten\dots
%    \begin{macrocode}
    \ifstr{\tud@pagecolor}{HKS41}{%
      \renewcommand*\tud@head@logocolor{white}%
      \renewcommand*\tud@head@fontcolor{white}%
      \renewcommand*\tud@foot@logocolor{white}%
%    \end{macrocode}
% Die Farbe für die Schrift im Fuß wird für Poster immer weiß gesetzt, falls 
% über die Option \opt{backgroundcolor} für den Seitenhintergrund die primäre
% Hausfarbe genutzt wird.
%    \begin{macrocode}
%<*book|report|article>
      \if@tud@foot@colored%
%</book|report|article>
        \renewcommand*\tud@foot@fontcolor{white}%
%<*book|report|article>
      \else%
        \renewcommand*\tud@foot@fontcolor{HKS41!30}%
      \fi%
%</book|report|article>
      \bool@std@lock{@tud@head@widebar}{true}%
%    \end{macrocode}
% \dots sowie die für die farbigen Kapitelseiten.
%    \begin{macrocode}
    }{%
      \renewcommand*\tud@head@logocolor{HKS41}%
      \renewcommand*\tud@head@fontcolor{HKS41}%
      \ifcase\tud@head@bar@num\relax\or\or\or% cdhead=color
        \renewcommand*\tud@head@logocolor{white}%
        \renewcommand*\tud@head@fontcolor{white}%
      \fi%
      \if@tud@foot@colored%
        \renewcommand*\tud@foot@logocolor{white}%
        \renewcommand*\tud@foot@fontcolor{white}%
      \else%
        \renewcommand*\tud@foot@logocolor{HKS41}%
        \renewcommand*\tud@foot@fontcolor{HKS41}%
      \fi%
      \bool@std@lock{@tud@head@widebar}{true}%
    }%
  }%
%    \end{macrocode}
% Abhängig von der eingestzten Schriftfarbe des Kopfes wird die Linienstärke
% des Querbalkens gesetzt, die Schriftfarbe des Fußes wird global geändert, 
% damit Seitenzahl und Kolumnentitel gegebenenfalls angepasst werden.
%    \begin{macrocode}
  \let\tud@dim@line\tud@dim@thinline%
  \ifstr{\tud@head@fontcolor}{white}{\let\tud@dim@line\tud@dim@heavyline}{}%
  \global\let\tud@foot@fontcolor\tud@foot@fontcolor%
}
%    \end{macrocode}
% \end{macro}^^A \tud@foot@fontcolor
% \end{macro}^^A \tud@foot@logocolor
% \end{macro}^^A \tud@head@fontcolor
% \end{macro}^^A \tud@head@logocolor
% \end{macro}^^A \tud@ps@onbackground
% \end{macro}^^A \tud@ps@onselect
% \begin{macro}{\pagestyle}
% \changes{v2.04}{2015/06/18}{Aktivierung der Seitenstile \pgs{tudheadings} vor
%   \pkg{scrlayer-scrpage} möglich}^^A
% \begin{macro}{\tud@pagestyle}
% \changes{v2.04}{2015/06/18}{neu}
% Für den Fall, dass das Paket \pkg{scrlayer-scrpage} nicht geladen wird und 
% dennoch das Makro \cs{currentpagestyle} wie erwartet definiert ist, wird der 
% originale Befehl etwas angepasst.
%    \begin{macrocode}
\newcommand*\tud@pagestyle{}
\let\tud@pagestyle\pagestyle
\pretocmd{\tud@pagestyle}{%
  \if@atdocument\tud@BeforeSelectAnyPageStyle{#1}\fi%
  \edef\currentpagestyle{#1}%
}{}{\tud@patch@wrn{pagestyle}}
%    \end{macrocode}
% Damit die neuen Seitenstile auch vor dem Laden von \pkg{scrlayer-scrpage} 
% bereits durch den Anwender ausgewählt werden können, wird \cs{pagestyle} 
% temporär zurechtgebogen. Die Definition des Makros wird gesichert und direkt 
% vor dem Laden des Paketes wiederhergestellt. Damit werden die Seitenstile
% erst aktiviert, nachdem diese auch tatsächlich erstellt wurden.
%    \begin{macrocode}
\tud@cmd@store{pagestyle}
\renewcommand*\pagestyle[1]{\AfterPackage!{scrlayer-scrpage}{\pagestyle{#1}}}
\BeforePackage{scrlayer-scrpage}{%
  \tud@cmd@restore{pagestyle}%
  \undef\tud@pagestyle%
}
%    \end{macrocode}
% \end{macro}^^A \tud@pagestyle
% \end{macro}^^A \pagestyle
% \begin{macro}{\ps@tudheadings}
% \begin{macro}{\ps@plain.tudheadings}
% \begin{macro}{\ps@empty.tudheadings}
% \begin{macro}{\currentpagestyle}
% \begin{macro}{\BeforeSelectAnyPageStyle}
% \begin{macro}{\GetRealPageStyle}
% Um die rudimentäre Verwendung der Klassen auch zu ermöglichen, wenn das Paket 
% \pkg{scrlayer-scrpage} nicht geladen wurde, werden für diesen Fall einige 
% notwendige Makros definiert.
%    \begin{macrocode}
\TUD@UnwindPackage{scrlayer-scrpage}{%
  \ifcsundef{if@chapter}{%
    \newif\if@chapter%
    \ifcsundef{chapter}{\@chapterfalse}{\@chaptertrue}%
  }{}%
  \cslet{ps@tudheadings}{\ps@headings}%
  \cslet{ps@plain.tudheadings}{\ps@plain}%
  \cslet{ps@empty.tudheadings}{\ps@empty}%
  \providecommand*\currentpagestyle{plain}%
  \providecommand*\BeforeSelectAnyPageStyle[1]{}%
  \providecommand*\GetRealPageStyle[1]{#1}%
%    \end{macrocode}
% Außerdem wird die angepasste Definition von \cs{pagestyle} verwendet. 
%    \begin{macrocode}
  \let\pagestyle\tud@pagestyle%
  \undef\tud@pagestyle%
  \expandafter\pagestyle\expandafter{\currentpagestyle}%
}
%    \end{macrocode}
% \end{macro}^^A \GetRealPageStyle
% \end{macro}^^A \BeforeSelectAnyPageStyle
% \end{macro}^^A \currentpagestyle
% \end{macro}^^A \ps@empty.tudheadings
% \end{macro}^^A \ps@plain.tudheadings
% \end{macro}^^A \ps@tudheadings
% \begin{macro}{\thispagestyle}
% \changes{v2.03}{2015/01/20}{Auswahl eines Aliasseitenstils unterdrückt}^^A
% Wird der Befehl \cs{thispagestyle} verwendet, muss dafür Sorge getragen 
% werden, dass kein Alias-Seitenstil expandiert wird.
%    \begin{macrocode}
\patchcmd{\thispagestyle}{\gdef\@specialstyle{#1}}{%
  \xdef\@specialstyle{\GetRealPageStyle{#1}}%
}{}{\tud@patch@wrn{thispagestyle}}
%    \end{macrocode}
% \end{macro}^^A \thispagestyle
% \begin{macro}{\tud@head@font@set}
% \changes{v2.02}{2014/07/08}{Unterstützung für \opt{cdhead} hinzugefügt}^^A
% \changes{v2.03}{2015/01/30}{Bugfix für die Änderung von \cs{spaceskip} durch
%   das Paket \pkg{ragged2e}}^^A
% \begin{macro}{\tud@head@fontsize}
% \begin{macro}{\tud@head@font@light}
% \begin{macro}{\tud@head@font@bold}
% \begin{macro}{\tud@head@font@@bold}
% \changes{v2.05}{2016/04/17}{neu}^^A
% Die Schrift der Kopfzeile wird entweder in den Schriften des \CDs oder aber 
% in den serifenlosen Standardschriften gesetzt, wobei für beide Varianten
% sowohl eine fettgedruckte als auch eine normale Version benötigt wird. Die
% Schrifthöhe ist durch das \CD unabhängig von der gewählten Schriftgröße im
% Dokument vorgegeben und wird in Abhängigkeit von der Papiergröße gewählt und
% in \cs{tud@head@fontsize} gespeichert. Das Makro \cs{tud@head@font@@bold} 
% wird verwendet, um die Einstellung der fetten Schriften ohne die fixierte 
% Schriftgröße nutzen zu können.
%    \begin{macrocode}
\newcommand*\tud@head@fontsize{}
\newcommand*\tud@head@font@light{}
\newcommand*\tud@head@font@bold{}
\newcommand*\tud@head@font@@bold{}
\newcommand*\tud@head@font@set{%
%    \end{macrocode}
% Die Option \opt{cdhead} wird ausgewertet. Sollte diese inkompatibel gesetzt 
% sein, wird eine Warnung ausgegeben.
%    \begin{macrocode}
  \ifcase\tud@head@font@num\relax% false
    \ifnum\tud@cdfont@num>\z@\relax% true/heavy
      \if@tud@head@font@set%
        \ClassWarning{\TUDClassName}{%
          It isn't possible to use `cdhead=false'\MessageBreak%
          together with `cdfont=true'%
        }%
      \fi%
      \TUDoptions{cdhead=true}%
    \fi%
  \fi%
%    \end{macrocode}
% Die Schriften für den Kopf im \CD werden nachfolgend definiert. Abhängig von 
% \cs{tud@cdfont@num} werden entweder die Schriften des \CDs oder aber die 
% serifenlose Standardschrift für die Kopfzeile verwendet. Die Rückfallebene:
%    \begin{macrocode}
  \if@tud@head@font@set%
    \DeclareFixedFont{\tud@head@font@light}{\encodingdefault}%
      {\sfdefault}{\mddefault}{\updefault}{\tud@head@fontsize}%
    \DeclareFixedFont{\tud@head@font@bold}{\encodingdefault}%
      {\sfdefault}{\bfdefault}{\updefault}{\tud@head@fontsize}%
    \protected\gdef\tud@head@font@@bold{%
      \usefont{\encodingdefault}{\sfdefault}{\bfdefault}{\updefault}%
    }%
%    \end{macrocode}
% Und jetzt die eigentlichen Schriften im \CD.
%    \begin{macrocode}
    \ifcase\tud@head@font@num\relax\else% true/heavy
      \if@tud@univers%
        \ifcase\tud@head@font@num\relax\or% true
          \DeclareFixedFont{\tud@head@font@light}{\encodingdefault}%
            {\tud@univers}{l}{n}{\tud@head@fontsize}%
        \or% heavy
          \DeclareFixedFont{\tud@head@font@light}{\encodingdefault}%
            {\tud@univers}{m}{n}{\tud@head@fontsize}%
        \fi%
        \DeclareFixedFont{\tud@head@font@bold}{\encodingdefault}%
          {\tud@univers}{b}{n}{\tud@head@fontsize}%
        \protected\gdef\tud@head@font@@bold{%
          \usefont{\encodingdefault}{\tud@univers}{b}{n}%
        }%
      \fi%
    \fi%
    \global\@tud@head@font@setfalse%
    \global\@tud@head@text@settrue%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \tud@head@font@@bold
% \end{macro}^^A \tud@head@font@bold
% \end{macro}^^A \tud@head@font@light
% \end{macro}^^A \tud@head@fontsize
% \end{macro}^^A \tud@head@font@set
% \begin{macro}{\tud@head@text@line}
% \begin{macro}{\tud@head@text@list}
% \changes{v2.05}{2015/11/26}{neu}^^A
% \begin{macro}{\tud@head@text@delimiter}
% \begin{macro}{\tud@head@text@buffer}
% Diese Befehle sind Hilfsmakros, die bei der Erzeugung der Textzeile inner- und
% unterhalb des Querbalkens des TUD-Kopfes dienen.
%    \begin{macrocode}
\newcommand*\tud@head@text@line{}
\newcommand*\tud@head@text@list{}
\newcommand*\tud@head@text@delimiter{}
\newcommand*\tud@head@text@buffer{}
%    \end{macrocode}
% \end{macro}^^A \tud@head@text@buffer
% \end{macro}^^A \tud@head@text@delimiter
% \end{macro}^^A \tud@head@text@list
% \end{macro}^^A \tud@head@text@line
% \begin{macro}{\tud@head@text@add}
% \changes{v2.04}{2015/04/08}{Verwendung von \cs{protected@edef}}^^A
% \changes{v2.05}{2015/11/26}{Redesign}^^A
% Dieser Befehl dient zum Füllen einer Liste für die spätere Ausgabe der 
% Kopfzeilenfelder. Es werden sequentiellalle potentiellen Felder hinzugefügt. 
% Sollte das hinzuzufügende Feld dazu führen, dass der Text der Kopfzeile über
% den Seitenrand hinausragen würde, so wird eine weitere Zeile begonnen. Das 
% Trennzeichen zwischen einzelnen Feldern muss gepuffert werden, da dieses nur
% gesetzt werden soll, wenn ein weiteres Feld nachfolgt.
%    \begin{macrocode}
\newcommand*\tud@head@text@add[3][{, }]{%
  \ifstr{#3}{}{}{%
    \edef\tud@head@text@delimiter{\expandonce\tud@head@text@buffer}%
    \def\tud@head@text@buffer{#1}%
    \edef\@tempa{%
      \expandonce\tud@head@text@line%
      \expandonce\tud@head@text@delimiter%
      \unexpanded{#2#3}%
    }%
%    \end{macrocode}
% Sollte das hinzuzufügende Feld die aktuelle Kopfzeile \cs{tud@head@text@line} 
% über die Textbreite hinaus erweitern, wird der bisherige Inhalt in die Liste 
% \cs{tud@head@text@list} gespeichert und eine neue mit dem aktuellen Inhalt 
% begonnen. Andernfalls wird der aktuelle Inhalt dem bestehenden hinzugefügt.
%    \begin{macrocode}
    \settowidth\@tempdima{\@tempa}%
    \ifdim\@tempdima>\textwidth\relax%
      \listeadd\tud@head@text@list{\expandonce\tud@head@text@line}%
      \protected@edef\tud@head@text@line{#2#3}%
    \else%
      \edef\tud@head@text@line{\expandonce\@tempa}%
    \fi%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \tud@head@text@add
% \begin{macro}{\tud@head@text@set}
% \changes{v2.05}{2015/11/28}{neu}^^A
% \begin{macro}{\tud@head@text@wrn}
% \begin{macro}{\if@tud@head@text@set}
% \changes{v2.05}{2015/11/28}{neu}^^A
% Für die Felder im Kopf wird bei einer Änderung dieser die Warnung bezüglich 
% der zu großen Breite der Kopfinformationen, was bei kleinen Papierformaten
% geschehen kann, (re-)definiert.
%    \begin{macrocode}
\newif\if@tud@head@text@set
\newcommand*\tud@head@text@wrn[1]{}
\newcommand*\tud@head@text@set{%
  \if@tud@head@text@set%
%    \end{macrocode}
% Der Inhalt der Kopfzeile wird durch die angegeben Fakultät etc. vorgegeben.
% Sollte der Platz in einer Zeile dafür nicht ausreichen, wird eine weitere
% Zeile begonnen. Ob diese benötigt wird, ist abhängig vom Inhalt und von der
% sich daraus ergebenden Breite der Textzeile. Das Erzeugen der einzelnen 
% Textzeilen im Kopf, die in \cs{tud@head@text@list} gesichert werden, erfolgt 
% mit \cs{tud@head@text@add}\oarg{Trennzeichen}\marg{Schrift}\marg{Feld}. Die
% dafür benötigten Hilfsmakros werden vor der Verwendung initialisiert.
%    \begin{macrocode}
    \def\tud@head@text@line{}%
    \def\tud@head@text@list{}%
    \def\tud@head@text@buffer{}%
    \tud@head@text@add[\enskip]{\tud@head@font@bold}{\@faculty}%
    \tud@head@text@add{\tud@head@font@light}{\@department}%
    \tud@head@text@add{\tud@head@font@light}{\@institute}%
    \tud@head@text@add{\tud@head@font@light}{\@chair}%
%    \end{macrocode}
% Ganz zum Schluss wird der Rest aus \cs{tud@head@text@line} ebenso wie ggf. 
% die zusätzliche Zeile in die Liste expandiert.
%    \begin{macrocode}
    \listeadd\tud@head@text@list{\expandonce\tud@head@text@line}%
    \ifstr{\@extraheadline}{}{}{%%
      \listadd\tud@head@text@list{\tud@head@font@light\@extraheadline}%
    }%
    \gdef\tud@head@text@wrn##1{%
      \ClassWarning{\TUDClassName}{%
        The given entries for the headline\MessageBreak%
        (faculty, institute etc.) are ##1\MessageBreak%
        too wide for the textwidth%
      }%
    }%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \if@tud@head@text@set
% \end{macro}^^A \tud@head@text@wrn
% \end{macro}^^A \tud@head@text@set
% \begin{macro}{\tud@head@text@box}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \changes{v2.03}{2015/01/09}{Zweite Zeile wird auch leer gesetzt.}^^A
% Dieser Befehl ist der Inhalt der Ebene für den Text der Kopfzeile.
%    \begin{macrocode}
\newcommand*\tud@head@text@box{%
%    \end{macrocode}
% Sollte keine Fakultät angegeben sein, wird eine Warnung ausgegeben.
%    \begin{macrocode}
  \ifx\@faculty\@empty%
    \ClassWarningNoLine{\TUDClassName}{No `\string\faculty' given}%
    \faculty{}%
  \fi%
%    \end{macrocode}
% Die Ausgabe der Textzeile(n) mit Fakultät etc. im Kopfbereiche erfolgt über 
% das Makro \cs{tud@head@text@write}. Hierbei ist zu beachten, dass für die
% erste Zeile  bei einem zweifarbigem Kopf eine andere Textfarbe als für die
% restlichen benötigt wird. Außerdem ist für diese aufgrund der Linien im
% Querbalken ein etwas größerer Abstand zur zweiten Zeile notwendig, weshalb
% die temporären Makros \cs{@tempb} und \cs{@tempc} einmalig genutzt werden.
% Die Farbe des Textes der ersten Zeile entspricht immer der des Kopfes.
%    \begin{macrocode}
  \def\@tempb{\tud@color{\tud@head@fontcolor}}%
  \def\@tempc{\depth+\tud@dim@heavyline}%
%    \end{macrocode}
% Das Makro \cs{@tempa} wird zur Ababreitung der Liste \cs{tud@head@text@list} 
% definiert.
%    \begin{macrocode}
  \def\@tempa##1{%
    \settowidth\@tempdima{##1}%
%    \end{macrocode}
% Sollte eine der Textzeilen zu lang sein, was insbesondere bei kleineren 
% Papierformaten vorkommen kann, dann wird eine Warnung ausgegeben.
%    \begin{macrocode}
    \ifdim\@tempdima>\textwidth\relax%
      \tud@head@text@wrn{\the\dimexpr\@tempdima-\textwidth\relax}%
      \ifdim\dimexpr\@tempdima-\textwidth\relax>\hfuzz\relax%
        \hfuzz=\dimexpr\@tempdima-\textwidth\relax%
      \fi%
    \fi%
    \@tempb%
    \tud@head@text@write[\@tempc]{##1}%
    \def\@tempb{\newline}%
    \def\@tempc{\z@}%
%    \end{macrocode}
% Die weiteren Zeilen sind bei zweifarbigen Kopf normalerweise blau, nur für
% einen dunklen Seitenhintergrund weiß.
%    \begin{macrocode}
    \ifnum\tud@head@bar@num>\@ne\relax% cdhead=barcolor/color
      \ifdefvoid{\tud@pagecolor}{\color{HKS41}}{%
        \ifstr{\tud@pagecolor}{HKS41}{\color{white}}{\color{HKS41}}%
      }%
    \fi%
  }%
%    \end{macrocode}
% Dies ist nun die eigentliche Ausgabe, welche in einer vertikalen Box erfolgt.
%    \begin{macrocode}
  \vbox{%
%    \end{macrocode}
% Das Paket \pkg{ragged2e} ändert im Zweifelsfall die Länge \cs{spaceskip}. Um 
% den Kopf unbeeinflusst davon immer in der gleichen Gestalt erscheinen zu 
% lassen, wird dies hier temporär unterdrückt.
%    \begin{macrocode}
    \let\@raggedtwoe@everyselectfont\relax%
    \setlength\spaceskip{\z@}%
    \selectfont%
    \offinterlineskip%
    \forlistloop\@tempa{\tud@head@text@list}%
  }%
  \global\let\tud@head@text@wrn\@gobble%
}
%    \end{macrocode}
% \end{macro}^^A \tud@head@text@box
% \begin{macro}{\tud@head@text@write}
% \changes{v2.02}{2014/06/23}{Vertikaler Freiraum für Ober- und Unterlängen 
%   mit \cs{vphantom} eingefügt}^^A
% \changes{v2.02}{2014/12/04}{Zentrierung des Zeilentextes}^^A
% Befehl zur Ausgabe der ersten und evtl. zweiten Textzeile im TUD-Kopf
%    \begin{macrocode}
\newcommand*\tud@head@text@write[2][\z@]{%
  \raisebox{\dimexpr(\tud@dim@barheight+2\tud@dim@line-\totalheight)/2\relax}[%
    \dimexpr\tud@dim@barheight-\depth\relax%
  ][\dimexpr#1\relax]{#2\vphantom{gjpqy\"A\"O\"U}}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@head@text@write
% \begin{macro}{\tud@head@rule}
% \changes{v2.02}{2014/06/23}{gewünschte Breite als Argument}^^A
% Der Querbalken des Kopfes läuft je nach Parameterwahl \cs{tud@head@bar@num}
% entweder nur über den Textbereich oder aber über die gesamte Seitenbreite.
% Der Befehl erzeugt eine horizontale Linie mit der übergebenen Breite und 
% über \cs{tud@dim@line} definierter Dicke.
%    \begin{macrocode}
\newcommand*\tud@head@rule[1]{%
  \tud@color{\tud@head@fontcolor}%
  \rule[\ht\strutbox]{#1}{\tud@dim@line}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@head@rule
% \begin{macro}{\tud@newlayerbox}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \begin{macro}{\tud@savelayerbox}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \begin{macro}{\tud@uselayerbox}
% \changes{v2.04}{2015/05/31}{neu}^^A
% Die Inhalte für Kopf und Fuß der \pgs{tudheadings}-Seitenstile~-- sprich das 
% Logo der \TnUD, die \DDC-Logos, ein mögliches Zweilogo sowie die Logos und 
% Inhalte im Fuß werden in Boxen gesetzt, um die Anzahl der benötigten Aufrufe
% von \cs{includegraphics} möglichst gering zu halten.
%    \begin{macrocode}
\newcommand*\tud@newlayerbox[1]{%
  \expandafter\newsavebox\csname tud@layer@#1\endcsname%
}
\newcommand*\tud@savelayerbox[1]{%
  \global\expandafter\sbox\csname tud@layer@#1\endcsname%
}
\newcommand*\tud@uselayerbox[1]{%
  \expandafter\usebox\csname tud@layer@#1\endcsname%
}
%    \end{macrocode}
% \end{macro}^^A \tud@uselayerbox
% \end{macro}^^A \tud@savelayerbox
% \end{macro}^^A \tud@newlayerbox
% \begin{macro}{\tud@vlayerbox}
% \changes{v2.04}{2015/05/31}{neu}^^A
% Für die Ausgabe der Logos und Inhalte wird dieser Befehl definiert. Dieser 
% setzt die im zweiten Argument angegebenen Inhalte in eine vertikale Box, 
% deren gewünschte Höhe im ersten Argument angegeben wird. Für den Fall, dass 
% die gewünschten Inhalte die maximale Höhe überschreiten, wird eine Warnung 
% erzeugt. Der Inhalt dieser Warnung wird im dritten Argument angegeben. Damit
% soll dem Anwender geholfen werden, in diesem Fall die richtigen Maßnahmen zu
% ergreifen und nicht lediglich eine Meldung einer zu übervollen \cs{vbox} zu
% erhalten.
%    \begin{macrocode}
\newcommand*\tud@vlayerbox[3]{%
  \begingroup%
    \setbox\z@\vbox{#2}%
    \setlength\@tempdima{\dimexpr\ht\z@+\dp\z@-#1\relax}%
    \ifdim\@tempdima>\z@\relax%
      \ClassWarning{\TUDClassName}{%
        #3\MessageBreak%
        The maximum height is exceeded by \the\@tempdima\MessageBreak%
      }%
    \fi%
  \endgroup%
  \vbox to #1{#2}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@vlayerbox
%
% \iffalse
%</class&body>
%<*class&option>
% \fi
%
% \subsection{Befehle, Optionen und Umsetzung der Seitenstilvarianten}
%
% \begin{macro}{\tud@if@tudheadings}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{macro}{\tud@ps@list}
% \changes{v2.02}{2014/06/23}{neu}^^A
% Mit dem Befehl \cs{tud@if@tudheadings} kann geprüft werden, ob der im ersten 
% Argument gegebene Seitenstil~-- was auch das Makro \cs{currentpagestyle} sein
% kann, welches durch das Paket \pkg{scrlayer-scrpage} definiert wird und den
% aktuellen Seitenstil beinhaltet~-- einem aus der Liste \cs{tud@ps@list}
% entspricht. Ist dies der Fall, wird das zweite Argument ausgeführt, 
% anderfalls das dritte. Die Liste \cs{tud@ps@list} wird bei der Definition der 
% Seitenstile selbst gesetzt.
%    \begin{macrocode}
\newcommand*\tud@ps@list{}
\newcommand*\tud@if@tudheadings[3]{%
  \xifinlist{\GetRealPageStyle{#1}}{\tud@ps@list}{#2}{#3}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@ps@list
% \end{macro}^^A \tud@if@tudheadings
% \begin{option}{ddc}
% \changes{v2.02}{2014/06/23}{automatische Logowahl}^^A
% \begin{option}{ddchead}
% \changes{v2.02}{2014/06/23}{Logo von \DDC entweder in Kopf oder Fuß}^^A
% \begin{option}{ddcfoot}
% \changes{v2.02}{2014/06/23}{Logo von \DDC entweder in Kopf oder Fuß}^^A
% Diese Optionen dienen zur Auswahl des \DDC-Logos auf Seiten mit dem Stil 
% \pgs{tudheadings}. Die Option \opt{ddchead} setzt das Logo dabei immer in den
% Kopf, wobei ein mit \cs{headlogo} definiertes Zweitlogo gegebenenfalls 
% überschrieben wird. Die Option \opt{ddcfoot} setzt das Logo immer in den Fuß. 
% Mit der Option \opt{ddc} wird das Logo nur in den Kopf gesetzt, wenn kein 
% Zweitlogo angegeben ist. Ist dies jedoch der Fall, wird das Logo stattdessen 
% im Fuß ausgegeben.
% \begin{macro}{\if@tud@ddc@internal}
% \changes{v2.02}{2014/07/08}{neu}^^A
% \begin{macro}{\tud@comp@clearpage}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \begin{macro}{\tud@comp@resetpagestyle}
% \changes{v2.04}{2015/05/31}{neu}^^A
% Dieser Schalter wird intern von den Optionen \opt{ddc}, \opt{ddchead} und 
% \opt{ddcfoot} verwendet, um rekursive Aufrufe der optionen zu verhindern.
%    \begin{macrocode}
\newif\if@tud@ddc@internal
%    \end{macrocode}
% Bis zur Version~v2.02 wurden unterschiedliche Satzsiegel für den Seitenfuß 
% mit und ohne \DDC-Logo verwendet. Damit dieser im Zweifelsfall umgestellt 
% werden kann, wurde vor dem Ausführen der entsprechenden Optionen ein 
% Seitenumbruch erzwungen und nach dem Verarbeiten der Optionen der aktuelle 
% Seitenstil erneut aufgerufen. Die beiden folgenden Makros werden für dieses 
% Unterfangen definiert, jedoch beider Abarbeitung der Optionen nur noch im 
% Kompatibilitätmodus ausgeführt.
%    \begin{macrocode}
\newcommand*\tud@comp@clearpage{%
  \tud@if@tudscrverlower{2.04}{%
    \if@tud@ddc@internal\else\if@atdocument%
      \tud@if@tudheadings{\currentpagestyle}{\clearpage}{}%
    \fi\fi%
  }{}%
}
\newcommand*\tud@comp@resetpagestyle{%
  \tud@if@tudscrverlower{2.04}{%
    \if@tud@ddc@internal\else\if@atdocument%
      \tud@if@tudheadings{\currentpagestyle}{%
        \expandafter\pagestyle\expandafter{\currentpagestyle}%
      }{}%
    \fi\fi%
  }{}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@comp@clearpage
% \end{macro}^^A \tud@comp@resetpagestyle
% \end{macro}^^A \if@tud@ddc@internal
% \begin{macro}{\tud@ddc@switch}
% \changes{v2.02}{2014/06/23}{neu}^^A
% Dieses Makro definiert die gültigen Werte für die \DDC-Optionen \opt{ddc}, 
% \opt{ddchead} sowie \opt{ddcfoot}.
%    \begin{macrocode}
\newcommand*\tud@ddc@switch{}
\edef\tud@ddc@switch{%
  \TUD@numkey@bool,%
  {color}{2},{colour}{2},{cdcolor}{2},{cdcolour}{2},%
  {colorblack}{3},{colourblack}{3},{cdcolorblack}{3},{cdcolourblack}{3},%
  {gray}{4},{grey}{4},{HKS92}{4},{cdgray}{4},{cdgrey}{4},%
  {black}{5},{cdblack}{5},%
  {blue}{6},{HKS41}{6},{cdblue}{6},{cddarkblue}{6},%
  {white}{7},{cdwhite}{7}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@ddc@switch
% \begin{macro}{\tud@ddc@auto@num}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{macro}{\if@tud@ddc@auto}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{macro}{\if@tud@headlogo@option@set}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \begin{macro}{\if@tud@footlogo@option@set}
% \changes{v2.04}{2015/06/01}{neu}^^A
% Die Option \opt{ddc}.
%    \begin{macrocode}
\newif\if@tud@headlogo@option@set
\newif\if@tud@footlogo@option@set
\newif\if@tud@ddc@auto
\newcommand*\tud@ddc@auto@num{0}
\TUD@key{ddc}[true]{%
%    \end{macrocode}
% Im Kompatibiltätsmodus wird ein Seitenumbruch erzwungen. Anschließend wird 
% die Option abgearbeitet.
%    \begin{macrocode}
  \tud@comp@clearpage%
  \TUD@set@numkey{ddc}{tud@ddc@auto@num}{\tud@ddc@switch}{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
%    \end{macrocode}
% Wurde die Option \opt{ddc} intern durch \opt{ddchead} oder \opt{ddcfoot} 
% aufgerufen, wird die automatische Auswahl des \DDC-Logos deaktiviert.
%    \begin{macrocode}
    \if@tud@ddc@internal%
      \@tud@ddc@autofalse%
    \else%
%    \end{macrocode}
% Andernfalls wird die automatische Auswahl aktiviert und die beiden Optionen
% \opt{ddchead} sowie \opt{ddcfoot} intern zurückgesetzt.
%    \begin{macrocode}
      \@tud@ddc@autotrue%
      \@tud@ddc@internaltrue%
      \TUDoptions{ddchead=false}%
      \TUDoptions{ddcfoot=false}%
      \@tud@ddc@internalfalse%
    \fi%
%    \end{macrocode}
% Sowohl die \DDC-Logos als auch ein mögliches Zweilogo (\cs{headlogo}) werden
% in den entsprechenden Layern durch Boxen ausgegeben. Die beiden Schalter 
% führen zum Erneuern der dazugehörigen Logoboxen. Siehe die Beschreibung der 
% Makros \cs{tud@headlogo@option@set} sowie \cs{tud@footlogo@option@set}.
%    \begin{macrocode}
    \global\@tud@headlogo@option@settrue%
    \global\@tud@footlogo@option@settrue%
  \fi%
%    \end{macrocode}
% Abschließend wird im Kompatibilitätsmodus der aktuelle Seitenstil aufgerufen,
% um bei einem geänderten Fuß den notwendigen Satzspiegel zu laden.
%    \begin{macrocode}
  \tud@comp@resetpagestyle%
}
%    \end{macrocode}
% \end{macro}^^A \if@tud@footlogo@option@set
% \end{macro}^^A \if@tud@headlogo@option@set
% \end{macro}^^A \if@tud@ddc@auto
% \end{macro}^^A \tud@ddc@auto@num
% \begin{macro}{\tud@ddc@head@num}
% \changes{v2.03}{2015/01/22}{Seitenstilauswahl bei Deaktivierung verbessert}^^A
% Die Option \opt{ddchead} dient zum zwingenden Setzen des \DDC-Logos im Kopf 
% der Seiten im Stil von \pgs{tudheadings}.
%    \begin{macrocode}
\newcommand*\tud@ddc@head@num{0}
\TUD@key{ddchead}[true]{%
%    \end{macrocode}
% Der Seitenumbruch im Kompatibilitätsmodus.
%    \begin{macrocode}
  \tud@comp@clearpage%
  \TUD@set@numkey{ddchead}{tud@ddc@head@num}{\tud@ddc@switch}{#1}%
%    \end{macrocode}
% Beim internen Aufruf soll lediglich der Wert des Schlüssels geändert werden. 
% Wurde die Option durch den Anwender genutzt, werden die korrespondierenden 
% Optionen zurückgesetzt. Der Aufruf der Option \opt{ddc} führt zum erneuten 
% setzen der Logoboxen.
%    \begin{macrocode}
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \if@tud@ddc@internal\else%
      \@tud@ddc@internaltrue%
      \TUDoptions{ddcfoot=false}%
      \TUDoptions{ddc=false}%
      \@tud@ddc@internalfalse%
    \fi%
  \fi%
%    \end{macrocode}
% Das Setzen des Seitenstils im Kompatibilitätsmodus.
%    \begin{macrocode}
  \tud@comp@resetpagestyle%
}
%    \end{macrocode}
% \end{macro}^^A \tud@ddc@head@num
% \begin{macro}{\tud@ddc@foot@num}
% \changes{v2.03}{2015/01/22}{Seitenstilauswahl bei Deaktivierung verbessert}^^A
% Die Option \opt{ddcfoot} dient zum zwingenden Setzen des \DDC-Logos im Fuß 
% der Seiten im Stil von \pgs{tudheadings}. Das Vorgehen beim Umschalten des
% Schlüssels ist äquivalent zur Option \opt{ddchead}
%    \begin{macrocode}
\newcommand*\tud@ddc@foot@num{0}
\TUD@key{ddcfoot}[true]{%
%    \end{macrocode}
% Der Seitenumbruch im Kompatibilitätsmodus.
%    \begin{macrocode}
  \tud@comp@clearpage%
  \TUD@set@numkey{ddcfoot}{tud@ddc@foot@num}{\tud@ddc@switch}{#1}%
%    \end{macrocode}
% Beim internen Aufruf soll lediglich der Wert des Schlüssels geändert werden. 
% Wurde die Option durch den Anwender genutzt, werden die korrespondierenden 
% Optionen zurückgesetzt. Der Aufruf der Option \opt{ddc} führt zum erneuten 
% setzen der Logoboxen.
%    \begin{macrocode}
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \if@tud@ddc@internal\else%
      \@tud@ddc@internaltrue%
      \TUDoptions{ddchead=false}%
      \TUDoptions{ddc=false}%
      \@tud@ddc@internalfalse%
    \fi%
  \fi%
%    \end{macrocode}
% Das Setzen des Seitenstils im Kompatibilitätsmodus.
%    \begin{macrocode}
  \tud@comp@resetpagestyle%
}
%    \end{macrocode}
% \end{macro}^^A \tud@ddc@foot@num
% \end{option}^^A ddcfoot
% \end{option}^^A ddchead
% \end{option}^^A ddc
%
% \iffalse
%</class&option>
%<*class&body>
% \fi
%
% \begin{macro}{\tud@ddc@check}
% \changes{v2.02}{2014/06/23}{neu}^^A
% Dieses Hilfsmakro wird aufgerufen, wenn geprüft wird, welche Einstellungen
% für Kopf und Fuß des Seitenstiles \pgs{tudheadings} zum Tragen kommen sollen.
% Dabei wird über den Schalter \cs{if@tud@ddc@auto}festgelegt, ob die Auswahl 
% des \DDC-Logos automatisch erfolgen soll~-- Option \opt{ddc} wurde verwendet.
% Ist dies der Fall, wird das Logo standardmäßig im Kopf gesetzt. Ist jedoch
% durch den Befehl \cs{headlogo} ein Zweitlogo angegeben worde, wird dieses in
% der Fußzeile ausgegeben. Die Verwendung einer der Optionen \opt{ddchead} bzw. 
% \opt{ddcfoot} forciert die Ausgabe des \DDC-Logos an der gewünschten Stelle.
% Die jeweils gültige Auswahl für Kopf bzw. Fuß wird in den Makros \cs{@tempa} 
% bzw. \cs{@tempb} geschrieben und kann anschließend ausgewertet werden.
%    \begin{macrocode}
\newcommand*\tud@ddc@check{%
  \let\@tempa\tud@ddc@head@num%
  \let\@tempb\tud@ddc@foot@num%
  \if@tud@ddc@auto%
    \ifdefvoid{\tud@headlogo@filename}{%
      \let\@tempa\tud@ddc@auto@num%
      \let\@tempb\z@%
    }{%
      \let\@tempa\z@%
      \let\@tempb\tud@ddc@auto@num%
    }%
  \fi%
%    \end{macrocode}
% Für die Satzspiegelvergrößerung wird beim Vorhandensein eines oder mehrerer 
% Logos im Fuß die Variable \cs{@tempb} auf einen negativen Wert gesetzt, um 
% auch ohne die Ausgabe eines \DDC-Logos den Fußbereich zu vergrößern.
%    \begin{macrocode}
  \tud@if@tudscrverlower{2.03}{%
    \ifnum\@tempb=\z@\relax%
      \ifdefvoid{\tud@footlogo@filenames}{}{\let\@tempb\m@ne}%
    \fi%
  }{}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@ddc@check
% \begin{macro}{\tud@layer@main@black}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \begin{macro}{\tud@layer@main@HKS41}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \begin{macro}{\tud@layer@main@white}
% \changes{v2.04}{2015/05/31}{neu}^^A
% Diese drei Boxen werden für das Logo der \TnUD reserviert. Abhängig von der 
% gewählten Option des Layouts und der Seitenfarbe wird eine der Logos in der 
% notwendigen Farbe ausgewählt.
%    \begin{macrocode}
\tud@newlayerbox{main@black}
\tud@newlayerbox{main@HKS41}
\tud@newlayerbox{main@white}
%    \end{macrocode}
% \end{macro}^^A \tud@layer@main@white
% \end{macro}^^A \tud@layer@main@HKS41
% \end{macro}^^A \tud@layer@main@black
% \begin{macro}{\tud@mainlogo@set}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \begin{macro}{\if@tud@mainlogo@wrn}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \begin{length}{\tud@dim@mainlogoheight}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \begin{macro}{\tud@mainlogo@wrn}
% \changes{v2.02}{2014/06/23}{Umbenennen von \cs{tud@head@logo@wrn}}^^A
%    \begin{macrocode}
\newlength\tud@dim@mainlogoheight
\newcommand*\tud@mainlogo@wrn[1]{}
%    \end{macrocode}
% Dieses Makro setzt zu einen das Logo der \TnUD als auch~-- durch den Aufruf 
% der entsprechenden Befehle zum Schluss~-- alle weiteren Logos und Inhalte im 
% Kopf und Fuß. Dies geschieht nach jeder Satzspiegeländerung beim Ausführen 
% der einzelnen Seitenstil-Layer. Dafür wird \cs{if@tud@mainlogo@set} im Hook 
% \cs{tud@AfterChangingArea} gesetzt.
%    \begin{macrocode}
\newif\if@tud@mainlogo@set
\newcommand*\tud@mainlogo@set{%
  \if@tud@mainlogo@set%
    \def\@tempa{\includegraphics[keepaspectratio,width=\tud@dim@logowidth]}%
    \tud@savelayerbox{main@black}{\@tempa{TUD-black}}%
    \tud@savelayerbox{main@HKS41}{\@tempa{TUD-blue}}%
    \tud@savelayerbox{main@white}{\@tempa{TUD-white}}%
    \settoheight\tud@dim@mainlogoheight{\tud@uselayerbox{main@black}}%
    \global\tud@dim@mainlogoheight=\tud@dim@mainlogoheight%
%    \end{macrocode}
% Es soll sichergestellt werden, dass das bei der Verwendung von \pkg{typearea}
% über den Satzspiegel in den Seitenrand hinausragende TUD-Logo nicht außerhalb
% des Druckrandes liegt. Dies kann beispielsweise bei kleinen Papierformaten, 
% zweiseitigem Satz und/oder einem zu großen \opt{DIV}-Wertes passieren. Es
% wird in diesem Fall eine Warnung ausgegeben, damit das Problem durch den
% Anwender behoben werden kann.
%    \begin{macrocode}
    \gdef\tud@mainlogo@wrn##1{%
      \ifdim##1<\ta@bcor\relax%
        \ClassWarning{\TUDClassName}{%
          The selected page layout means that the\MessageBreak%
          logo of TUD extends beyond the printing area.\MessageBreak%
          The inner margin is smaller than BCOR\MessageBreak%
          (`BCOR=\the\ta@bcor', inner margin is \the##1)\MessageBreak%
          Maybe you should decrease the current value\MessageBreak%
          of DIV (`DIV=\the\ta@div')%
        }%
        \global\let\tud@mainlogo@wrn\@gobble%
      \fi%
    }%
%    \end{macrocode}
% Hier werden die beiden Makros aufgerufen, um die Inhalte von Kopf und Fuß in 
% den Boxen in der richtigen Größe neu zu setzen.
%    \begin{macrocode}
    \tud@headlogo@set%
    \tud@footlogo@set%
    \global\@tud@mainlogo@setfalse%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \tud@mainlogo@wrn
% \end{length}^^A \tud@dim@mainlogoheight
% \end{macro}^^A \if@tud@mainlogo@set
% \end{macro}^^A \tud@mainlogo@set
% \begin{macro}{\tud@mainlogo@use}
% \changes{v2.04}{2015/05/31}{neu}^^A
% Hiermit erfolgt die Ausgabe der gespeicherten Boxen für das Logo der \TnUD, 
% wobei \cs{tud@head@logocolor} die Farbe festlegt.
%    \begin{macrocode}
\newcommand*\tud@mainlogo@use{%
  \tud@mainlogo@wrn{%
    \dimexpr\oddsidemargin+1in+\tud@dim@logox-\tud@dim@widemargin\relax%
  }%
  \tud@uselayerbox{main@\tud@head@logocolor}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@mainlogo@use
% \begin{macro}{\tud@layer@head@black}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \begin{macro}{\tud@layer@head@HKS41}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \begin{macro}{\tud@layer@head@white}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \begin{macro}{\tud@layer@head@option}
% \changes{v2.04}{2015/05/31}{neu}^^A
% Diese Boxen werden für das \DDC-Logo und das Zweitlogo im Kopf definiert. Der 
% Box \cs{tud@layer@head@option} fäält dabei die Rolle zu, entweder ein~-- per 
% Option gewähltes~-- \DDC-Logo oder aber das mit \cs{headlogo} angegebene 
% Zweitlogo zusichern und auszugeben. Die anderen drei Boxen speichern das Logo 
% von \DDC in den drei für die unterschiedlichen Layoutausprägung benötigten 
% Varianten.
%    \begin{macrocode}
\tud@newlayerbox{head@black}
\tud@newlayerbox{head@HKS41}
\tud@newlayerbox{head@white}
\tud@newlayerbox{head@option}
%    \end{macrocode}
% \end{macro}^^A \tud@layer@head@option
% \end{macro}^^A \tud@layer@head@white
% \end{macro}^^A \tud@layer@head@HKS41
% \end{macro}^^A \tud@layer@head@black
% \begin{macro}{\headlogo}
% \changes{v2.02}{2014/06/23}{Anpassung an automatische Wahl des \DDC-Logos}^^A
% \begin{macro}{\tud@headlogo@filename}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{macro}{\tud@headlogo@fileoptions}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{macro}{\tud@headlogo@wrn}
% \changes{v2.02}{2014/06/23}{neu}^^A
% Diese Befehle dienen zum Einbinden eines möglichen Zweitlogos im Kopf bündig
% zum rechten Seitenrand. Mit \cs{headlogo}\oarg{Optionsliste}\marg{Dateiname} 
% werden der Dateiname und das optionale Argument in \cs{tud@headlogo@filename} 
% bzw. \cs{tud@headlogo@fileoptions} gespeichert, damit diese später bei der
% tatsächlichen Verwendung des Logos mit dem Makro \cs{tud@headlogo@set} an den
% Befehl \cs{includegraphics} weitergereicht werden können.
%    \begin{macrocode}
\newcommand*\tud@headlogo@filename{}
\newcommand*\tud@headlogo@fileoptions{}
\newcommand*\tud@headlogo@wrn{}
\newcommand*\headlogo[2][]{%
  \tud@comp@clearpage%
  \renewcommand*\tud@headlogo@filename{#2}%
  \renewcommand*\tud@headlogo@fileoptions{#1}%
%    \end{macrocode}
% Nachdem Setzen des Zweitlogos müssen die entsprechenden Boxen mit den Logos 
% von \DDC neu gesetzt werden. Weil dieses dabei vom Kopf in den Fuß oder
% umgekehrt wandern könnte, werden beide relevanten Makros ausgeführt.
%    \begin{macrocode}
  \global\@tud@headlogo@option@settrue%
  \global\@tud@footlogo@option@settrue%
  \gdef\tud@headlogo@wrn{%
    \ClassWarning{\TUDClassName}{%
      Secondary logo `\string\headlogo{\tud@headlogo@filename}'\MessageBreak%
      is overwritten with DDC logo. Maybe you should\MessageBreak%
      use `ddcfoot' or better `ddc' instead of `ddchead'%
    }%
    \global\let\tud@headlogo@wrn\relax%
  }%
  \tud@comp@resetpagestyle%
}
%    \end{macrocode}
% \end{macro}^^A \tud@headlogo@wrn
% \end{macro}^^A \tud@headlogo@fileoptions
% \end{macro}^^A \tud@headlogo@filename
% \end{macro}^^A \headlogo
% \begin{macro}{\tud@headlogo@set}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \begin{macro}{\tud@headlogo@option@set}
% \changes{v2.04}{2015/05/31}{neu}^^A
% \changes{v2.05}{2015/07/27}{Bugfix für Dateien in Unterordnern}^^A
% Äquivalent zum Logo der \TnUD werden auch für das Logo von \DDC drei
% Farbvarianten erstellt. 
%    \begin{macrocode}
\newcommand*\tud@headlogo@set{%
  \def\@tempa{%
    \includegraphics[keepaspectratio,totalheight=\tud@dim@mainlogoheight]%
  }%
  \tud@savelayerbox{head@black}{\@tempa{DDC-24}}%
  \tud@savelayerbox{head@HKS41}{\@tempa{DDC-27}}%
  \tud@savelayerbox{head@white}{\@tempa{DDC-30}}%
  \tud@headlogo@option@set%
}
%    \end{macrocode}
% Hiermit werden die \DDC-Optionen \opt{ddc} bzw. \opt{ddchead} abgearbeitet 
% sowie ein ggf. gegebenes Zweitlogo gespeichert. Dies geschieht beim Aufruf 
% des passenden Layers, falls der Schalter \cs{if@tud@headlogo@option@set} 
% gesetzt wurde.
%    \begin{macrocode}
\newcommand*\tud@headlogo@option@set{%
  \if@tud@headlogo@option@set%
    \def\@tempc##1##2{%
      \tud@savelayerbox{head@option}{%
        \includegraphics[%
          keepaspectratio,totalheight=\tud@dim@mainlogoheight,##2%
        ]{##1}%
      }%
    }%
    \tud@savelayerbox{head@option}{}%
    \tud@ddc@check%
    \ifcase\@tempa\relax% \tud@ddc@head@num=false
      \ifdefvoid{\tud@headlogo@filename}{}{%
        \protected@edef\tud@headlogo@filename{%
          \expandafter\trim@spaces\expandafter{\tud@headlogo@filename}%
        }%
        \protected@edef\@tempb{%
          \noexpand\@tempc{\tud@headlogo@filename}{\tud@headlogo@fileoptions}%
        }%
        \@tempb%
      }%
    \or\or% \tud@ddc@head@num=color
      \@tempc{DDC-03}{}%
    \or% \tud@ddc@head@num=colorblack
      \@tempc{DDC-09}{}%
    \or% \tud@ddc@head@num=gray
      \@tempc{DDC-21}{}%
    \or% \tud@ddc@head@num=black
      \@tempc{DDC-24}{}%
    \or% \tud@ddc@head@num=blue
      \@tempc{DDC-27}{}%
    \or% \tud@ddc@head@num=white
      \@tempc{DDC-30}{}%
    \fi%
    \global\@tud@headlogo@option@setfalse%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \tud@headlogo@option@set
% \end{macro}^^A \tud@headlogo@set
% \begin{macro}{\tud@headlogo@use}
% \changes{v2.04}{2015/05/31}{neu}^^A
% Die Ausgabe von \DDC- oder Zweitlogo im Kopf erfolgt mit diesem Makro. Dabei 
% werden diese in einer Box vertikal zentriert.
%    \begin{macrocode}
\newcommand*\tud@headlogo@use{%
  \tud@vlayerbox{\tud@dim@mainlogoheight}{%
    \vss%
    \hbox{%
      \tud@ddc@check%
      \ifnum\@tempa=\@ne\relax% \tud@ddc@head@num=true
        \tud@uselayerbox{head@\tud@head@logocolor}%
      \else%
        \tud@uselayerbox{head@option}%
      \fi%
    }%
    \vss%
  }{%
    The given `\string\headlogo{\tud@headlogo@filename}' is too large.%
  }%
  \ifdefvoid{\tud@headlogo@filename}{}{%
    \tud@ddc@check%
    \ifnum\@tempa>\z@\relax\tud@headlogo@wrn\fi%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \tud@headlogo@use
% \begin{macro}{\tud@layer@foot@black}
% \changes{v2.04}{2015/06/01}{neu}^^A
% \begin{macro}{\tud@layer@foot@HKS41}
% \changes{v2.04}{2015/06/01}{neu}^^A
% \begin{macro}{\tud@layer@foot@white}
% \changes{v2.04}{2015/06/01}{neu}^^A
% \begin{macro}{\tud@layer@foot@option}
% \changes{v2.04}{2015/06/01}{neu}^^A
% Im Fußbereich kann das \DDC-Logo rechtsbündig ausgegeben. Hierfür werden die 
% entsprechenden Boxen für alle Farbvarianten definiert. Diese werden genutzt,
% wenn entweder die Option \opt{ddcfoot} oder aber \opt{ddc} in Verbindung mit
% einem Zweitlogo (\cs{headlogo}) genutzt wird. 
%    \begin{macrocode}
\tud@newlayerbox{foot@black}
\tud@newlayerbox{foot@HKS41}
\tud@newlayerbox{foot@white}
\tud@newlayerbox{foot@option}
%    \end{macrocode}
% \end{macro}^^A \tud@layer@foot@option
% \end{macro}^^A \tud@layer@foot@white
% \end{macro}^^A \tud@layer@foot@HKS41
% \end{macro}^^A \tud@layer@foot@black
% \begin{length}{\footlogoheight}
% \changes{v2.03}{2015/01/27}{neu}^^A
% \begin{length}{\tud@dim@footlogoheight}
% \changes{v2.04}{2015/06/01}{neu}^^A
% \begin{macro}{\tud@footlogoheight@set}
% \changes{v2.04}{2015/04/21}{neu}^^A
% Für den Anwender besteht mit der Länge \cs{footlogoheight} die Möglichkeit, 
% die Höhe aller Logos im Fußbereich~-- also eventuell das \DDC-Logo sowie
% vom Anwender mit dem Befehl \cs{footlogo} angegebene Logos~-- zentral
% festzulegen. Dabei wird die Länge nicht direkt genutzt, sondern intern
% \cs{tud@dim@footlogoheight} verwendet. mit \cs{tud@footlogoheight@set} wird
% geprüft, ob der Anwender \cs{footlogoheight} tatsächlich angepasst hat.
% Sollte dies der Fall sein, wird \cs{tud@footlogoheight@set} auf diesen Wert
% gesetzt, andernfalls werden die hinterlegten Standardwerte verwendet.
%    \begin{macrocode}
\newlength\footlogoheight
\newlength\tud@dim@footlogoheight
\newcommand*\tud@footlogoheight@set{%
  \ifdim\footlogoheight=\z@\relax%
    \tud@if@tudscrverlower{2.03}{%
      \setlength\tud@dim@footlogoheight{.6\tud@dim@topmargin}%
    }{%
      \setlength\tud@dim@footlogoheight{\tud@dim@mainlogoheight}%
    }%
  \else%
%    \end{macrocode}
% Der Grund für die Verwendung einer internen Länge \cs{tud@dim@footlogoheight} 
% liegt darin begründet, dass eine Änderung der Länge \cs{footlogoheight} eine 
% Erneuerung der genutzten Boxen benötigt. Die Prüfung und ggf. das Setzen des 
% entsprechenden Schalters geschieht hier.
%    \begin{macrocode}
    \ifdim\footlogoheight=\tud@dim@footlogoheight\relax\else%
      \setlength\tud@dim@footlogoheight{\footlogoheight}%
      \global\@tud@footlogo@option@settrue%
    \fi%
  \fi%
  \global\tud@dim@footlogoheight=\tud@dim@footlogoheight%
}
%    \end{macrocode}
% \end{macro}^^A \tud@footlogoheight@set
% \end{length}^^A \tud@dim@footlogoheight
% \end{length}^^A \footlogoheight
% \begin{macro}{\tud@footlogo@set}
% \changes{v2.04}{2015/06/01}{neu}^^A
% \begin{macro}{\tud@footlogo@ddc@set}
% \changes{v2.04}{2015/06/01}{neu}^^A
% \begin{macro}{\tud@footlogo@option@set}
% \changes{v2.04}{2015/06/01}{neu}^^A
% Auch im Fuß werden für das \DDC-Logo verschiedene Boxen für die Farbvarianten 
% \val{black}, \val{HKS41} und \val{white} sowie eine für die gezielte Auswahl
% über die Optionen \opt{ddc} bzw. \opt{ddcfoot} erstellt. Dafür wird zunächst
% das Makro \cs{tud@footlogo@ddc@set} definiert.
%    \begin{macrocode}
\newcommand*\tud@footlogo@ddc@set[2]{%
  \tud@footlogoheight@set%
  \tud@savelayerbox{foot@#1}{%
    \includegraphics[keepaspectratio,totalheight=\tud@dim@footlogoheight]{#2}%
  }%
}
%    \end{macrocode}
% anschließend erfolgt das eigentliche Setzen der Boxen.
%    \begin{macrocode}
\newcommand*\tud@footlogo@set{%
  \tud@footlogo@ddc@set{black}{DDC-22}%
  \tud@footlogo@ddc@set{HKS41}{DDC-25}%
  \tud@footlogo@ddc@set{white}{DDC-28}%
  \tud@footlogo@option@set%
}
%    \end{macrocode}
% Hiermit werden die \DDC-Optionen \opt{ddc} bzw. \opt{ddcfoot} abgearbeitet. 
% Dies geschieht bei der Ausgabe des dazugehörigen Layers, falls hierfür der
% entsprechende Schalter \cs{if@tud@footlogo@option@set} gesetzt wurde.
%    \begin{macrocode}
\newcommand*\tud@footlogo@option@set{%
  \if@tud@footlogo@option@set%
    \tud@ddc@check%
    \ifcase\@tempb\relax\or\or% \tud@ddc@foot@num=color
      \tud@footlogo@ddc@set{option}{DDC-01}%
    \or% \tud@ddc@foot@num=colorblack
      \tud@footlogo@ddc@set{option}{DDC-07}%
    \or% \tud@ddc@foot@num=gray
      \tud@footlogo@ddc@set{option}{DDC-19}%
    \or% \tud@ddc@foot@num=black
      \tud@footlogo@ddc@set{option}{DDC-22}%
    \or% \tud@ddc@foot@num=blue
      \tud@footlogo@ddc@set{option}{DDC-25}%
    \or% \tud@ddc@foot@num=white
      \tud@footlogo@ddc@set{option}{DDC-28}%
    \fi%
    \global\@tud@footlogo@option@setfalse%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \tud@footlogo@option@set
% \end{macro}^^A \tud@footlogo@ddc@set
% \end{macro}^^A \tud@footlogo@set
% \begin{macro}{\tud@footlogo@ddc@use}
% \changes{v2.04}{2015/06/01}{neu}^^A
% Die Ausgabe des \DDC-Logos im Fuß erfolgt mit diesem Makro. Dabei wird dieses 
% in einer Box optisch~-- leicht nach oben verschoben~-- vertikal zentriert.
%    \begin{macrocode}
\newcommand*\tud@footlogo@ddc@use[2]{%
  \tud@ddc@check%
  \ifcase\@tempb\relax\else% \tud@ddc@foot@num=!false
    \tud@footlogo@option@set%
    \setbox\z@\hbox{%
      \tud@vlayerbox{#1}{%
        \vss%
        \hbox to #2{%
          \hss%
          \ifcase\@tempb\relax\or% \tud@ddc@foot@num=true
            \tud@uselayerbox{foot@\tud@foot@logocolor}%
          \else%
            \tud@uselayerbox{foot@option}%
          \fi%
        }%
        \vss\vss%
      }{%
        `\string\footlogoheight' (\the\tud@dim@footlogoheight) is\MessageBreak%
        too high. You should reduce this length.%
        \ifnum\tud@cdgeometry@num>\@ne% true/symmetric/twoside
          \MessageBreak%
          Alternatively you can enlarge the bottom margin\MessageBreak%
          by using option `extrabottommargin'.%
        \fi%
      }%
    }%
%    \end{macrocode}
% Nach der Ausgabe wird ein begativer horizontaler Abstand in der Boxbreite 
% eingefügt, damit nachfolgende Boxen überlagert werden können.
%    \begin{macrocode}
    \usebox\z@\hspace*{-\wd\z@}%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \tud@footlogo@ddc@use
% \begin{macro}{\tud@layer@foot@cmd}
% \changes{v2.04}{2015/06/01}{neu}^^A
% Für das Setzen von benutzerdefinierten Logos im Fußbereich wird diese Box 
% verwendet.
%    \begin{macrocode}
\tud@newlayerbox{foot@cmd}
%    \end{macrocode}
% \end{macro}^^A \tud@layer@foot@cmd
% \begin{macro}{\footlogo}
% \changes{v2.03}{2015/01/27}{neu}^^A
% \begin{macro}{\tud@footlogo@filenames}
% \changes{v2.03}{2015/01/27}{neu}^^A
% \begin{macro}{\tud@footlogo@fileoptions}
% \changes{v2.03}{2015/01/27}{neu}^^A
% \begin{macro}{\footlogosep}
% \changes{v2.03}{2015/01/27}{neu}^^A
% Mit dem Befehl \cs{footlogo} kann eine kommasparierte Liste für Logos im 
% Fuß angegeben werden, die mit \cs{footlogosep} voneinander getrennt werden.
%    \begin{macrocode}
\newcommand*\footlogosep{\hfill}
\newcommand*\tud@footlogo@filenames{}
\newcommand*\tud@footlogo@fileoptions{}
\newcommand*\footlogo[2][]{%
  \tud@comp@clearpage%
  \renewcommand*\tud@footlogo@filenames{#2}%
  \renewcommand*\tud@footlogo@fileoptions{#1}%
  \global\@tud@footlogo@cmd@settrue%
  \tud@comp@resetpagestyle%
}
%    \end{macrocode}
% \end{macro}^^A \footlogosep
% \end{macro}^^A \tud@footlogo@fileoptions
% \end{macro}^^A \tud@footlogo@filenames
% \end{macro}^^A \footlogo
% \begin{macro}{\tud@footlogo@cmd@set}
% \changes{v2.04}{2015/06/01}{neu}^^A
% \begin{macro}{\tud@footlogo@cmd@@set}
% \changes{v2.03}{2015/01/27}{neu}^^A
% \changes{v2.03}{2015/02/02}{optionale Parameter für unterschiedliche Dateien 
% individuell nutzbar}^^A
% Die mit \cs{footlogo} angegeben Logos und die dazugehörigen Einstellungen, 
% welche entweder allgemein über das optionale Argument oder aber individuell 
% durch \val{:} an den Dateinamen angehängt übergeben wurden, werden hier in
% der Box \cs{tud@layer@foot@cmd} gespeichert.
%    \begin{macrocode}
\newif\if@tud@footlogo@cmd@set
\newcommand*\tud@footlogo@cmd@set[2]{%
  \if@tud@footlogo@cmd@set%
    \tud@footlogoheight@set%
    \tud@savelayerbox{foot@cmd}{%
      \hbox to #2{%
%    \end{macrocode}
% Hier erfolgt die eigentliche Abarbeitung der mit \cs{footlogo} angegeben 
% Liste der benutzerdefinierten Logos. In \cs{@tempa} wird nach dem ersten 
% Durchlauf der Schleife der Inhalt von \cs{footlogosep} gespeichert und nach
% dem ersten Logo vor jedem weiteren eingefügt. Um versehentlich angegebene 
% Leerzeichen zu entfernen, werden diese mit \cs{trim@spaces} entfernt.
%    \begin{macrocode}
        \let\@tempa\relax%
        \@for\@tempb:=\tud@footlogo@filenames\do{%
          \edef\@tempb{\expandafter\trim@spaces\expandafter{\@tempb}}%
          \@tempa%
          \ifx\@tempb\@empty\else%
            \expandafter\tud@footlogo@cmd@@set\expandafter{\@tempb}{#1}%
          \fi%
          \let\@tempa\footlogosep%
        }%
        \hss%
      }%
    }%
    \global\@tud@footlogo@cmd@setfalse%
  \fi%
}
%    \end{macrocode}
% Der Befehl \cs{tud@footlogo@cmd@set} wird genutzt, um die einzelnen Logos für
% den Fuß nacheinander in der Box \cs{tud@layer@foot@cmd} zu setzen.
%    \begin{macrocode}
\newcommand*\tud@footlogo@cmd@@set[2]{%
  \begingroup%
%    \end{macrocode}
% Dabei soll es möglich sein, optionale Parameter an \cs{includegraphics} zu 
% übergeben. Dies soll zum einen global für alle Dateien als auch individuell 
% für einzelne Logos möglich sein. Zu diesem Zweck wird die Schnittstelle für 
% den Anwender so gestaltet, dass individuelle Parameter mit einem Doppelpunkt
% direkt an den Dateinamen angehangen werden können.
%    \begin{macrocode}
    \def\@tempa{}%
    \def\@tempb{}%
    \@tempswatrue%
    \def\do##1{%
      \if@tempswa%
        \def\@tempa{##1}%
        \@tempswafalse%
      \else%
        \expandafter\def\expandafter\@tempb\expandafter{\@tempb,##1}%
      \fi%
    }%
    \let\@tempc\relax%
    \DeclareListParser{\@tempc}{:}%
    \@tempc{#1}%
%    \end{macrocode}
% In jedem Fall werden die Grundeinstellungen als erstes ausgeführt.
%    \begin{macrocode}
    \preto\tud@footlogo@fileoptions{%
      keepaspectratio,totalheight=\tud@dim@footlogoheight,%
    }%
%    \end{macrocode}
% Wurden tatsächlich inidviduelle Parameter übergeben, so werden diese als 
% letztes ausgeführt, um vorige Einstellungen überschreiben zu können.
%    \begin{macrocode}
    \appto\tud@footlogo@fileoptions{\@tempb}%
    \protected@edef\@tempc{%
      \noexpand\includegraphics[\tud@footlogo@fileoptions]{\@tempa}%
    }%
%    \end{macrocode}
% Die Logos werden~-- wie auch das \DDC-Logo im Fuß~-- individuell optisch
% vertikal zentriert.
%    \begin{macrocode}
    \tud@vlayerbox{#2}{\vss\hbox{\@tempc}\vss\vss}{%
      The given `\string\footlogo{\@tempa}' is too large.%
    }%
  \endgroup%
}
%    \end{macrocode}
% \end{macro}^^A \if@tud@footlogo@cmd@set
% \end{macro}^^A \tud@footlogo@cmd@set
% \begin{macro}{\tud@footlogo@cmd@use}
% \changes{v2.04}{2015/06/01}{neu}^^A
% Der Befehl \cs{tud@footlogo@cmd@use} wird genutzt, um die einzelnen Logos für
% den Fuß innerhalb der Ebene \val{tudheadings.foot.content} auszugeben.
%    \begin{macrocode}
\newcommand*\tud@footlogo@cmd@use[2]{%
  \tud@footlogo@option@set%
  \tud@footlogo@cmd@set{#1}{#2}%
  \setbox\z@\hbox{\tud@uselayerbox{foot@cmd}}%
  \usebox\z@\hspace*{-\wd\z@}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@footlogo@cmd@use
% \begin{KOMAfont}{tudheadings}
% \changes{v2.04}{2015/04/21}{neu}^^A
% \begin{macro}{\footcontent}
% \changes{v2.04}{2015/04/21}{neu}^^A
% \begin{macro}{\tud@footcontent@do}
% \changes{v2.04}{2015/04/21}{neu}^^A
% \begin{macro}{\tud@footcontent@@do}
% \changes{v2.04}{2015/04/21}{neu}^^A
% \changes{v2.05}{2016/04/17}{Stern im Argument erhält aktuellen Inhalt}^^A
% \begin{macro}{\tud@footcontent@fontface}
% \changes{v2.04}{2015/06/01}{neu}^^A
% \changes{v2.05}{2015/07/21}{Bugfix für die Schriftgröße und den Durchschuss 
%   bei einer entsprechenden Anpassung der Schriftart \val{tudheadings}}^^A
% \begin{macro}{\tud@footcontent@left}
% \changes{v2.04}{2015/06/01}{neu}^^A
% \begin{macro}{\tud@footcontent@right}
% \changes{v2.04}{2015/06/01}{neu}^^A
% Mit dem Befehl \cs{footcontent} kann der Inhalt für den Fußbereich der 
% Seiten im Stil \pgs{tudheadings} festgelegt werden. Dieser wird mit passenden 
% Schrifteinstellungen entweder einspaltig oder zweispaltig gesetzt. Die 
% Sternversion des Befehls nimmt keinerlei Einstellungen für die Schrift vor.
%    \begin{macrocode}
\newkomafont{tudheadings}{\tud@color{\tud@foot@fontcolor}}
%    \end{macrocode}
% Die mit \cs{footcontent} angegebenen Inhalte werden in diesen drei Makros 
% gesichert, weshalb diese vorher alloziert werden. Anschließend erfolgt die 
% Definition des Befehls.
%    \begin{macrocode}
\newcommand*\tud@footcontent@fontface{}
\newcommand*\tud@footcontent@left{}
\newcommand*\tud@footcontent@right{\@nil}
%    \end{macrocode}
% Die Sternversion ändert die Schriftgröße vom Inhalt nicht. Die Normalversion
% nutzt die Schriftgröße der Kopfzeile mit einem passenden Durchschuss.
%    \begin{macrocode}
\newcommand*\footcontent{%
  \@ifstar{%
    \renewcommand*\tud@footcontent@fontface{\usekomafont{tudheadings}}%
    \tud@footcontent@do%
  }{%
    \renewcommand*\tud@footcontent@fontface{%
      \usekomafont{tudheadings}%
      \setlength\@tempdima{\tud@head@fontsize\p@}%
      \fontsize{\tud@head@fontsize}{1.25\@tempdima}%
      \selectfont%
    }%
    \tud@footcontent@do%
  }%
}
%    \end{macrocode}
% Normalerweise wird der Inhalt vollständig über die verfügbare Seitenfußbreite 
% gesetzt. Wird das optionale Argument \emph{nach} dem obligatorischen genutzt, 
% so erfolgt die Ausgabe zweispaltig. Das optionale Argument kann für 
% zusätzliche Formatierungsbefehle genutzt werden.
%    \begin{macrocode}
\newcommand*\tud@footcontent@do[2][]{%
  \kernel@ifnextchar[%]
    {\tud@footcontent@@do{#1}{#2}}%
    {\tud@footcontent@@do{#1}{#2}[\@nil]}%
}
\newcommand*\tud@footcontent@@do{}
\def\tud@footcontent@@do#1#2[#3]{%
  \appto\tud@footcontent@fontface{#1\selectfont}%
%    \end{macrocode}
% Wurde in einem der Argumente für den linken und/oder rechten Inhalt ein Stern 
% verwendet, bleibt die bisherige Definition bestehen.
%    \begin{macrocode}
  \if\detokenize{*#2}\relax\else%
    \renewcommand*\tud@footcontent@left{#2}%
  \fi%
  \if\detokenize{*#3}\relax\else%
    \renewcommand*\tud@footcontent@right{#3}%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \tud@footcontent@right
% \end{macro}^^A \tud@footcontent@left
% \end{macro}^^A \tud@footcontent@fontface
% \end{macro}^^A \tud@footcontent@@do
% \end{macro}^^A \tud@footcontent@do
% \end{macro}^^A \footcontent
% \end{KOMAfont}^^A tudheadings
%
% \iffalse
%<*class&poster>
% \fi
%
% \begin{macro}{\tud@footcontent@@left}
% \changes{v2.05}{2015/07/06}{neu}^^A
% \changes{v2.05}{2016/04/17}{Überschrift optional}^^A
% \begin{macro}{\tud@footcontent@@right}
% \changes{v2.05}{2015/07/06}{neu}^^A
% \changes{v2.05}{2016/04/17}{Überschrift optional}^^A
% \begin{macro}{\tud@newline@poster}
% Mit diesen beiden Hilfsmakros werden die linke und die rechte Spalte des 
% Standard-Seitenfußes eines Posters festgelegt. In der linken Spalte werden 
% dabei Fakultät, Einrichtung, Institut und Lehrstuhl sowie der Professor 
% ausgegeben, wobei die Angaben über das optionale Argument der entsprechenden 
% Feldbefehle, die in den Klassen normalerweise nur für den Seitenkopf genutzt 
% werden, variiert werden können.
%    \begin{macrocode}
\newcommand*\tud@newline@poster{}
\newcommand*\tud@footcontent@@left[1][\contactname]{%
  \ifstr{#1}{}{}{{\tud@head@font@@bold#1\newline}}%
  Technische Universit\"at Dresden%
  \tud@foot@line@write{faculty}%
  \tud@foot@line@write{department}%
  \tud@foot@line@write{institute}%
  \tud@foot@line@write{chair}%
  \tud@foot@line@write{professor}%
}
%    \end{macrocode}
% In der rechten Spalte werden der Autor oder die Autoren (\cs{author}) und 
% die Kontaktperson(en) (\cs{contactperson}) ausgegeben. Zu jeder Person können
% individuelle Angaben bzgl. Büro, Telefonnummer und E-Mail-Adresse gemacht 
% werden. 
%    \begin{macrocode}
\newcommand*\tud@footcontent@@right[1][\authorname]{%
  \def\tud@newline@poster{%
    \ifx\@authormore\@empty\else\newline\@authormore\fi%
    \ifx\@course\@empty%
      \ifx\@discipline\@empty\else\newline\@discipline\fi%
    \else%
      \newline\@course%
      \ifx\@discipline\@empty\else%
        \nobreakspace(\@discipline)%
      \fi%
    \fi%
    \ifx\@office\@empty\else\newline\@office\fi%
    \ifx\@telephone\@empty\else\newline\@telephone\fi%
    \ifx\@telefax\@empty\else\newline\@telefax\fi%
    \ifx\@emailaddress\@empty\else\newline\@emailaddress\fi%
  }%
%    \end{macrocode}
% Wurde kein Autor angegeben, wird in diesem Fall die normalerweise erzeugte 
% Warnung bei der Verwendung des Feldes \cs{@author} unterdrückt.
%    \begin{macrocode}
  \ifpatchable{\@author}{\@latex@warning@no@line}{%
    \let\@tempa\@empty%
  }{%
    \let\@tempa\@author%
  }%
  \ifx\@tempa\@empty\else%
    \ifstr{#1}{}{}{{\tud@head@font@@bold#1\newline}}%
%    \end{macrocode}
% Das Makro zum Aufteilen der Autorenangaben wird für die hier benötigte Form 
% definiert. Dabei wird die Ausgabe aller nicht \emph{lokal} angegebenen Felder
% unterdrückt, indem der Befehl \cs{tud@multiple@fields@preset} im zweiten 
% Argument mit einem \val{*} aufgerufen wird.
%    \begin{macrocode}
    \renewcommand*\tud@split@author@do[2]{%
      \tud@multiple@fields@store{@author}{##1}%
      \tud@multiple@fields@preset{@author}{*}{##1}%
      \ignorespaces##1\tud@newline@poster%
      \tud@multiple@fields@restore{@author}%
      \tud@multiple@@@split{##2}{\newline}%
    }%
    \noindent\tud@multiple@split{@author}%
    \tud@multiple@fields@restore{@author}%
%    \end{macrocode}
% Wurde gültige Felder außerhalb von \cs{@author} global angegeben, so werden 
% diese \emph{nach} allen Autoren ausgegeben.
%    \begin{macrocode}
    \tud@newline@poster%
%    \end{macrocode}
% Werden Autor und Kontaktperson ausgegeben, ist eine Leerzeile einzufügen.
%    \begin{macrocode}
    \ifx\@contactperson\@empty\else\newline\fi%
  \fi%
%    \end{macrocode}
% Die Ausgabe der Kontaktperson(en) erfolgt analog zu der Autorenausgabe.
%    \begin{macrocode}
  \def\tud@newline@poster{%
    \ifx\@office\@empty\else\newline\@office\fi%
    \ifx\@telephone\@empty\else\newline\@telephone\fi%
    \ifx\@telefax\@empty\else\newline\@telefax\fi%
    \ifx\@emailaddress\@empty\else\newline\@emailaddress\fi%
  }%
  \ifx\@contactperson\@empty\else%
    \ifstr{\contactpersonname}{}{}{%
      {\tud@head@font@@bold\contactpersonname\newline}%
    }%
    \renewcommand*\tud@split@contactperson@do[2]{%
      \tud@multiple@fields@store{@contactperson}{##1}%
      \tud@multiple@fields@preset{@contactperson}{*}{##1}%
      \ignorespaces##1\tud@newline@poster%
      \tud@multiple@fields@restore{@contactperson}%
      \tud@multiple@@@split{##2}{\newline}%
    }%
    \noindent\tud@multiple@split{@contactperson}%
    \tud@multiple@fields@restore{@contactperson}%
    \tud@newline@poster%
  \fi%
%    \end{macrocode}
% Zu guter letzt noch eine mögliche Homepage.
%    \begin{macrocode}
  \ifx\@webpage\@empty\else\newline\@webpage\fi%
}
\footcontent{\tud@footcontent@@left}[\tud@footcontent@@right]
%    \end{macrocode}
% \end{macro}^^A \tud@newline@poster
% \end{macro}^^A \tud@footcontent@@right
% \end{macro}^^A \tud@footcontent@@left
%
% \iffalse
%</class&poster>
% \fi
%
% \begin{macro}{\tud@footcontent@use}
% \changes{v2.04}{2015/06/01}{neu}^^A
% Mit \cs{tud@footcontent@use} erfolgt die Ausgabe der mit \cs{footcontent} 
% definierten Inhalte. Dabei wird darauf geachtet, ob ein \DDC-Logo im Fuß
% verwendet wird. Die Ausgabe erfolgt jedoch nur, falls tatsächlich etwas 
% definiert wurde. Andernfalls wird lediglich eine leere Box der geforderten 
% Breite ausgegeben. Dies ist notwendig, da nachgelagerte Funktionen diese Box
% fester Breite erwarten.
%    \begin{macrocode}
\newcommand*\tud@footcontent@use[2]{%
  \@tempswafalse%
  \ifx\tud@footcontent@left\@empty\relax%
    \def\@tempa{\@nil}%
    \ifx\@tempa\tud@footcontent@right\relax\else%
      \ifx\tud@footcontent@right\@empty\relax\else%
        \@tempswatrue%
      \fi%
    \fi%
  \else%
    \@tempswatrue%
  \fi%
  \if@tempswa%
    \tud@ddc@check%
    \ifcase\@tempb\relax%
      \setlength\@tempdimc{\z@}%
    \else%
      \settowidth\@tempdimc{\tud@uselayerbox{foot@black}}%
      \addtolength\@tempdimc{\columnsep}%
    \fi%
%    \end{macrocode}
% Äquivalent zu den Logos wird auch der durch den Anwender frei definierbare 
% Inhalt des Fußes in einer vertikalen Box gesetzt. Mit \cs{@tempdimc} wird im 
% Bedarfsfall der Freiraum für das \DDC-Logo bereitgestellt.
%    \begin{macrocode}
    \tud@vlayerbox{#1}{%
      \linespread{1}%
      \vss%
      \hbox to #2{%
        \tud@footcontent@fontface%
%    \end{macrocode}
% Wurde das optionale Argument nach dem obligatorischen nicht genutzt, so wird 
% der Inhalt über die komplette Breite des Textbereiches ausgegeben.
%    \begin{macrocode}
        \def\@tempa{\@nil}%
        \ifx\@tempa\tud@footcontent@right\relax%
          \vtop{%
            \hsize=\dimexpr#2-\@tempdimc\relax%
            \strut\ignorespaces\tud@footcontent@left\strut%
          }%
%    \end{macrocode}
% Im zweispaltigen modus werden zwei vertikale Boxen erzeugt, zwischen denen
% der Abstand \cs{columnsep} eingefügt wird.
%    \begin{macrocode}
        \else%
          \vtop{%
            \hsize=\dimexpr(#2-\columnsep)/2\relax%
            \strut\ignorespaces\tud@footcontent@left\strut%
          }%
          \hspace{\columnsep}%
          \vtop{%
            \hsize=\dimexpr(#2-\columnsep)/2-\@tempdimc\relax%
            \strut\ignorespaces\tud@footcontent@right\strut%
          }%
        \fi%
        \hss%
      }%
      \vss\vss%
%    \end{macrocode}
% Sollte der Inhalt für den Fußbereich zu groß sein, wird eine Warnung erzeugt.
%    \begin{macrocode}
    }{%
      The content for the footer (`\string\footcontent')\MessageBreak%
      is too high. You should either reduce the content\MessageBreak%
      or lower the fontsize via the optional argument.%
      \ifnum\tud@cdgeometry@num>\@ne% true/symmetric/twoside
        \MessageBreak%
        Alternatively you can enlarge the bottom margin\MessageBreak%
        by using option `extrabottommargin'.%
      \fi%
    }%
  \else%
    \hbox to #2{}%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \tud@footcontent@use
%
% \iffalse
%</class&body>
%<*class&option>
% \fi
%
% \begin{option}{cdhead}
% \changes{v2.03}{2015/01/29}{neu}^^A
% \changes{v2.04}{2015/05/18}{Wert \val{barcolor} neu}^^A
% \begin{macro}{\tud@head@font@num}
% \changes{v2.03}{2015/02/04}{neu}^^A
% \begin{macro}{\if@tud@head@font@num@locked}
% \changes{v2.03}{2015/02/04}{neu}^^A
% \begin{macro}{\tud@head@bar@num}
% \changes{v2.03}{2015/02/04}{neu}^^A
% \begin{macro}{\tud@head@bar@num@lock}
% \changes{v2.04}{2015/04/01}{neu}^^A
% \begin{macro}{\if@tud@head@widebar}
% \changes{v2.03}{2015/02/14}{neu}^^A
% \begin{macro}{\if@tud@head@widebar@locked}
% \changes{v2.03}{2015/02/14}{neu}^^A
% \begin{macro}{\if@tud@head@font@set}
% Mit dieser Option wird die zentrale Benutzerschnittstelle für Einstellungen 
% des typischen Querbalkens für den TUD-Kopf geschaffen. Durch sie können
% sowohl die verwendete Schrift als auch die Stärke für den Balkentext
% (Institut, Fakultät etc.) geändert werden. Zusätzlich ist die Laufweite des 
% Querbalkens bzw. die Farbe einstellbar.
%    \begin{macrocode}
\cs@lock{tud@head@font@num}{0}
\cs@lock{tud@head@bar@num}{0}
\bool@lock{@tud@head@widebar}
\newif\if@tud@head@font@set
\TUD@key{cdhead}[true]{%
  \TUD@set@numkey{cdhead}{@tempa}{%
    \TUD@numkey@bool,%
    {nocd}{0},{nocdfont}{0},{nocdfonts}{0},{notudfonts}{0},%
    {cd}{1},{cdfont}{1},{cdfonts}{1},{tudfonts}{1},%
    {light}{1},{lightfont}{1},{lite}{1},{litefont}{1},{noheavyfont}{1},%
    {heavy}{2},{heavyfont}{2},{bold}{2},{boldfont}{2},%
    {nocolor}{3},{nocolour}{3},{monochrome}{3},{monochromatic}{3},%
    {colorlite}{4},{litecolor}{4},{colourlite}{4},{litecolour}{4},%
    {colorlight}{4},{lightcolor}{4},{colourlight}{4},{lightcolour}{4},%
    {pale}{4},{colorpale}{4},{palecolor}{4},{colourpale}{4},{palecolour}{4},%
    {colorbar}{5},{barcolor}{5},{colourbar}{5},{barcolour}{5},%
    {bicolor}{6},{bicolour}{6},{twocolor}{6},{twocolour}{6},%
    {bichrome}{6},{bichromatic}{6},{dichrome}{6},{dichromatic}{6},%
    {color}{6},{colour}{6},%
    {full}{6},{colorfull}{6},{fullcolor}{6},{colourfull}{6},{fullcolour}{6},%
    {textwidth}{7},{slim}{7},{slimhead}{7},{nowide}{7},{nowidehead}{7},%
    {narrow}{7},{narrowhead}{7},{small}{7},{smallhead}{7},%
    {paperwidth}{8},{wide}{8},{widehead}{8}%
  }{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\@tempa\relax% false
      \cs@set@lock{tud@head@font@num}{0}%
    \or% true
      \cs@set@lock{tud@head@font@num}{1}%
    \or% heavy
      \cs@set@lock{tud@head@font@num}{2}%
    \or% nocolor
      \cs@set@lock{tud@head@bar@num}{0}%
    \or% litecolor
      \cs@set@lock{tud@head@bar@num}{1}%
    \or% barcolor
      \cs@set@lock{tud@head@bar@num}{2}%
    \or% color
      \cs@set@lock{tud@head@bar@num}{3}%
    \or% textwidth
      \bool@set@lock{@tud@head@widebar}{false}%
    \or% paperwidth
      \bool@set@lock{@tud@head@widebar}{true}%
    \fi%
    \ifnum\@tempa<\thr@@\relax%
      \global\@tud@head@font@settrue%
    \fi%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \if@tud@head@font@set
% \end{macro}^^A \if@tud@head@widebar@locked
% \end{macro}^^A \if@tud@head@widebar
% \end{macro}^^A \tud@head@bar@num@lock
% \end{macro}^^A \tud@head@bar@num
% \end{macro}^^A \if@tud@head@font@num@locked
% \end{macro}^^A \tud@head@font@num
% \end{option}^^A cdhead
% \begin{option}{cdfoot}
% \changes{v2.03}{2015/02/02}{Bei Längenangabe wird \opt{extrabottommargin}
%   indirekt genutzt}^^A
% \changes{v2.04}{2015/06/18}{bedingtes Setzen der Option \opt{automark}}^^A
% \begin{macro}{\if@tud@foot@colored}
% \changes{v2.03}{2015/02/15}{neu}^^A
% \begin{macro}{\if@tud@foot@colored@locked}
% \changes{v2.05}{2015/07/14}{neu}^^A
% \begin{macro}{\tud@ps@store}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{macro}{\tud@ps@@store}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{macro}{\tud@ps@restore}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \begin{macro}{\tud@ps@@restore}
% \changes{v2.02}{2014/06/23}{neu}^^A
% Dieser Seitenstil mit dem Kolumnentitel im Fuß wurde bereits für die alte
% \cls{tudbook}-Klasse bereitgestellt und soll auch hier optional angeboten
% werden. Zusätzlich kann mit dieser Option ggf. ein farbiger Hintergrund in 
% der Fußzeile aktiviert werden.
%
% Einige Einstellungen sind abhängig vom Paket \pkg{scrlayer-scrpage}, welches 
% unter Umständen nicht geladen wird. Mit dem Befehl \cs{TUD@AfterPackage@do} 
% kann Quelltext nur dann ausgeführt werden, wenn ein Paket auch tatsächlich
% geladen wurde. Hierfür ist die Initialisierung mit \cs{TUD@AfterPackage@set}
% nötig.
%    \begin{macrocode}
\TUD@AfterPackage@set{scrlayer-scrpage}
\bool@lock{@tud@foot@colored}
\TUD@key{cdfoot}[true]{%
  \TUD@set@numkey{cdfoot}{@tempa}{%
    \TUD@numkey@bool,%
    {nocolor}{2},{nocolour}{2},{monochrome}{2},{monochromatic}{2},%
    {bicolor}{3},{bicolour}{3},{twocolor}{3},{twocolour}{3},%
    {bichrome}{3},{bichromatic}{3},{dichrome}{3},{dichromatic}{3},%
    {color}{3},{colour}{3},%
    {full}{3},{colorfull}{3},{fullcolor}{3},{colourfull}{3},{fullcolour}{3}%
  }{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\@tempa\relax% false
%    \end{macrocode}
% Die ursprünglichen Kopf- und Fußzeilen werden mit \cs{tud@ps@restore}
% wiederhergestellt. Dies wird allerdings frühestens nach dem Laden von 
% \pkg{scrlayer-scrpage} durchgeführt.
%    \begin{macrocode}
      \TUD@AfterPackage@do{scrlayer-scrpage}{%
        \tud@ps@restore{scrheadings}%
        \tud@ps@restore{plain.scrheadings}%
        \tud@font@koma@unset{pageheadfoot}%
      }%
%    \end{macrocode}
% Die ursprünglichen Kopf- und Fußzeilen werden mit dem Makro \cs{tud@ps@store} 
% gesichert, um gegebenenfalls zurückschalten zu können. Anschließend werden
% diese mit dem neuen Stil überschrieben. Dies wird allerdings frühestens nach 
% dem Laden von \pkg{scrlayer-scrpage} durchgeführt. 
%    \begin{macrocode}
    \or% true
      \TUD@AfterPackage@do{scrlayer-scrpage}{%
        \tud@ps@store{scrheadings}%
        \tud@ps@store{plain.scrheadings}%
        \tud@font@koma@set{pageheadfoot}{\upshape}%
        \clearpairofpagestyles%
        \ofoot[\pagemark]{%
          \if@twoside\ifodd\value{page}\else\pagemark\quad\fi\fi%
          {\footnotesize\headmark}%
          \if@twoside\ifodd\value{page}\quad\pagemark\fi\else\quad\pagemark\fi%
        }%
        \ifx\@mkdouble\@gobble\else\KOMAoptions{automark}\fi%
      }%
%    \end{macrocode}
% Hier kann die Hintergrundfarbe des Fußes aktiviert bzw. deaktiviert werden.
%    \begin{macrocode}
    \or% nocolor
      \bool@set@lock{@tud@foot@colored}{false}%
    \or% color
      \bool@set@lock{@tud@foot@colored}{true}%
    \fi%
%    \end{macrocode}
% Außerdem kann mit der Option \opt{extrabottommargin} gesetzt werden.
%    \begin{macrocode}
  \else%
    \TUDoptions{extrabottommargin=#1}%
  \fi%
}
%    \end{macrocode}
% Die nächsten beiden Befehle dienen zum Sichern der Kopf- und Fußzeilen\dots
%    \begin{macrocode}
\newcommand*\tud@ps@store[1]{%
  \tud@ps@@store{#1}{odd}{left}{head}%
  \tud@ps@@store{#1}{odd}{right}{head}%
  \tud@ps@@store{#1}{odd}{middle}{head}%
  \tud@ps@@store{#1}{even}{left}{head}%
  \tud@ps@@store{#1}{even}{right}{head}%
  \tud@ps@@store{#1}{even}{middle}{head}%
  \tud@ps@@store{#1}{odd}{left}{foot}%
  \tud@ps@@store{#1}{odd}{right}{foot}%
  \tud@ps@@store{#1}{odd}{middle}{foot}%
  \tud@ps@@store{#1}{even}{left}{foot}%
  \tud@ps@@store{#1}{even}{right}{foot}%
  \tud@ps@@store{#1}{even}{middle}{foot}%
}
%    \end{macrocode}
% \dots, wobei hierfür auf die internen Befehle von \pkg{scrlayer-scrpage} 
% zurückgegriffen werden muss.
%    \begin{macrocode}
\newcommand*\tud@ps@@store[4]{%
  \ifcsdef{@@tud@ps@#1@#2@#3@#4}{}{%
    \csletcs{@@tud@ps@#1@#2@#3@#4}{sls@ps@#1@#2@#3@#4}%
  }%
}
\newcommand*\tud@ps@restore[1]{%
  \tud@ps@@restore{#1}{odd}{left}{head}%
  \tud@ps@@restore{#1}{odd}{right}{head}%
  \tud@ps@@restore{#1}{odd}{middle}{head}%
  \tud@ps@@restore{#1}{even}{left}{head}%
  \tud@ps@@restore{#1}{even}{right}{head}%
  \tud@ps@@restore{#1}{even}{middle}{head}%
  \tud@ps@@restore{#1}{odd}{left}{foot}%
  \tud@ps@@restore{#1}{odd}{right}{foot}%
  \tud@ps@@restore{#1}{odd}{middle}{foot}%
  \tud@ps@@restore{#1}{even}{left}{foot}%
  \tud@ps@@restore{#1}{even}{right}{foot}%
  \tud@ps@@restore{#1}{even}{middle}{foot}%
}
\newcommand*\tud@ps@@restore[4]{%
  \ifcsdef{@@tud@ps@#1@#2@#3@#4}{%
    \csletcs{sls@ps@#1@#2@#3@#4}{@@tud@ps@#1@#2@#3@#4}%
    \csundef{@@tud@ps@#1@#2@#3@#4}%
  }{}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@ps@@restore
% \end{macro}^^A \tud@ps@restore
% \end{macro}^^A \tud@ps@@store
% \end{macro}^^A \tud@ps@store
% \end{macro}^^A \if@tud@foot@colored@locked
% \end{macro}^^A \if@tud@foot@colored
% \end{option}^^A cdfoot
% \begin{option}{cdgeometry}
% \changes{v2.05}{2016/03/06}{\val{custom} neu}^^A
% \begin{macro}{\tud@cdgeometry@num}
% \begin{macro}{\if@tud@cdgeometry@num@locked}
% \begin{macro}{\tud@cdgeometry@calc@num}
% \changes{v2.05}{2015/11/29}{neu}^^A
% Für das \CD sind standardmäßig feste Seitenränder vorgegeben. Diese sind
% jedoch leider nur aus gestalterischen Motiven und ohne die Beachtung
% typographischer Belange gewählt und festgelegt worden. Beispielweise ist ein
% doppelseitiger Satz einer Abschlussarbeit im \CD nur mit einem grauenhaften
% Satzspiegel möglich. Um dem Anwender einen gewissen Spielraum zu geben, wird
% alternativ zum asymmetrischen (\opt{geomery=on}) ein symmetrischer
% Satzspiegel bereitgestellt (\opt{geomery=normal}), welcher bei einseitigem
% Satz zentriert ist und bei zweiseitigem Satz den inneren Rand kleiner setzt
% als den äußeren. Des Weiteren kann die Satzspiegelberechnung auch direkt
% durch \pkg{typearea} aus dem \KOMAScript"=Paket erfolgen
% (\opt{geomery=no}). Mit \cs{tud@cdgeometry@process} werden alle getroffenen
% Satzspiegeloptionen umgesetzt und nachfolgend definiert.
%    \begin{macrocode}
\cs@lock{tud@cdgeometry@num}{0}
\newcommand*\tud@cdgeometry@calc@num{0}
\TUD@key{cdgeometry}[true]{%
  \TUD@set@numkey{cdgeometry}{@tempa}{%
    \TUD@numkey@bool,%
    {typearea}{0},%
    {cd}{1},{tud}{1},{asymmetric}{1},%
    {symmetric}{2},{centred}{2},{centered}{2},%
    {normal}{2},{standard}{2},{std}{2},%
    {twoside}{3},{balanced}{3},%
    {oneside}{4},%
    {restricted}{5},%
    {adapted}{6},{adapt}{6},{adapting}{6},{unrestricted}{6},%
    {calculated}{7},{calc}{7},{calculate}{7},{calculating}{7},%
    {custom}{8},{user}{8},{package}{8}%
  }{#1}%
  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
    \ifcase\@tempa\relax% false/typearea
      \cs@set@lock{tud@cdgeometry@num}{0}%
      \if@atdocument\tud@recalctypearea\fi%
    \or% true/cd
      \cs@set@lock{tud@cdgeometry@num}{2}%
      \if@atdocument\tud@recalctypearea\fi%
    \or% symmetric
      \cs@set@lock{tud@cdgeometry@num}{3}%
      \if@atdocument\tud@recalctypearea\fi%
    \or% twoside
      \cs@set@lock{tud@cdgeometry@num}{4}%
      \TUD@KOMAoptions{twoside=true}%
    \or% oneside
      \ifnum\tud@cdgeometry@num>\thr@@\relax%
        \cs@set@lock{tud@cdgeometry@num}{3}%
      \fi%
      \TUD@KOMAoptions{twoside=false}%
    \or% restricted
      \cs@std@lock{tud@cdgeometry@num}{2}%
      \renewcommand*\tud@cdgeometry@calc@num{0}%
      \if@atdocument\tud@recalctypearea\fi%
    \or% adapted
      \cs@std@lock{tud@cdgeometry@num}{2}%
      \renewcommand*\tud@cdgeometry@calc@num{1}%
      \if@atdocument\tud@recalctypearea\fi%
    \or% calculated
      \cs@std@lock{tud@cdgeometry@num}{2}%
      \renewcommand*\tud@cdgeometry@calc@num{2}%
      \if@atdocument\tud@recalctypearea\fi%
    \or% custom
      \cs@set@lock{tud@cdgeometry@num}{1}%
    \fi%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \tud@cdgeometry@calc@num
% \end{macro}^^A \if@tud@cdgeometry@num@locked
% \end{macro}^^A \tud@cdgeometry@num
% \end{option}^^A cdgeometry
% \begin{option}{extrabottommargin}
% \begin{length}{\tud@dim@extrabottommargin}
% Diese Option dient dazu, die Höhe des Fußes anzupassen. Dies ist jedoch nur 
% möglich, wenn der Satzspiegel des \CDs verwendet wird. Kommt \pkg{typearea} 
% zum Einsatz, ist die Option wirkungslos. Da für die Länge ggf. auch Werte 
% angegeben werden können, die abhängig von der Schriftgröße sind, wird die 
% Ausführung dieser Option verzögert.
%    \begin{macrocode}
\newlength\tud@dim@extrabottommargin
\TUD@key{extrabottommargin}{%
  \TUD@noworlater{%
    \TUD@set@lengthkey{extrabottommargin}{\tud@dim@extrabottommargin}{#1}%
  }{%
    \ifx\FamilyKeyState\FamilyKeyStateProcessed%
      \if@atdocument\tud@cdgeometry@process\fi%
    \fi%
  }%
}
%    \end{macrocode}
% \end{length}^^A \tud@dim@extrabottommargin
% \end{option}^^A extrabottommargin
% \begin{option}{twoside}
% \begin{option}{twocolumn}
% Sollte einer der beiden \KOMAScript-Optionen im Dokument nach der Präambel 
% verwendet werden, erfolgt die Anpassung des Satzspiegels.
%    \begin{macrocode}
\DefineFamilyMember{KOMA}
\DefineFamilyKey{KOMA}{twoside}{%
  \if@atdocument\AtEndOfFamilyOptions{\tud@cdgeometry@process}\fi%
  \FamilyKeyStateProcessed%
}
\DefineFamilyKey{KOMA}{twocolumn}{%
  \if@atdocument\AtEndOfFamilyOptions{\tud@cdgeometry@process}\fi%
  \FamilyKeyStateProcessed%
}
%    \end{macrocode}
% \end{option}^^A twocolumn
% \end{option}^^A twoside
%
% Sollte das Paket \pkg{silence} vorhanden sein wird es geladen, um die vom 
% Paket \pkg{typearea} erzeugten Warnungen beim Laden einer \TUDScript-Klasse 
% zu unterdrücken, da im Normalfall das Paket gar nicht für die Berechnung des 
% Satzspiegels zum Einsatz kommt. Sollte dies vom Anwender so eingestellt 
% werden, wird vor dem Beginn des Dokumentes \cs{recalctypearea} aufgerufen und 
% die entsprechenden Warnungen werden etwas später und in Abhängigkeit der 
% verwendeten Schriftart erzeugt.
%    \begin{macrocode}
\IfFileExists{silence.sty}{%
  \RequirePackage{silence}%
  \WarningFilter[typearea]{typearea}{DIV for}%
  \WarningFilter[typearea]{typearea}{Bad type area settings!}%
  \WarningFilter[typearea]{typearea}{Maybe no optimal type area settings!}%
  \WarningFilter[typearea]{typearea}{Very low DIV value!}%
  \BeforePackage{typearea}{\ActivateWarningFilters[typearea]}%
  \AfterPackage{typearea}{\DeactivateWarningFilters[typearea]}%
}{}
%    \end{macrocode}
%
% \iffalse
%</class&option>
%<*class&body>
% \fi
%
% Das Paket \pkg{geometry} erlaubt eine genaue Vorgabe des Satzspiegels und
% der Seitenränder, wie es vom \CD der \TnUD verlangt wird. 
% \ToDo{\cs{@ifpackagelater} raus, \cs{CheckCommand} für relev. Befehle}[v2.05]%
%    \begin{macrocode}
\newcommand*\tud@cdgeometry@process{}
\if@tud@x@standalone@crop
  \PreventPackageFromLoading{geometry}%
\else
  \RequirePackage{geometry}[2010/09/12]%
\fi
\AfterPackage*{geometry}{%
  \@ifpackagelater{geometry}{2010/09/13}{%
    \ClassWarning{\TUDClassName}{%
      Package `geometry' was updated so some patches\MessageBreak%
      are maybe outdated. Please contact the TUD-KOMA-Script\MessageBreak%
      maintainer via \tudscrmail
    }%
  }{}%
%    \end{macrocode}
% \begin{macro}{\tud@cdgeometry@hmargin}
% \begin{macro}{\tud@cdgeometry@vmargin}
% \begin{macro}{\tud@cdgeometry@tudmargin}
% \begin{macro}{\tud@cdgeometry@ddcmargin}
% Dies sind Hilfsmakros für die Definition der unterschiedichen Seitenlayouts
% (horizontale und vertikale Ränder). Es handelt sich dabei um die Seitenränder 
% für den normalen Textbereich sowie die angepassten vertikalen Einstellungen
% für die Seitenstilvarianten mit TUD-Kopf. Im Kompatibilitätsmodus für die 
% Version~v2.02 gibt es außerdem einen separaten Satzspiegel für den \DDC-Fuß.
% Gesetzt werden diese in Abhängigkeit von der Option \opt{cdgeometry} im
% Makro \cs{tud@cdgeometry@process} bzw. \cs{tud@cdgeometry@@process}.
%    \begin{macrocode}
  \newcommand*\tud@cdgeometry@hmargin{}%
  \newcommand*\tud@cdgeometry@vmargin{}%
  \newcommand*\tud@cdgeometry@tudmargin{}%
  \tud@if@tudscrverlower{2.03}{\newcommand*\tud@cdgeometry@ddcmargin{}}{}%
%    \end{macrocode}
% \end{macro}^^A \tud@cdgeometry@ddcmargin
% \end{macro}^^A \tud@cdgeometry@tudmargin
% \end{macro}^^A \tud@cdgeometry@vmargin
% \end{macro}^^A \tud@cdgeometry@hmargin
% \begin{macro}{\tud@newgeometry}
% \changes{v2.04}{2015/03/12}{neu}^^A
% \begin{macro}{\tud@savegeometry}
% \changes{v2.05}{2016/04/03}{neu}^^A
% \begin{macro}{\tud@loadgeometry}
% \changes{v2.05}{2016/03/06}{neu}^^A
% \begin{macro}{\if@tud@x@geometry@enabled}
% \changes{v2.05}{2016/03/06}{neu}^^A
% Mit dem Befehl \cs{tud@newgeometry} wird abhängig davon, ob dieser in der
% Präambel oder im Dokument von \cs{tud@cdgeometry@process} verwendet wird,
% entweder \cs{geometry} oder \cs{newgeometry} aufgerufen. Mit dem Schalter 
% \cs{if@tud@x@geometry@enabled} wird im Fall, dass ein benutzerdefinierter
% Satzspiegel aktiviert wurde, das rekursive Aufrufen von \cs{geometry} bzw.
% \cs{newgeometry} und einer daraus resultierenden Endlosschleife unterbunden.
%    \begin{macrocode}
  \newif\if@tud@x@geometry@enabled%
  \@tud@x@geometry@enabledtrue%
  \newcommand*\tud@newgeometry[1]{%
    \@tud@x@geometry@enabledfalse%
%    \end{macrocode}
% Unabhängig von der gewählten Option \opt{cdgeometry} für den Satzspiegel 
% sollen die von \pkg{geometry} bereitgestellten Möglichkieten für den 
% Papierbogen nutzbar bleiben.
%    \begin{macrocode}
    \ifGm@pass%
      \def\@tempb{}%
    \else%
      \edef\@tempb{layoutoffset={\the\Gm@layouthoffset,\the\Gm@layoutvoffset}}%
      \ifGm@layout%
        \eappto\@tempb{,layoutsize={\the\Gm@layoutwidth,\the\Gm@layoutheight}}%
      \fi%
    \fi%
    \if@atdocument%
      \edef\@tempa{\@tempb,#1}%
      \expandafter\newgeometry\expandafter{\@tempa}%
    \else%
%    \end{macrocode}
% Zu Beginn des Dokumentes werden mit \cs{Gm@initnewgm} vor jedem Satzspiegel
% die zuvor gemachten Einstellungen zurückgesetzt.
%    \begin{macrocode}
      \Gm@initnewgm%
      \edef\@tempa{%
        paperwidth=\the\paperwidth,paperheight=\the\paperheight,\@tempb,#1%
      }%
      \expandafter\geometry\expandafter{\@tempa}%
    \fi%
    \@tud@x@geometry@enabledtrue%
  }%
  \newcommand*\tud@savegeometry[1]{%
    \edef\Gm@restore{}%
    \savegeometry{#1}%
  }%
  \newcommand*\tud@loadgeometry[1]{%
    \@tud@x@geometry@enabledfalse%
    \loadgeometry{#1}%
%    \end{macrocode}
% Die nächsten beiden Makros müssen nach der Satzspiegeländerung des ausgeführt 
% werden, um den Durchschuss und eine etwaige Zentrierung durch das Paket 
% \pkg{crop} wiederherzustellen.
%    \begin{macrocode}
    \@currsize%
    \if@tud@x@crop@center\CROP@center\fi%
    \@tud@x@geometry@enabledtrue%
  }%
%    \end{macrocode}
% \end{macro}^^A \if@tud@x@geometry@enabled
% \end{macro}^^A \tud@loadgeometry
% \end{macro}^^A \tud@savegeometry
% \end{macro}^^A \tud@newgeometry
% \begin{macro}{\tud@cdgeometry@process}
% \changes{v2.02}{2014/06/23}{geändert für das Paket \pkg{scrlayer-scrpage}}^^A
% \changes{v2.03}{2015/01/09}{Satzspiegel des \CDs angepasst}^^A
% \changes{v2.03}{2015/01/09}{intiale Festlegung der Länge \cs{marginpar}}^^A
% \changes{v2.03}{2015/01/13}{Satzspiegel kompatibilitätsabhängig}^^A
% \begin{macro}{\tud@cdgeometry@@process}
% Das Makro \cs{tud@cdgeometry@process} setzt die Option für den gewünschten
% Satzspiegel um, sowohl für die Seitenränder als auch zur Einberechnung der
% Kopf- und/oder Fußzeile. Um mehrere Satzspiegel verwenden zu können~-- was
% für die unterschiedlichen Höhen für Kopf- und Fußzeile nötig ist~-- wird das
% Paket \pkg{geometry} verwendet. Soll \pkg{typearea} zur Satzspiegelerstellung
% genutzt werden, so werden die damit berechneten Werte an \pkg{geometry}
% weitergereicht.
% Es werden drei Layouts erstellt: normaler Satzspiegel, nur TUD-Kopf sowie
% TUD-Kopf und "~Fuß und mit \cs{savegeometry}\marg{Stil} gesichert. Damit kann
% innerhalb des Dokumentes mit dem Befehl \cs{loadgeometry}\marg{Stil} oberer
% sowie ggf. untere Seitenrand geändert werden.
%    \begin{macrocode}
  \renewcommand*\tud@cdgeometry@process{%
%    \end{macrocode}
% Die Maßvorgaben werden entsprechend der Seitengröße gesetzt.
%    \begin{macrocode}
    \tud@cdgeometry@set%
%    \end{macrocode}
% Für den Fall, dass \pkg{typearea} die Satzspiegelberechnung übernimmt oder 
% dieser durch den Benutzerdefiniert wurde, werden die Ergebnisse aus der
% Berechnung respektive die aktiven Einstellungen direkt an \pkg{geometry}
% weitergereicht. Dazu werden die berechneten Werte in die entsprechenden 
% Hilfsmakros für die Erstellung der \pkg{geometry}-Satzspiegel übergeben.
%    \begin{macrocode}
    \ifnum\tud@cdgeometry@num<\tw@\relax% false/custom
%    \end{macrocode}
% Anschließend erfolgen die horizontalen und vertikalen Randeinstellungen. 
% Zunächst für \pkg{typearea}. Hierfür ist eine Sonderbehandlung notwendig, 
% falls mit \cs{geometry} eine Größe für den Drcukbereich/das Layout angegeben 
% wurde.
%    \begin{macrocode}
      \ifcase\tud@cdgeometry@num\relax%
        \ifGm@layout%
          \tud@skip@store{paperheight}%
          \tud@skip@store{paperwidth}%
          \tud@cmd@store{tud@AfterChangingArea}%
          \setlength\paperheight{\tud@dim@layoutheight}%
          \setlength\paperwidth{\tud@dim@layoutwidth}%
          \let\tud@AfterChangingArea\relax%
          \recalctypearea%
          \tud@skip@restore{paperheight}%
          \tud@skip@restore{paperwidth}%
          \tud@cmd@restore{tud@AfterChangingArea}%
        \fi%
%    \end{macrocode}
% Nachdem der Satzspiegel im Zweifelsfall neu berechnet wurde, werden die von 
% \pkg{typearea} berechneten Seitenränder an \pkg{geometry} weitergereicht.
%    \begin{macrocode}
        \edef\tud@cdgeometry@hmargin{%
          left=\the\dimexpr\oddsidemargin+1in-\ta@bcor\relax,%
          textwidth=\the\textwidth,%
          \tud@cdgeometry@mpincl,%
          marginparwidth=\the\marginparwidth,%
          marginparsep=\the\marginparsep,%
          \if@reversemargin%
            reversemarginpar=true,%
          \else%
            reversemarginpar=false,%
          \fi%
          bindingoffset=\the\ta@bcor%
        }%
        \edef\tud@cdgeometry@vmargin{%
          \if@hincl%
            includehead=true,%
            top=\the\dimexpr\topmargin+1in\relax,%
          \else%
            includehead=false,%
            top=\the\dimexpr\topmargin%
              +\headheight+\headsep+1in\relax,%
          \fi%
          headheight=\the\headheight,%
          headsep=\the\headsep,%
          textheight=\the\textheight,%
          \tud@cdgeometry@fincl,%
          footskip=\the\footskip%
        }%
%    \end{macrocode}
% Und nun für den benutzerdefinierten Satzspiegel.
%    \begin{macrocode}
      \else% custom
        \ifGm@pass\else%
          \edef\tud@cdgeometry@hmargin{%
            left=\Gm@lmargin,%
            right=\Gm@rmargin,%
            \ifGm@includemp%
              includemp=true,%
            \else%
              includemp=false,%
            \fi%
            marginparwidth=\the\marginparwidth,%
            marginparsep=\the\marginparsep,%
            \if@reversemargin%
              reversemarginpar=true,%
            \else%
              reversemarginpar=false,%
            \fi%
            bindingoffset=\the\Gm@bindingoffset%
          }%
          \edef\tud@cdgeometry@vmargin{%
            \ifGm@includehead%
              includehead=true,%
              top=\the\dimexpr\topmargin+1in\relax,%
            \else%
              includehead=false,%
              top=\the\dimexpr\topmargin%
                +\headheight+\headsep+1in\relax,%
            \fi%
            headheight=\the\headheight,%
            headsep=\the\headsep,%
            textheight=\the\textheight,%
            footskip=\the\footskip,%
            \ifGm@includefoot%
              includefoot=true,%
            \else%
              includefoot=false,%
            \fi%
          }%
        \fi%
      \fi%
%    \end{macrocode}
% Es wird die Höhendifferenz zwischen TUD-Kopf und Standardkopfzeile für den
% benutzerdefnierten bzw. \pkg{typearea}-Satzspiegel berechnet. Für den 
% Satzspiegel mit TUD-Kopf muss unterschieden werden, ob der Abstand zwischen
% Kopf und Textbereich vergrößert wurde. Ist dies der Fall, wird die Höhe des
% Textbereiches über \cs{@tempdima} entsprechend verkleinert. Sollte der
% benutzerdefinierten bzw. \pkg{typearea}-Satzspiegel noch unterhalb des
% TUD-Kopfes liegen, wird der Abstand zum Kopf vergrößert.
%    \begin{macrocode}
      \setlength\tud@dim@areadiff{%
        \dimexpr\tud@dim@topmargin+\tud@dim@barheight+\tud@dim@headsep%
          -\topmargin-\headheight-\headsep-1in\relax%
      }%
      \ifdim\tud@dim@areadiff<\z@\relax%
        \addtolength\tud@dim@headsep{-\tud@dim@areadiff}%
        \setlength\@tempdima{\z@}%
      \else%
        \setlength\@tempdima{\tud@dim@areadiff}%
      \fi%
      \edef\tud@cdgeometry@tudmargin{%
        top=\the\dimexpr\tud@dim@topmargin+\tud@dim@barheight%
          +\tud@dim@headsep\relax,%
        headheight=\the\dimexpr\tud@dim@topmargin+\tud@dim@barheight%
          -\tud@dim@logoy\relax,%
        headsep=\the\tud@dim@headsep,%
        textheight=\the\dimexpr\textheight-\@tempdima\relax,%
        ignorehead%
      }%
%    \end{macrocode}
% Für den Kompatibilitätsmodus der Version~v2.02 gibt es für den \DDC-Fuß einen 
% separaten Satzspiegel.
%    \begin{macrocode}
      \tud@if@tudscrverlower{2.03}{%
        \setlength\tud@dim@ddcdiff{%
          \dimexpr.6\tud@dim@topmargin-\footskip+\tud@dim@headsep%
            +\footheight-1.25\baselineskip\relax%
        }%
        \edef\tud@cdgeometry@ddcmargin{%
          textheight=\the\dimexpr\textheight-\tud@dim@areadiff%
            -\tud@dim@ddcdiff\relax,%
          footskip=\the\dimexpr\footskip+\tud@dim@ddcdiff\relax%
        }%
      }{}%
%    \end{macrocode}
% Sollte die Option \opt{extrabottommargin} verwendet worden sein, wird eine 
% Warnung ausgegeben, dass diese für den \pkg{typearea}-Satzspiegel wirkungslos
% ist.
%    \begin{macrocode}
      \ifdim\tud@dim@extrabottommargin=\z@\relax\else%
        \ClassWarning{\TUDClassName}{%
          Option `extrabottommargin' is ineffective when\MessageBreak%
          package typearea or custom layout is used\MessageBreak%
          (`cdgeometry=false/custom')%
        }%
      \fi%
%    \end{macrocode}
% Hier erfolgt die Definition der Hilfsmakros für das CD-konforme asymmetrische
% bzw. an das \CD angelehnte Layout für einseitigen und zweiseitigen Satz.
% Zuerst werden die verschiedenen unterschiedlichen horizontalen Ränder für die
% unterschiedlichen Optionen definiert. Dies betrifft im einzelnen den äußeren 
% Seitenrand (\cs{@tempdima}), die Textbreite (\cs{@tempdimb}) sowie die Breite 
% der Randnotizen (\cs{@tempdimc}). Danach kommt der Gleichanteil.
%    \begin{macrocode}
    \else%  true/symmetric/twoside
      \ifcase\tud@cdgeometry@num\relax\or\or%  true
        \setlength\@tempdima{\tud@dim@widemargin}%
        \if@reversemargin%
          \setlength\@tempdimc{\tud@dim@widemargin}%
        \else%
          \setlength\@tempdimc{\tud@dim@slimmargin}%
        \fi%
%    \end{macrocode}
% Die zweite Variante ist eigentlich nicht konform mit dem \CD. Sie ist sowohl
% im einseitigen als auch im zweiseitgigen Satz symmetrisch.
%    \begin{macrocode}
      \or% symmetric
        \setlength\@tempdima{.5\tud@dim@both}%
        \setlength\@tempdimc{.5\tud@dim@both}%
%    \end{macrocode}
% Eigentlich ist auch die dritte Variante nach dem \CD nicht zulässig. Sie ist
% im einseitigen Satz symmetrisch, im zweiseitgigen Satz wird die innere Seite
% schmaler gesetzt als die äußere, wobei hier auf das in den Seitenrand ragende
% TUD-Logo geachtet werden muss.
%    \begin{macrocode}
      \or% twoside
        \if@twoside%
          \setlength\@tempdima{.4\tud@dim@both}%
        \else%
          \setlength\@tempdima{.5\tud@dim@both}%
        \fi%
        \setlength\@tempdimc{.5\tud@dim@both}%
        \if@twoside%
          \if@reversemargin%
            \setlength\@tempdimc{.4\tud@dim@both}%
          \else%
            \setlength\@tempdimc{.6\tud@dim@both}%
          \fi%
        \fi%
      \fi%
%    \end{macrocode}
% Die \emph{Berechnung} der Textbreite ist für alle Varainten identisch. Danach 
% erfolgt die Zuweisung zum Makro.
%    \begin{macrocode}
      \addtolength\@tempdimc{-\headsep}%
      \setlength\@tempdimb{%
        \dimexpr\tud@dim@layoutwidth-\tud@dim@both-\ta@bcor\relax%
      }%
      \if@mincl%
        \addtolength\@tempdimb{-\@tempdimc}%
      \fi%
      \edef\tud@cdgeometry@hmargin{%
        left=\the\@tempdima,%
        textwidth=\the\@tempdimb,%
        \tud@cdgeometry@mpincl,%
        marginparwidth=\the\@tempdimc,%
        marginparsep=\the\dimexpr.5\headsep\relax,%
        \if@reversemargin%
          reversemarginpar=true,%
        \else%
          reversemarginpar=false,%
        \fi%
        bindingoffset=\the\ta@bcor%
      }%
      \if@twoside%
        \ifcase\tud@cdgeometry@num\relax\or\or% true
          \appto\tud@cdgeometry@hmargin{,asymmetric}%
        \else% symmetric/twoside
          \appto\tud@cdgeometry@hmargin{,twoside}%
        \fi%
      \fi%
%    \end{macrocode}
% Für alle drei Varianten der vertikale Gleichanteil. Der Satzspiegel der 
% Version~v2.02 wird aus Gründen der Kompatibilität weiterhin vorgehalten.
%    \begin{macrocode}
      \tud@if@tudscrverlower{2.03}{%
        \edef\tud@cdgeometry@vmargin{%
          \tud@cdgeometry@hincl,%
          top=\the\dimexpr.5\tud@dim@both\relax,%
          headheight=\the\headheight,%
          headsep=\the\tud@dim@headsep,%
          bottom=\the\dimexpr.5\tud@dim@both+\tud@dim@extrabottommargin\relax,%
          \tud@cdgeometry@fincl,%
          footskip=\the\dimexpr\tud@dim@headsep+\footheight%
            -1.25\baselineskip\relax%
        }%
      }{%
        \edef\tud@cdgeometry@vmargin{%
          \tud@cdgeometry@hincl,%
          top=\the\tud@dim@slimmargin,%
          headheight=\the\headheight,%
          headsep=\the\headsep,%
          bottom=\the\dimexpr\tud@dim@widemargin%
            +\tud@dim@extrabottommargin\relax,%
          \tud@cdgeometry@fincl,%
          footskip=\the\dimexpr\tud@dim@footsep+\footheight\relax%
        }%
      }%
      \edef\tud@cdgeometry@tudmargin{%
        top=\the\dimexpr\tud@dim@topmargin+\tud@dim@barheight%
          +\tud@dim@headsep\relax,%
        headheight=\the\dimexpr\tud@dim@topmargin+\tud@dim@barheight%
          -\tud@dim@logoy\relax,%
        headsep=\the\tud@dim@headsep,%
        ignorehead%
      }%
%    \end{macrocode}
% Es wird die Differenz der Höhen zwischen TUD-Kopf und Standardkopfzeile
% für den Satzspiegel des \CDs berechnet.
%    \begin{macrocode}
      \setlength\tud@dim@areadiff{%
        \dimexpr\tud@dim@topmargin+\tud@dim@barheight+\tud@dim@headsep%
          -\tud@dim@slimmargin\relax%
      }%
%    \end{macrocode}
% Für die Kompatibilitätsvariante wieder mal die Extrawurst.
%    \begin{macrocode}
      \tud@if@tudscrverlower{2.03}{%
        \setlength\tud@dim@areadiff{%
          \dimexpr\tud@dim@topmargin+\tud@dim@barheight+\tud@dim@headsep%
            -.5\tud@dim@both\relax%
        }%
%    \end{macrocode}
% Wird die Fußzeile zum Satzspiegel gerechnet, ist für Seiten mit \DDC-Fuß 
% etwas Handarbeit notwendig, damit dieser nicht allzu weit nach oben ragt.
%    \begin{macrocode}
        \setlength\tud@dim@ddcdiff{.6\tud@dim@topmargin}%
        \edef\tud@cdgeometry@ddcmargin{%
          \if@fincl%
            bottom=\the\dimexpr.5\tud@dim@both+\tud@dim@extrabottommargin%
              +\tud@dim@ddcdiff+\tud@dim@headsep+\footheight%
              -1.25\baselineskip\relax,%
          \else%
            bottom=\the\dimexpr.5\tud@dim@both+\tud@dim@extrabottommargin%
              +\tud@dim@ddcdiff\relax,%
          \fi%
          footskip=\the\dimexpr\tud@dim@headsep+\footheight%
            -1.25\baselineskip+\tud@dim@ddcdiff\relax,%
        }%
      }{}%
    \fi%
%    \end{macrocode}
% Es wird die Differenz der Höhen zwischen TUD-Kopf und Standardkopfzeile
% für den Satzspiegel des \CDs berechnet. Außerdem wird die standardmäßige
% vertikale Verschiebung der Überschriften festgelegt, wobei hier insbesondere 
% auf die Gestaltungshöhe DIN~A5 geachtet werden muss.
%    \begin{macrocode}
    \ifdim\tud@dim@areadiff<\z@\relax\setlength\tud@dim@areadiff{\z@}\fi%
    \global\tud@dim@areadiff=\tud@dim@areadiff%
    \if@tud@cdgeometry@adjust%
      \setlength\tud@dim@headingsvskip{.3\tud@dim@topmargin}%
    \else%
      \setlength\tud@dim@headingsvskip{.6\tud@dim@topmargin}%
    \fi%
    \global\tud@dim@headingsvskip=\tud@dim@headingsvskip%
%    \end{macrocode}
% Für den Satzspiegel der Version~v2.02 wird außerdem die Länge für den höheren 
% Seitenfuß gesetzt.
%    \begin{macrocode}
    \tud@if@tudscrverlower{2.03}{%
      \ifdim\tud@dim@ddcdiff<\z@\relax\setlength\tud@dim@ddcdiff{\z@}\fi%
      \global\tud@dim@ddcdiff=\tud@dim@ddcdiff%
    }{}%
%    \end{macrocode}
% Es wird \cs{tud@cdgeometry@@process} aufgerufen, was die zuvor definierten
% Hilfsmakros nutzt, um alle benötigten Seitenlayouts optionsabhängig zu
% erstellen.
%    \begin{macrocode}
    \tud@cdgeometry@@process%
  }%
%    \end{macrocode}
% Der Befehl \cs{tud@cdgeometry@@process} setzt mit den zuvor definierten
% Hilfsmakros die \pkg{geometry}"=Optionen für sowohl die seitlichen als auch
% die oberen sowie unteren Seitenränder und inkludiert ggf. Kopf- und Fußzeile
% in den Satzspiegel. Die unterschiedlichen Layouts sind dabei \opt{tudddc} für
% TUD-Kopf und \DDC-Fuß, \opt{tudpage} für den alleinigen TUD-Kopf sowie
% \opt{tudarea} für den normalen bzw. mit \pkg{typearea} berechneten
% Satzspiegel.
%    \begin{macrocode}
  \newcommand*\tud@cdgeometry@@process{%
%    \end{macrocode}
% Für den Satzspiegel der Version~v2.02 wird als erstes der Satzspiegel für den
% TUD-Kopf zusammen mit dem \DDC-Fuß erstellt. Das Einbeziehen der Fußzeile in
% den Satzspiegel erfolgt nicht ggf. über die Option \opt{includefoot} sondern 
% manuell bei der Definition von \cs{tud@cdgeometry@ddcmargin}.
%    \begin{macrocode}
    \eappto\tud@cdgeometry@hmargin{,layouthoffset=\the\Gm@layouthoffset}%
    \eappto\tud@cdgeometry@vmargin{,layoutvoffset=\the\Gm@layoutvoffset}%
    \tud@if@tudscrverlower{2.03}{%
      \edef\@tempa{%
        \tud@cdgeometry@hmargin,%
        \tud@cdgeometry@vmargin,%
        \tud@cdgeometry@tudmargin,%
        \tud@cdgeometry@ddcmargin,%
        ignorehead,ignorefoot%
      }%
      \tud@newgeometry{\@tempa}%
      \tud@savegeometry{tudareaddc}%
    }{}%
%    \end{macrocode}
% Danach folgt der Seitenstil, mit dem TUD-Kopf und der Standardfußzeile.
%    \begin{macrocode}
    \edef\@tempa{%
      \tud@cdgeometry@hmargin,%
      \tud@cdgeometry@vmargin,%
      \tud@cdgeometry@tudmargin%
    }%
    \tud@newgeometry{\@tempa}%
    \tud@savegeometry{tudarea}%
%    \end{macrocode}
% Als letztes wird der Standardsatzspiegel erstellt.
%    \begin{macrocode}
    \edef\@tempa{%
      \tud@cdgeometry@hmargin,%
      \tud@cdgeometry@vmargin%
    }%
    \tud@newgeometry{\@tempa}%
    \tud@savegeometry{typearea}%
%    \end{macrocode}
% Falls die (abermalige) Erstellung der Satzspiegel im Dokument erfolgt, sollte 
% anschließend auch der richtige Satzspiegel wieder ausgewählt werden.
%    \begin{macrocode}
    \if@atdocument%
      \ifstr{\tud@currentgeometry}{typearea}{}{%
        \expandafter\tud@loadgeometry\expandafter{\tud@currentgeometry}%
      }%
    \fi%
  }%
%    \end{macrocode}
% \end{macro}^^A \tud@cdgeometry@@process
% \end{macro}^^A \tud@cdgeometry@process
% \begin{macro}{\tud@cdgeometry@hincl}
% \changes{v2.02}{2014/06/23}{geändert für das Paket \pkg{scrlayer-scrpage}}^^A
% \begin{macro}{\tud@cdgeometry@fincl}
% \begin{macro}{\tud@cdgeometry@mpincl}
% \changes{v2.04}{2015/03/09}{neu}^^A
% Diese Hilfsmakros werten die Optionen für das Einbeziehen von Kopf- und
% Fußzeile sowie der Randnotizen aus.
%    \begin{macrocode}
  \newcommand*\tud@cdgeometry@hincl{%
    \if@hincl%
      includehead=true%
    \else%
      includehead=false%
    \fi%
  }%
  \newcommand*\tud@cdgeometry@fincl{%
    \if@fincl%
      includefoot=true%
    \else%
      includefoot=false%
    \fi%
  }%
  \newcommand*\tud@cdgeometry@mpincl{%
    \if@mincl%
      includemp=true%
    \else%
      includemp=false%
    \fi%
  }%
%    \end{macrocode}
% \end{macro}^^A \tud@cdgeometry@mpincl
% \end{macro}^^A \tud@cdgeometry@fincl
% \end{macro}^^A \tud@cdgeometry@hincl
% Damit sind alle notwendigen Satzspiegel für die unterschiedlichen Seitenstile 
% definiert.
%    \begin{macrocode}
}
%    \end{macrocode}
% \begin{macro}{\tud@BeforeSelectAnyPageStyle}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \changes{v2.04}{2015/04/21}{Auswahl der Schriften für Fußbereich ergänzt}^^A
% \begin{macro}{\tud@currentgeometry}
% \changes{v2.02}{2014/06/23}{neu}^^A
% Mit \cs{tud@BeforeSelectAnyPageStyle} wird beim Umschalten des Seitenstils
% gegebenenfalls der Satzspiegel geändert. Es wird der aktivierte Satzspiegel 
% in dem Makro \cs{tud@currentgeometry} gesichert, um darauf zu einem späteren
% Zeitpunkt prüfen zu können.
%
% Für den Fall, dass das Dokument nicht ausschließlich mit dem Kopf im \CD
% auf jeder Seite gesetzt wird, muss der komplette vertikale Satzspiegel
% angepasst werden, sonst wäre der obere Rand optisch viel zu groß. Hierfür
% wird das Paket \pkg{geometry} genutzt. Durch \cs{tud@cdgeometry@process} 
% werden zwei~-- für die KOmpatibilitätsvariante drei~-- Layouts erstellt.
% Diese können mit \cs{loadgeometry}\marg{Stil} geladen werden.
%    \begin{macrocode}
\newcommand*\tud@currentgeometry{}
\newcommand*\tud@BeforeSelectAnyPageStyle[1]{%
%    \end{macrocode}
% Der \pgs{tudheadings}-Seitenstil wird mit dem Befehl \cs{newpairofpagestyles}
% derart definiert, dass zwischen \pgs{tudheadings} und \pgs{plain.tudheadings}
% auch mit \LaTeX-Standardseitenstilen \pgs{headings} bzw. \pgs{plain} 
% umgeschaltet werden kann. Dies wird hiermit beachtet.
%    \begin{macrocode}
  \ifstr{#1}{\GetRealPageStyle{#1}}{%
%    \end{macrocode}
% Für den Fall, das ein \pgs{tudheadings}-Seitenstil geladen werden soll, muss 
% der dazugehörige Satzspiegel ausgewählt werden\dots
%    \begin{macrocode}
    \tud@if@tudheadings{#1}{%
%    \end{macrocode}
% \dots wobei in der Version~v2.02 zwei unterschiedliche existierten, und 
% abhängig von der Verwendung des \DDC-Logos im Fuß waren.
%    \begin{macrocode}
      \tud@if@tudscrverlower{2.03}{%
%    \end{macrocode}
% In diesem Fall werden die Seitenfußeinstellungen mit \cs{tud@ddc@check} in
% \cs{@tempb} geschrieben und abhängig davon der richtige Satzspiegel geladen. 
% Dabei wird zuvor mit dem Wert aus \cs{tud@currentgeometry} geprüft, ob dies 
% überhaupt notwendig ist.
%    \begin{macrocode}
        \tud@ddc@check%
%    \end{macrocode}
% Das \DDC-Logo im Fuß ist nicht aktiviert.
%    \begin{macrocode}
        \ifcase\@tempb\relax% \tud@ddc@foot@num=false
          \ifstr{\tud@currentgeometry}{tudarea}{}{%
            \tud@loadgeometry{tudarea}%
            \gdef\tud@currentgeometry{tudarea}%
          }%
%    \end{macrocode}
% Das \DDC-Logo im Fuß ist aktiviert.
%    \begin{macrocode}
        \else% \tud@ddc@foot@num!=false
          \ifstr{\tud@currentgeometry}{tudareaddc}{}{%
            \tud@loadgeometry{tudareaddc}%
            \gdef\tud@currentgeometry{tudareaddc}%
          }%
        \fi%
%    \end{macrocode}
% Ab der Version~v2.03 ist nur noch ein Satzspiegel vonnöten.
%    \begin{macrocode}
      }{%
        \ifstr{\tud@currentgeometry}{tudarea}{}{%
          \tud@loadgeometry{tudarea}%
          \gdef\tud@currentgeometry{tudarea}%
        }%
      }%
%    \end{macrocode}
% Die Länge \cs{tud@dim@areavskip} gibt an, wie groß die Differenz zwischen 
% Kopfhöhe zwischen aktuellem und dem speziellen \pgs{tudheadings}-Seitenstil 
% ist. Da diese in diesem Fall identisch sind, wird die Länge zu \cs{z@} 
% gesetzt.
%    \begin{macrocode}
      \setlength\tud@dim@areavskip{\z@}%
%    \end{macrocode}
% Im Seitenfuß wird für die Seitenzahl und ggf. die Kolumnentitel die passende 
% Schrift verwendet.
%    \begin{macrocode}
      \tud@font@koma@set{pagefoot}{\usekomafont{tudheadings}}%
      \tud@font@koma@set{pagenumber}{\usekomafont{tudheadings}}%
%    \end{macrocode}
% Dies ist der Fall, wenn kein \pgs{tudheadings}-Seitenstil geladen werden soll.
% Zusätzlich zum Satzspeigel wird außerdem der Seitenstil \pgs{empty} 
% zurückgesetzt.
%    \begin{macrocode}
    }{%
      \ifstr{\tud@currentgeometry}{typearea}{}{%
        \tud@loadgeometry{typearea}%
        \gdef\tud@currentgeometry{typearea}%
      }%
%    \end{macrocode}
% Die Länge \cs{tud@dim@areavskip} wird auf den berechneten Wert gesetzt. 
% Nur für den Fall, dass die Kopfzeile zum Satzspiegel gerechnet wird und 
% dieser nicht durch \pkg{typearea} berechnet wurde, muss diese Länge etwas
% angepasst werden.
%    \begin{macrocode}
      \setlength\tud@dim@areavskip{\tud@dim@areadiff}%
      \ifnum\tud@cdgeometry@num>\@ne\relax% true/symmetric/twoside
        \if@hincl%
          \addtolength\tud@dim@areavskip{%
            \dimexpr-\headheight-\tud@dim@headsep\relax%
          }%
        \fi%
      \fi%
%    \end{macrocode}
% Die Schriften für Seitenzahl und Kolumnentitel werden zurückgesetzt.
%    \begin{macrocode}
      \tud@font@koma@unset{pagefoot}%
      \tud@font@koma@unset{pagenumber}%
    }%
%    \end{macrocode}
% Die Länge \cs{tud@dim@areavskip} wird vorsichtshalber global gesetzt.
%    \begin{macrocode}
    \global\tud@dim@areavskip=\tud@dim@areavskip%
  }{}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@currentgeometry
% \end{macro}^^A \tud@BeforeSelectAnyPageStyle
% Sollte das Laden des Paketes \pkg{geometry} verhindert werden, sind einige
% wenige Befehle vorzuhalten.
%    \begin{macrocode}
\TUD@UnwindPackage{geometry}{%
  \newif\ifGm@layout%
  \newif\ifGm@showcrop%
  \newif\ifGm@pass%
  \let\Gm@layoutheight\paperheight%
  \let\Gm@layoutwidth\paperwidth%
  \let\Gm@layouthoffset\z@%
  \let\Gm@layoutvoffset\z@%
  \renewcommand*\tud@cdgeometry@process{\tud@cdgeometry@set}%
  \let\tud@BeforeSelectAnyPageStyle\@gobble%
}
%    \end{macrocode}
% \begin{macro}{\cleardoubleoddpageusingstyle}
% \begin{macro}{\cleardoubleevenpageusingstyle}
% \begin{macro}{\cleardoublepageusingstyle}
% Damit die Satzspiegelumstellungen nicht durchgeführt werden, wenn durch die 
% folgenden \KOMAScript-Befehle Leerseiten erzeugt werden, müssen diese minimal
% angepasst werden.
%    \begin{macrocode}
\patchcmd{\cleardoubleoddpageusingstyle}{\pagestyle}{%
  \let\tud@BeforeSelectAnyPageStyle\@gobble\pagestyle%
}{}{\tud@patch@wrn{cleardoubleoddpageusingstyle}}
\patchcmd{\cleardoubleevenpageusingstyle}{\pagestyle}{%
  \let\tud@BeforeSelectAnyPageStyle\@gobble\pagestyle%
}{}{\tud@patch@wrn{cleardoubleevenpageusingstyle}}
\patchcmd{\cleardoublepageusingstyle}{\pagestyle}{%
  \let\tud@BeforeSelectAnyPageStyle\@gobble\pagestyle%
}{}{\tud@patch@wrn{cleardoublepageusingstyle}}
%    \end{macrocode}
% \end{macro}^^A \cleardoublepageusingstyle
% \end{macro}^^A \cleardoubleevenpageusingstyle
% \end{macro}^^A \cleardoubleoddpageusingstyle
% \begin{macro}{\tud@ddc@enlargepage}
% \changes{v2.02}{2014/06/23}{neu}^^A
% Der Befehl wird nur für den Kompatibilitätsmodus zur Version~v2.02 benötigt 
% und für die Titelkopf- und Kapitelseiten verwendet. Er verkleinert die
% entsprechenden Seiten, wenn für diese mit dem Befehl \cs{thispagestyle} einer
% der \pgs{tudheadings}"=Seitenstile gewählt wird \emph{und} das \DDC-Logo im
% Fuß gesetzt werden soll. Der entsprechende Seitenstil kann im optionalen
% Argument angegeben werden, wenn der Befehl bedingt ausgeführt werden soll.
%    \begin{macrocode}
\tud@if@tudscrverlower{2.03}{%
  \newcommand*\tud@ddc@enlargepage[1][]{%
    \tud@if@tudheadings{#1}{%
      \ifstr{\tud@currentgeometry}{tudareaddc}{}{%
        \tud@ddc@check%
        \ifcase\@tempb\relax\else% \tud@ddc@foot@num!=false
          \enlargethispage{-\tud@dim@ddcdiff}%
        \fi%
      }%
    }{}%
  }%
}{}
%    \end{macrocode}
% \end{macro}^^A \tud@ddc@enlargepage
% \begin{macro}{\tud@AfterChangingArea}
% \changes{v2.04}{2015/03/10}{neu}^^A
% Der Befehl \cs{AfterCalculatingTypearea} wird durch das Paket \pkg{typearea}
% bereitgestellt. Die durch \pkg{typearea} berechneten Längenwerte für den
% Satzspiegel werden zur Weiterverarbeitung gesichert. Für die Erstellung des
% Satzspiegels wird das Paket \pkg{geometry} verwendet. Bei der entsprechenden
% Option (\opt{geometry=no}) wird jedoch der von \pkg{typearea} berechnete
% Satzspiegel an \pkg{geometry} weitergereicht. Somit wird es möglich,
% unabhängig vom genutzten Paket\footnote{\pkg{typearea} oder \pkg{geometry}}
% zur Festlegung des Satzspiegels, diesen innerhalb des Dokumentes zu ändern.
%    \begin{macrocode}
\newcommand*\tud@AfterChangingArea{%
  \tud@cdgeometry@process%
%    \end{macrocode}
% Nachder Änderung des Satzspiegels werden alle Logoboxen neu erstellt.
%    \begin{macrocode}
  \global\@tud@mainlogo@settrue%
%    \end{macrocode}
% Damit Änderungen am Satzspiegel im Dokument sicher übernommen werden, wird 
% das Setzen des Satzspiegels forciert. Dafür wird \cs{tud@currentgeometry} 
% zurückgesetzt und anschließend der aktuelle Seitenstil erneut geladen, um das 
% erneute und korrekte Ausführen von \cs{tud@BeforeSelectAnyPageStyle} zu 
% erzwingen.
%    \begin{macrocode}
  \gdef\tud@currentgeometry{}%
  \expandafter\pagestyle\expandafter{\currentpagestyle}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@AfterChangingArea
% \begin{macro}{\tud@recalctypearea}
% \changes{v2.05}{2015/11/29}{neu}^^A
% Nur falls \pkg{typearea} zum Einsatz kommt, wird am Ende der Präambel die 
% Satzspiegelberechnung mit \cs{recalctypearea} angestoßen, ansonsten wird 
% bloß \cs{tud@AfterChangingArea} ausgeführt.
%    \begin{macrocode}
\newcommand*\tud@recalctypearea{%
  \ifcase\tud@cdgeometry@num\relax%
    \csname @ta@usegeometryfalse\endcsname%
    \ifGm@layout%
      \tud@AfterChangingArea%
    \else%
      \recalctypearea%
    \fi%
  \else%
    \tud@AfterChangingArea%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \tud@recalctypearea
% \begin{macro}{\tud@cdgeometry@custom}
% \changes{v2.05}{2016/03/06}{neu}^^A
% \begin{macro}{\geometry}
% \begin{macro}{\restoregeometry}
% \begin{macro}{\Gm@changelayout}
% Für einen benutzerdefinierten Satzspiegel ist es notwendig, die durch den 
% Anwender in der Präambel getätigten Einstellungen zu sichern und am Ende der
% Präambel für die unterschidlichen, durch die Klasse benötigten Satzspiegel
% der einzelnen Seitenstile umzusetzen. Dabei werden auch etwaige Optionen von
% \KOMAScript{} beachtet.
% \ToDo{Patcherei überarbeiten, \cs{CheckCommand}}[v2.05]
%    \begin{macrocode}
\@ifpackageloaded{geometry}{\@tempswatrue}{\@tempswafalse}
\if@tempswa
  \newcommand*\tud@cdgeometry@custom{}%
  \apptocmd{\geometry}{%
    \ifbool{@tud@x@geometry@enabled}{\appto\tud@cdgeometry@custom{,#1}}{}%
  }{}{\tud@patch@wrn{geometry}}%
%    \end{macrocode}
% Sollte im Dokument durch den Anwender der Satzspiegel manuell geändert 
% werden, muss darauf reagiert und die unterschiedlichen Satzspiegel der Klasse 
% angepasst werden. Hierfür wird am Ende von \cs{Gm@changelayout} ein Patch 
% eingehängt.
%    \begin{macrocode}
  \apptocmd{\Gm@changelayout}{%
    \ifboolexpr{bool {@tud@x@geometry@enabled} and bool {@atdocument}}{%
      \ifnum\tud@cdgeometry@num=\@ne\relax%
        \tud@AfterChangingArea%
      \else%
        \expandafter\tud@loadgeometry\expandafter{\tud@currentgeometry}%
      \fi%
    }{}%
  }{}{\tud@patch@wrn{Gm@changelayout}}%
%    \end{macrocode}
% Bei der Verwendung von \cs{restoregeometry} wird der patch deaktiviert.
%    \begin{macrocode}
  \pretocmd{\restoregeometry}{%
    \@tud@x@geometry@enabledfalse%
  }{}{\tud@patch@wrn{restoregeometry}}%
  \apptocmd{\restoregeometry}{%
    \@tud@x@geometry@enabledtrue%
  }{}{\tud@patch@wrn{restoregeometry}}%
%    \end{macrocode}
% Am Ende der Präambel wird der Satzspiegel des Dokumentes gesetzt.
%    \begin{macrocode}
  \AtEndPreamble{%
%    \end{macrocode}
% Ist die Option \opt{geometry=custom} nicht aktiv, werden mit \cs{geometry} 
% etwaig gemachte Einstellungen überschrieben.
%    \begin{macrocode}
    \ifnum\tud@cdgeometry@num=\@ne\relax\else%
      \edef\tud@cdgeometry@custom{%
        left=\the\dimexpr\oddsidemargin+1in-\ta@bcor\relax,%
        textwidth=\the\textwidth,%
        marginparwidth=\the\marginparwidth,%
        marginparsep=\the\marginparsep,%
        bindingoffset=\the\ta@bcor,%
        \if@hincl%
          top=\the\dimexpr\topmargin+1in\relax,%
        \else%
          top=\the\dimexpr\topmargin%
            +\headheight+\headsep+1in\relax,%
        \fi%
        headheight=\the\headheight,%
        headsep=\the\headsep,%
        textheight=\the\textheight,%
        footskip=\the\footskip%
      }%
    \fi%
    \tud@newgeometry{%
      \tud@cdgeometry@mpincl,%
      \if@reversemargin%
        reversemarginpar=true,%
      \else%
        reversemarginpar=false,%
      \fi%
      bindingoffset=\the\ta@bcor,%
      \tud@cdgeometry@hincl,%
      \tud@cdgeometry@fincl,%
      \tud@cdgeometry@custom,%
      driver=none%
    }%
  }%
\fi
%    \end{macrocode}
% \end{macro}^^A \Gm@changelayout
% \end{macro}^^A \restoregeometry
% \end{macro}^^A \geometry
% \end{macro}^^A \tud@cdgeometry@custom
% Damit alle Satzspiegeleinstellungen korrekt vorgenommen und auch alle
% Klassenoptionen korrekt verarbeitet werden, wird die Berechnung erstmalig mit
% \cs{AtEndPreamble} am Ende der Präambel ausgeführt. Nachfolgend erstellt
% \cs{tud@cdgeometry@process} alle benötigten Satzspiegel. Durch das Setzen des
% Seitenstils wird der jeweils richtige bzw. benötigte Satzspiegel ausgewählt.
% Dies geschieht \emph{nicht}, wenn die \cls{standalone}-Klasse mit der Option
% \opt{crop} geladen wurde, um die Seitenränder nicht zu ändern.
%    \begin{macrocode}
\AtEndPreamble{%
  \if@tud@x@standalone@crop%
    \pagestyle{empty}%
    \hoffset=-72.27pt%
    \voffset=-72.27pt%
    \topmargin=0pt%
    \headheight=0pt%
    \headsep=0pt%
    \marginparsep=0pt%
    \marginparwidth=0pt%
    \footskip=0pt%
    \marginparpush=0pt%
    \oddsidemargin=0pt%
    \evensidemargin=0pt%
    \topskip=0pt%
    \textheight=\maxdimen%
    \let\tud@recalctypearea\relax%
  \else%
%    \end{macrocode}
% Nach einer Neuberechnung oder Änderung des Satzspiegels durch \pkg{typearea} 
% werden die für die Seitenstile benötigten Satzspiegel mit \pkg{geometry} neu
% erstellt.
% \ToDo{Test für \cs{AfterRestoreareas} entfernen}[v3.18]
%    \begin{macrocode}
    \AfterCalculatingTypearea{\tud@AfterChangingArea}%
    \AfterSettingArea{\tud@AfterChangingArea}%
    \ifundef{\AfterRestoreareas}{}{%
      \AfterRestoreareas{\tud@AfterChangingArea}%
    }%
%    \end{macrocode}
% Der Kopf im \CD der \TnUD erfordert einen eigenen Satzspiegel, der ggf. durch 
% \cs{tud@BeforeSelectAnyPageStyle} aktiviert bzw. deaktiviert wird.
%    \begin{macrocode}
    \BeforeSelectAnyPageStyle{\tud@BeforeSelectAnyPageStyle{#1}}%
    \tud@recalctypearea%
  \fi%
  \tud@bleedmargin@set%
}
%    \end{macrocode}
% \begin{macro}{\tud@parameters@pagestyle}
% Im Folgenden werden die einzelnen Parameter für die \env{tudpage}"=Umgebung
% definiert. Die Parameter für Kopf- und Fußzeile werden nicht nur für die 
% \env{tudpage}-Umgebung sondern auch noch für Titel und Umschlagseite
% verwendet, weshalb deren Definitionen zur einfacheren Wiederverwendung in das
% Makro \cs{tud@parameters@pagestyle} ausgelagert werden.
%    \begin{macrocode}
\newcommand*\tud@parameters@pagestyle[1]{%
%    \end{macrocode}
% \begin{parameter}{cdfont}
% Die Option \opt{cdfont} bestimmt, ob die Schriften des \CDs oder aber die
% standardmäßigen Serifenlosen für die Auszeichnugen in der Kopfzeile und
% Serifen im Inhalt verwendet werden.
%    \begin{macrocode}
  \TUD@parameter@define{cdfont}[true]{\TUDoption{cdfont}{#1}}%
%    \end{macrocode}
% \end{parameter}^^A cdfont
% \begin{parameter}{cdhead}
% \changes{v2.03}{2015/01/28}{\val{barfont} und \val{widehead} überlagert}^^A
% Mit dem Parameter \val{cdhead} kann die Verwendung der Schriften des \CDs
% aktiviert werden, wenn diese im Fließtext nicht zum Einsatz kommen. Die
% Breite des Querbalkens kann über diesen Parameter ebenfalls geändert werden.
%    \begin{macrocode}
  \TUD@parameter@define{cdhead}[true]{\TUDoption{cdhead}{#1}}%
%    \end{macrocode}
% \end{parameter}^^A cdhead
% \begin{parameter}{cdfoot}
% \changes{v2.03}{2015/01/30}{neu}^^A
% Über \val{cdfoot} kann gg. die Hintergrundfarbe sowie die Standardfußzeile 
% des \CDs aktiviert werden.
%    \begin{macrocode}
  \TUD@parameter@define{cdfoot}[true]{\TUDoption{cdfoot}{#1}}%
%    \end{macrocode}
% \end{parameter}^^A cdfoot
% \begin{parameter}{headlogo}
% \changes{v2.03}{2015/01/28}{neu}^^A
% \begin{parameter}{footlogo}
% \changes{v2.03}{2015/01/28}{neu}^^A
% Das Zweit- und die Drittlogos können ebenfalls lokal geändert werden.
%    \begin{macrocode}
  \TUD@parameter@define{headlogo}{\headlogo{#1}}%
  \TUD@parameter@define{footlogo}{\footlogo{#1}}%
%    \end{macrocode}
% \end{parameter}^^A footlogo
% \end{parameter}^^A headlogo
% \begin{parameter}{ddc}
% \changes{v2.02}{2014/08/16}{neu}^^A
% \begin{parameter}{ddchead}
% \begin{parameter}{ddcfoot}
% Mit diesen Parametern kann das \DDC-Logo im Kopf bzw. Fuß eingeblendet werden.
%    \begin{macrocode}
  \TUD@parameter@define{ddc}[true]{\TUDoption{ddc}{#1}}%
  \TUD@parameter@define{ddchead}[true]{\TUDoption{ddchead}{#1}}%
  \TUD@parameter@define{ddcfoot}[true]{\TUDoption{ddcfoot}{#1}}%
%    \end{macrocode}
% \end{parameter}^^A ddcfoot
% \end{parameter}^^A ddchead
% \end{parameter}^^A ddc
% \begin{parameter}{cdfonts}
% \begin{parameter}{tudfonts}
% \begin{parameter}{barfont}
% \begin{parameter}{widehead}
% \begin{parameter}{tudfoot}
% \begin{parameter}{logo}
% Für die Kompatibilität werden auch veraltete Parameter bereitgestellt.
%    \begin{macrocode}
  \TUD@parameter@define{cdfonts}[true]{\TUDoption{cdfonts}{#1}}%
  \TUD@parameter@define{tudfonts}[true]{\TUDoption{tudfonts}{#1}}%
  \TUD@parameter@define{barfont}[true]{\TUDoption{barfont}{#1}}%
  \TUD@parameter@define{widehead}[true]{\TUDoption{widehead}{#1}}%
  \TUD@parameter@define{tudfoot}[true]{\TUDoption{tudfoot}{#1}}%
  \TUD@parameter@let{logo}{headlogo}%
%    \end{macrocode}
% \end{parameter}^^A logo
% \end{parameter}^^A tudfoot
% \end{parameter}^^A widehead
% \end{parameter}^^A barfont
% \end{parameter}^^A tudfonts
% \end{parameter}^^A cdfonts
% Damit sind alle notwendigen Parameter für die Kopf- und Fußzeile der Seiten
% im Stil \pgs{tudheadings} definiert.
%    \begin{macrocode}
}
%    \end{macrocode}
% \end{macro}^^A \tud@parameters@pagestyle
%
% \iffalse
%<*book|report|article>
% \fi
%
% \begin{environment}{tudpage}
% \changes{v2.02}{2014/06/23}{an Paket \pkg{scrlayer-scrpage} angepasst}^^A
% \begin{macro}{\tud@envir@ps}
% \begin{macro}{\tud@envir@selectps}
% \changes{v2.02}{2014/07/19}{neu}^^A
% \begin{macro}{\tud@currentpagestyle@set}
% \changes{v2.02}{2014/07/18}{neu}^^A
% \begin{macro}{\tud@currentpagestyle@reset}
% \changes{v2.02}{2014/07/18}{neu}^^A
% \changes{v2.03}{2015/01/09}{Bugfix}^^A
% \begin{macro}{\tud@currentpagestyle@value}
% Durch den hohen TUD-Kopf muss bei der Verwendung dessens das Seitenlayout
% temporär umgeschaltet werden, um die Höhe des Satzspiegels zu verringern.
% Dies geschieht innerhalb dieser Umgebung reversibel mit \cs{pagestyle}.
% Dabei wird mit \cs{loadgeometry} ein Seitenumbruch erzwungen und der 
% benötigte Satzspiegel geladen.
%
% Die Befehle \cs{tud@currentpagestyle@set} und \cs{tud@currentpagestyle@reset}
% sind für die Sicherung und Wiederherstellung des vor der Umgebung geladenen
% Seitenstils verantwortlich.
%
% Zu Beginn der Umgebung werden die weiter unten beschriebenen Optionen für
% diese Umgebung mit \cs{TUD@parameter@set} ausgeführt. Nach dem Beenden der
% Umgebung wird nache einem weiteren Seitenumbruch das Standardseitenlayout
% wiederhergestellt. Die gewünschte Sprache der Umgebung kann als einzelner
% Wert ohne Schlüssel angegben werden.
%    \begin{macrocode}
\newcommand*\tud@envir@ps{tudheadings}
\newcommand*\tud@envir@selectps{%
  \expandafter\pagestyle\expandafter{\tud@envir@ps}%
  \ifstr{\GetRealPageStyle{\tud@envir@ps}}{empty}{%
    \renewcommand*\titlepagestyle{empty}%
%<*book|report>
    \renewcommand*\partpagestyle{empty}%
    \renewcommand*\chapterpagestyle{empty}%
%</book|report>
    \renewcommand*\indexpagestyle{empty}%
  }{}%
  \ifstr{\GetRealPageStyle{\tud@envir@ps}}{empty.tudheadings}{%
    \renewcommand*\titlepagestyle{empty.tudheadings}%
%<*book|report>
    \renewcommand*\partpagestyle{empty.tudheadings}%
    \renewcommand*\chapterpagestyle{empty.tudheadings}%
%</book|report>
    \renewcommand*\indexpagestyle{empty.tudheadings}%
  }{}%
}
\newcommand*\tud@currentpagestyle@value{}
\newcommand*\tud@currentpagestyle@set{%
  \ifdefvoid{\tud@currentpagestyle@value}{%
    \xdef\tud@currentpagestyle@value{\currentpagestyle}%
  }{}%
}
\newcommand*\tud@currentpagestyle@reset{%
  \ifdefvoid{\tud@currentpagestyle@value}{}{%
    \expandafter\pagestyle\expandafter{\tud@currentpagestyle@value}%
    \let\tud@currentpagestyle@value\relax%
  }%
}
\NewEnviron{tudpage}[1][]{%
%    \end{macrocode}
% Um beim Umschalten des Seitenstils den aktuellen selbst zu behalten, wird
% dieser im Hilfsmakro \cs{tud@currentpagestyle@value} gespeichert.
%    \begin{macrocode}
  \tud@currentpagestyle@set%
  \clearpage%
  \def\tud@envir@ps{tudheadings}%
  \TUD@parameter@set{tudpage}{#1}%
  \tud@envir@selectps%
  \tud@multicols@check%
%    \end{macrocode}
% Falls das \pkg{multicol}-Paket geladen ist und eine Spaltenanzahl angegeben
% ist, wird die entsprechende Umgebung gesartet, mit \cs{BODY} der Inhalt der
% \env{tudpage}-Umgebung ausgegeben und anschließend gegebenenfalls die
% \env{multicols}-Umgebung beendet.
%    \begin{macrocode}
  \ifnum\tud@multicols@num>\@ne\relax%
    \begin{multicols}{\tud@multicols@num}%
  \fi%
  \BODY%
  \ifnum\tud@multicols@num>\@ne\relax%
    \end{multicols}%
  \fi%
%    \end{macrocode}
% Am Ende der Umgebung wird der vorhergehende Seitenstil zurückgesetzt und der 
% dazugehörige Satzspiegel geladen. Dazu wird die Ausführung das Hilfsmakro
% \cs{@tempa} auf das Beenden der Umgebung mit \cs{aftergroup} verzögert.
%    \begin{macrocode}
}[%
  \aftergroup\tud@currentpagestyle@reset%
  \clearpage%
]
%    \end{macrocode}
% \end{macro}^^A \tud@currentpagestyle@value
% \end{macro}^^A \tud@currentpagestyle@reset
% \end{macro}^^A \tud@currentpagestyle@set
% \end{macro}^^A \tud@envir@selectps
% \end{macro}^^A \tud@envir@ps
% \end{environment}^^A tudpage
% Mit \cs{TUD@parameter}\marg{Family}\marg{\dots} wird die Parameterfamilie
% festgelegt und anschließend die Definitionen getätigt.
%    \begin{macrocode}
\TUD@parameter{tudpage}{%
%    \end{macrocode}
% \begin{parameter}{language}
% Mit diesem Parameter kann die Sprache in der Umgebung umgeschaltet werden. Die
% Sprache kann auch ohne den entsprechenden Schlüssel direkt als Parameter
% angegeben werden.
%    \begin{macrocode}
  \TUD@parameter@define{language}{\selectlanguage{#1}}%
%    \end{macrocode}
% \end{parameter} ^^A language
% \begin{parameter}{columns}
% Hiermit kann die Anzahl der Spalten für die Umgebung angegeben werden. Für 
% mehr als zwei Spalten muss das Paket \pkg{multicol} geladen werden. Die
% Spaltenanzahl kann auch ohne den entsprechenden Schlüssel direkt Parameter
% angegeben werden.
%    \begin{macrocode}
  \TUD@parameter@define{columns}{\cs@std@lock{tud@multicols@num}{#1}}%
%    \end{macrocode}
% \end{parameter} ^^A columns
% \begin{parameter}{pagestyle}
% \changes{v2.02}{2014/06/23}{neu}^^A
% \changes{v2.03}{2015/01/28}{\cs{tud@if@tudheadings} verwendet}^^A
% Mit diesem Parameter kann der verwendete Seitenstil eingestellt werden, wobei 
% einer der \pgs{tudheadings}-Seitenstile verwendet wird.
%    \begin{macrocode}
  \TUD@parameter@define{pagestyle}{%
    \tud@if@tudheadings{#1}{\renewcommand*\tud@envir@ps{#1}}{%
      \ifstr{#1}{empty}{\renewcommand*\tud@envir@ps{empty.tudheadings}}{%
      \ifstr{#1}{plain}{\renewcommand*\tud@envir@ps{plain.tudheadings}}{%
      \ifstr{#1}{headings}{\renewcommand*\tud@envir@ps{tudheadings}}{%
        \TUD@parameter@error{pagestyle}{%
          headings, plain, empty or any tudheadings page style type%
        }%
      }}}%
    }%
  }%
%    \end{macrocode}
% \end{parameter}^^A pagestyle
% Hier werden die Parameter für Kopf- und Fußzeile tatsächlich defniert.
%    \begin{macrocode}
  \tud@parameters@pagestyle{#1}%
%    \end{macrocode}
% Für den Fall, dass ein Wert nicht in der Schlüssel"=Wert"=Notation gegeben
% wird, erfolgt eine Sonderbehandlung durch \cs{TUD@parameter@defaulthandler},
% bei dererst auf eine Zahl geprüft wird und anschießend versucht wird, das
% Argument als Sprache zu setzen. Nach der Definition aller Parameter wird der
% Befehl \cs{TUD@parameter} und damit auch die aktuelle Parameterfamilie
% beendet.
%    \begin{macrocode}
  \TUD@parameter@handler{\TUD@parameter@defaulthandler{tudpage}{#1}}%
}
%    \end{macrocode}
%
% \iffalse
%</book|report|article>
%</class&body>
% \fi
%
% \Finale
%
\endinput
